"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;
const getEngine_1 = require("./getEngine");
async function getSecureRandomBytes(size) {
    let engine = (0, getEngine_1.getEngine)();
    if (engine.type === 'node') {
        return engine.crypto.randomBytes(size);
    }
    else if (engine.type === 'browser') {
        return Buffer.from(window.crypto.getRandomValues(new Uint8Array(size)));
    }
    else if (engine.type === 'fallback') {
        return Buffer.from(window.crypto.getRandomValues(new Uint8Array(size)));
    }
    else {
        throw Error('Unsupported');
    }
}
exports.getSecureRandomBytes = getSecureRandomBytes;
async function getSecureRandomWords(size) {
    let engine = (0, getEngine_1.getEngine)();
    if (engine.type === 'node') {
        let res = new Uint16Array(size);
        engine.crypto.randomFillSync(res);
        return res;
    }
    else if (engine.type === 'browser') {
        return window.crypto.getRandomValues(new Uint16Array(size));
    }
    else if (engine.type === 'fallback') {
        return window.crypto.getRandomValues(new Uint16Array(size));
    }
    else {
        throw Error('Unsupported');
    }
}
exports.getSecureRandomWords = getSecureRandomWords;
