"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sha256 = exports.sha256_fallback = void 0;
const jssha_1 = __importDefault(require("jssha"));
const getEngine_1 = require("./getEngine");
async function sha256_fallback(source) {
    let src;
    if (typeof source === 'string') {
        src = Buffer.from(source, 'utf-8').toString('hex');
    }
    else {
        src = source.toString('hex');
    }
    let hasher = new jssha_1.default('SHA-256', 'HEX');
    hasher.update(src);
    let res = hasher.getHash('HEX');
    return Buffer.from(res, 'hex');
}
exports.sha256_fallback = sha256_fallback;
async function sha256(source) {
    const engine = (0, getEngine_1.getEngine)();
    if (engine.type === 'node') {
        return engine.crypto.createHash('sha256').update(source).digest();
    }
    else if (engine.type === 'browser') {
        if (typeof source === 'string') {
            return Buffer.from(await crypto.subtle.digest("SHA-256", Buffer.from(source, 'utf-8')));
        }
        return Buffer.from(await crypto.subtle.digest("SHA-256", source));
    }
    return sha256_fallback(source);
}
exports.sha256 = sha256;
