/**
 * Return an element assigned to a given slot that matches the given selector
 */
export declare function findAssignedElement(slot: HTMLSlotElement, selector: string): HTMLElement | null;
/**
 * Return all elements assigned to a given slot that matches the given selector
 */
export declare function findAssignedElements(slot: HTMLSlotElement, selector: string): HTMLElement[];
/**
 * Emits a Custom Event
 */
export declare function emit(target: HTMLElement, evtType: string, evtData?: {}, shouldBubble?: boolean): void;
export declare type Constructor<T> = new (...args: any[]) => T;
export declare function addHasRemoveClass(element: HTMLElement): {
    addClass: (className: string) => void;
    removeClass: (className: string) => void;
    hasClass: (className: string) => boolean;
};
/**
 * Returns the eventâ€™s path which is an array of the objects on which listeners will be invoked
 */
export declare function eventPath(e: MouseEvent): EventTarget[];
