
/* eslint no-unused-vars: 0 */
import { ifDefined } from "lit-html/directives/if-defined.js";
import { html, svg, repeat, classMap, styleMap, unsafeHTML, scopeTag } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';

const main = (context, tags, suffix) => {
	const block0 = (context) => { return html`${ context.options ? block1(context) : undefined }${ context.shouldOpenValueStateMessagePopover ? block13(context) : undefined }`; };
const block1 = (context) => { return html`<${scopeTag("ui5-responsive-popover", tags, suffix)} hide-arrow _disable-initial-focus content-only-on-desktop placement-type="Bottom" horizontal-align="Left" @ui5-after-open="${ifDefined(context._afterOpen)}" @ui5-before-open="${ifDefined(context._beforeOpen)}" @ui5-after-close="${ifDefined(context._afterClose)}" @keydown="${context._onkeydown}"><div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><${scopeTag("ui5-button", tags, suffix)} class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${context._toggleRespPopover}"></${scopeTag("ui5-button", tags, suffix)}></div>${ context._isPhone ? block2(context) : undefined }</div>${ !context._isPhone ? block7(context) : undefined }<${scopeTag("ui5-list", tags, suffix)} mode="SingleSelectAuto" separators="None" @mousedown="${context._itemMousedown}" @ui5-item-press="${ifDefined(context._handleItemPress)}">${ repeat(context._syncedOptions, (item, index) => item._id || index, (item, index) => block12(item, index, context)) }</${scopeTag("ui5-list", tags, suffix)}></${scopeTag("ui5-responsive-popover", tags, suffix)}>`; };
const block2 = (context) => { return html`${ context.hasValueStateText ? block3(context) : undefined }`; };
const block3 = (context) => { return html`<div class="${classMap(context.classes.popoverValueState)} row ui5-select-value-state-dialog-header">${ context.shouldDisplayDefaultValueStateMessage ? block4(context) : block5(context) }</div>`; };
const block4 = (context) => { return html`${ifDefined(context.valueStateText)}`; };
const block5 = (context) => { return html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block6(item, index, context)) }`; };
const block6 = (item, index, context) => { return html`${ifDefined(item)}`; };
const block7 = (context) => { return html`${ context.hasValueStateText ? block8(context) : undefined }`; };
const block8 = (context) => { return html`<div class="${classMap(context.classes.popoverValueState)} ui5-select-value-state-popover-padding" style="${styleMap(context.styles.responsivePopoverHeader)}">${ context.shouldDisplayDefaultValueStateMessage ? block9(context) : block10(context) }</div>`; };
const block9 = (context) => { return html`${ifDefined(context.valueStateText)}`; };
const block10 = (context) => { return html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block11(item, index, context)) }`; };
const block11 = (item, index, context) => { return html`${ifDefined(item)}`; };
const block12 = (item, index, context) => { return html`<${scopeTag("ui5-li", tags, suffix)} id="${ifDefined(item.id)}-li" icon="${ifDefined(item.icon)}" ?selected="${item.selected}" ?focused="${item._focused}" ?disabled="${item.disabled}" ?aria-selected="${item.selected}" data-ui5-stable="${ifDefined(item.stableDomRef)}">${ifDefined(item.textContent)}</${scopeTag("ui5-li", tags, suffix)}>`; };
const block13 = (context) => { return html`<${scopeTag("ui5-popover", tags, suffix)} skip-registry-update _disable-initial-focus prevent-focus-restore no-padding hide-arrow class="ui5-valuestatemessage-popover" placement-type="Bottom"><div slot="header" class="ui5-responsive-popover-header ${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverHeader)}">${ context.shouldDisplayDefaultValueStateMessage ? block14(context) : block15(context) }</div></${scopeTag("ui5-popover", tags, suffix)}>`; };
const block14 = (context) => { return html`${ifDefined(context.valueStateText)}`; };
const block15 = (context) => { return html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block16(item, index, context)) }`; };
const block16 = (item, index, context) => { return html`${ifDefined(item)}`; };


	return block0(context);
};

export default main;