/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";

const block0 = (context, tags, suffix) => html`<${scopeTag("ui5-responsive-popover", tags, suffix)} id="${ifDefined(context._id)}-responsive-popover" class="ui5-time-picker-popover" placement-type="Bottom" horizontal-align="Left" allow-target-overlap _hide-header hide-arrow stay-open-on-scroll @ui5-after-close="${ifDefined(context.onResponsivePopoverAfterClose)}" @wheel="${context._handleWheel}" @keydown="${context._onkeydown}"><${scopeTag("ui5-time-selection", tags, suffix)} id="${ifDefined(context._id)}-time-sel" value="${ifDefined(context._timeSelectionValue)}" format-pattern="${ifDefined(context._formatPattern)}" .hideHours="${ifDefined(context.hideHours)}" .hideMinutes="${ifDefined(context.hideMinutes)}" .hideSeconds="${ifDefined(context.hideSeconds)}" .minutesStep="${ifDefined(context.minutesStep)}" .secondsStep="${ifDefined(context.secondsStep)}" .maxHours="${ifDefined(context.maxHours)}" .maxMinutes="${ifDefined(context.maxMinutes)}" .maxSeconds="${ifDefined(context.maxSeconds)}" @ui5-change="${ifDefined(context.onTimeSelectionChange)}"></${scopeTag("ui5-time-selection", tags, suffix)}><div slot="footer" class="ui5-time-picker-footer" @keydown=${context._onfooterkeydown}><${scopeTag("ui5-button", tags, suffix)} id="submit" design="Emphasized" @click="${context.submitPickers}">${ifDefined(context.submitButtonLabel)}</${scopeTag("ui5-button", tags, suffix)}><${scopeTag("ui5-button", tags, suffix)} id="close" design="Transparent" @click="${context.closePicker}">${ifDefined(context.cancelButtonLabel)}</${scopeTag("ui5-button", tags, suffix)}></div></${scopeTag("ui5-responsive-popover", tags, suffix)}>`;


export default block0;