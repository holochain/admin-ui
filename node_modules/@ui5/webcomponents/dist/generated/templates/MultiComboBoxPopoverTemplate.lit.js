
/* eslint no-unused-vars: 0 */
import { ifDefined } from "lit-html/directives/if-defined.js";
import { html, svg, repeat, classMap, styleMap, unsafeHTML, scopeTag } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';

const main = (context, tags, suffix) => {
	const block0 = (context) => { return html`<${scopeTag("ui5-responsive-popover", tags, suffix)} placement-type="Bottom" horizontal-align="Left" class="ui5-multi-combobox-all-items-responsive-popover" hide-arrow _disable-initial-focus @ui5-selection-change=${ifDefined(context._listSelectionChange)} @ui5-after-close=${ifDefined(context._toggle)} @ui5-after-open=${ifDefined(context._toggle)}>${ context._isPhone ? block1(context) : undefined }${ !context._isPhone ? block6(context) : undefined }<${scopeTag("ui5-list", tags, suffix)} separators="None" mode="MultiSelect" class="ui5-multi-combobox-all-items-list">${ repeat(context._filteredItems, (item, index) => item._id || index, (item, index) => block11(item, index, context)) }</${scopeTag("ui5-list", tags, suffix)}>${ context._isPhone ? block12(context) : undefined }</${scopeTag("ui5-responsive-popover", tags, suffix)}>${ context.hasValueStateMessage ? block13(context) : undefined } `; };
const block1 = (context) => { return html`<div slot="header" class="ui5-responsive-popover-header" style="${styleMap(context.styles.popoverHeader)}"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><${scopeTag("ui5-button", tags, suffix)} class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${context.togglePopover}"></${scopeTag("ui5-button", tags, suffix)}></div><div class="row"><div slot="header" class="input-root-phone" value-state="${ifDefined(context.valueState)}"><input .value="${ifDefined(context.value)}" inner-input placeholder="${ifDefined(context.placeholder)}" value-state="${ifDefined(context.valueState)}" @input="${context._inputLiveChange}" @change=${context._inputChange} aria-autocomplete="both" aria-labelledby="${ifDefined(context._id)}-hiddenText-nMore" aria-describedby="${ifDefined(context._id)}-valueStateDesc" /></div><${scopeTag("ui5-toggle-button", tags, suffix)} slot="header" class="ui5-multi-combobox-toggle-button" icon="multiselect-all" design="Transparent" ?pressed=${context._showAllItemsButtonPressed} ?disabled=${context.allItemsSelected} @click="${context.filterSelectedItems}"></${scopeTag("ui5-toggle-button", tags, suffix)}></div>${ context.hasValueStateMessage ? block2(context) : undefined }</div></div>`; };
const block2 = (context) => { return html`<div class="${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverValueStateMessage)}">${ context.shouldDisplayDefaultValueStateMessage ? block3(context) : block4(context) }</div>`; };
const block3 = (context) => { return html`${ifDefined(context.valueStateText)}`; };
const block4 = (context) => { return html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block5(item, index, context)) }`; };
const block5 = (item, index, context) => { return html`${ifDefined(item)}`; };
const block6 = (context) => { return html`${ context.hasValueStateMessage ? block7(context) : undefined }`; };
const block7 = (context) => { return html`<div slot="header" class="ui5-responsive-popover-header ${classMap(context.classes.popoverValueState)}" style=${styleMap(context.styles.popoverValueStateMessage)}>${ context.shouldDisplayDefaultValueStateMessage ? block8(context) : block9(context) }</div>`; };
const block8 = (context) => { return html`${ifDefined(context.valueStateText)}`; };
const block9 = (context) => { return html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block10(item, index, context)) }`; };
const block10 = (item, index, context) => { return html`${ifDefined(item)}`; };
const block11 = (item, index, context) => { return html`<${scopeTag("ui5-li", tags, suffix)} type="${ifDefined(context._listItemsType)}" additional-text=${ifDefined(item.additionalText)} ?selected=${item.selected} data-ui5-token-id="${ifDefined(item._id)}" data-ui5-stable="${ifDefined(item.stableDomRef)}">${ifDefined(item.text)}</${scopeTag("ui5-li", tags, suffix)}>`; };
const block12 = (context) => { return html`<div slot="footer" class="ui5-responsive-popover-footer"><${scopeTag("ui5-button", tags, suffix)} design="Transparent" @click="${context.togglePopover}">${ifDefined(context._dialogOkButton)}</${scopeTag("ui5-button", tags, suffix)}></div>`; };
const block13 = (context) => { return html`<${scopeTag("ui5-popover", tags, suffix)} skip-registry-update _disable-initial-focus prevent-focus-restore no-padding hide-arrow class="ui5-valuestatemessage-popover" placement-type="Bottom" horizontal-align="Left"><div slot="header" class="${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverHeader)}">${ context.shouldDisplayDefaultValueStateMessage ? block14(context) : block15(context) }</div></${scopeTag("ui5-popover", tags, suffix)}>`; };
const block14 = (context) => { return html`${ifDefined(context.valueStateText)}`; };
const block15 = (context) => { return html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block16(item, index, context)) }`; };
const block16 = (item, index, context) => { return html`${ifDefined(item)}`; };


	return block0(context);
};

export default main;