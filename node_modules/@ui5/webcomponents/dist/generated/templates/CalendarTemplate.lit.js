
/* eslint no-unused-vars: 0 */
import { ifDefined } from "lit-html/directives/if-defined.js";
import { html, svg, repeat, classMap, styleMap, unsafeHTML, scopeTag } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';

const main = (context, tags, suffix) => {
	const block0 = (context) => { return html`<div class="ui5-cal-root" @keydown=${context._onkeydown}><div id="${ifDefined(context._id)}-content" class="ui5-cal-content"><${scopeTag("ui5-daypicker", tags, suffix)} id="${ifDefined(context._id)}-daypicker" ?hidden="${context._isDayPickerHidden}" format-pattern="${ifDefined(context._formatPattern)}" .selectedDates="${ifDefined(context._selectedDatesTimestamps)}" ._hidden="${ifDefined(context._isDayPickerHidden)}" .primaryCalendarType="${ifDefined(context._primaryCalendarType)}" .selectionMode="${ifDefined(context.selectionMode)}" .minDate="${ifDefined(context.minDate)}" .maxDate="${ifDefined(context.maxDate)}" timestamp="${ifDefined(context._timestamp)}" ?hide-week-numbers="${context.hideWeekNumbers}" @ui5-change="${ifDefined(context.onSelectedDatesChange)}" @ui5-navigate="${ifDefined(context.onNavigate)}"></${scopeTag("ui5-daypicker", tags, suffix)}><${scopeTag("ui5-monthpicker", tags, suffix)} id="${ifDefined(context._id)}-MP" ?hidden="${context._isMonthPickerHidden}" format-pattern="${ifDefined(context._formatPattern)}" .selectedDates="${ifDefined(context._selectedDatesTimestamps)}" ._hidden="${ifDefined(context._isMonthPickerHidden)}" .primaryCalendarType="${ifDefined(context._primaryCalendarType)}" .minDate="${ifDefined(context.minDate)}" .maxDate="${ifDefined(context.maxDate)}" timestamp="${ifDefined(context._timestamp)}" @ui5-change="${ifDefined(context.onSelectedMonthChange)}" @ui5-navigate="${ifDefined(context.onNavigate)}"></${scopeTag("ui5-monthpicker", tags, suffix)}><${scopeTag("ui5-yearpicker", tags, suffix)} id="${ifDefined(context._id)}-YP" ?hidden="${context._isYearPickerHidden}" format-pattern="${ifDefined(context._formatPattern)}" .selectedDates="${ifDefined(context._selectedDatesTimestamps)}" ._hidden="${ifDefined(context._isYearPickerHidden)}" .primaryCalendarType="${ifDefined(context._primaryCalendarType)}" .minDate="${ifDefined(context.minDate)}" .maxDate="${ifDefined(context.maxDate)}" timestamp="${ifDefined(context._timestamp)}" @ui5-change="${ifDefined(context.onSelectedYearChange)}" @ui5-navigate="${ifDefined(context.onNavigate)}"></${scopeTag("ui5-yearpicker", tags, suffix)}></div><!-- Positioned above the content due to flex-direction:column-reverse, but physically here for tab order to work --><${scopeTag("ui5-calendar-header", tags, suffix)} id="${ifDefined(context._id)}-head" .primaryCalendarType="${ifDefined(context._primaryCalendarType)}" timestamp="${ifDefined(context._timestamp)}" .isPrevButtonDisabled="${ifDefined(context._previousButtonDisabled)}" .isNextButtonDisabled="${ifDefined(context._nextButtonDisabled)}" .isMonthButtonHidden="${ifDefined(context._isHeaderMonthButtonHidden)}" @ui5-previous-press="${ifDefined(context.onHeaderPreviousPress)}" @ui5-next-press="${ifDefined(context.onHeaderNextPress)}" @ui5-show-month-press="${ifDefined(context.onHeaderShowMonthPress)}" @ui5-show-year-press="${ifDefined(context.onHeaderShowYearPress)}"></${scopeTag("ui5-calendar-header", tags, suffix)}></div>`; };


	return block0(context);
};

export default main;