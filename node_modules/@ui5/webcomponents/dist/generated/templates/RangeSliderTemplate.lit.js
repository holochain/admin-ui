/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";

const block0 = (context, tags, suffix) => html`<div class="ui5-slider-root" @mousedown="${context._onmousedown}" @touchstart="${context._ontouchstart}" @mouseover="${context._onmouseover}" @mouseout="${context._onmouseout}" @keydown="${context._onkeydown}" @keyup="${context._onkeyup}" dir="${ifDefined(context.effectiveDir)}"><span id="${ifDefined(context._id)}-startHandleDesc" class="ui5-hidden-text">${ifDefined(context._ariaHandlesText.startHandleText)}</span><span id="${ifDefined(context._id)}-endHandleDesc" class="ui5-hidden-text">${ifDefined(context._ariaHandlesText.endHandleText)}</span><div class="ui5-slider-inner">${ context.step ? block1(context, tags, suffix) : undefined }<div class="ui5-slider-progress-container"><div class="ui5-slider-progress" style="${styleMap(context.styles.progress)}" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}" role="slider" tabindex="${ifDefined(context.tabIndex)}" aria-orientation="horizontal" aria-valuemin="${ifDefined(context.min)}" aria-valuemax="${ifDefined(context.max)}" aria-valuetext="From ${ifDefined(context.startValue)} to ${ifDefined(context.endValue)}" aria-labelledby="${ifDefined(context._id)}-sliderDesc" aria-disabled="${ifDefined(context._ariaDisabled)}"></div></div><div class="ui5-slider-handle ui5-slider-handle--start" style="${styleMap(context.styles.startHandle)}" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}" role="slider" tabindex="${ifDefined(context.tabIndex)}" aria-orientation="horizontal" aria-valuemin="${ifDefined(context.min)}" aria-valuemax="${ifDefined(context.max)}" aria-valuenow="${ifDefined(context.startValue)}" aria-labelledby="${ifDefined(context._id)}-startHandleDesc" aria-disabled="${ifDefined(context._ariaDisabled)}"><${scopeTag("ui5-icon", tags, suffix)} name="source-code" slider-icon></${scopeTag("ui5-icon", tags, suffix)}>${ context.showTooltip ? block5(context, tags, suffix) : undefined }</div><div class="ui5-slider-handle ui5-slider-handle--end" style="${styleMap(context.styles.endHandle)}" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}" role="slider" tabindex="${ifDefined(context.tabIndex)}" aria-orientation="horizontal" aria-valuemin="${ifDefined(context.min)}" aria-valuemax="${ifDefined(context.max)}" aria-valuenow="${ifDefined(context.endValue)}" aria-labelledby="${ifDefined(context._id)}-endHandleDesc" aria-disabled="${ifDefined(context._ariaDisabled)}"><${scopeTag("ui5-icon", tags, suffix)} name="source-code" slider-icon></${scopeTag("ui5-icon", tags, suffix)}>${ context.showTooltip ? block6(context, tags, suffix) : undefined }</div></div><span id="${ifDefined(context._id)}-sliderDesc" class="ui5-hidden-text">${ifDefined(context._ariaLabelledByText)}</span></div>`;
const block1 = (context, tags, suffix) => html`${ context.showTickmarks ? block2(context, tags, suffix) : undefined }`;
const block2 = (context, tags, suffix) => html`<div class="ui5-slider-tickmarks" style="${styleMap(context.styles.tickmarks)}"></div>${ context.labelInterval ? block3(context, tags, suffix) : undefined }`;
const block3 = (context, tags, suffix) => html`<ul class="ui5-slider-labels ${classMap(context.classes.labelContainer)}" style="${styleMap(context.styles.labelContainer)}">${ repeat(context._labels, (item, index) => item._id || index, (item, index) => block4(item, index, context, tags, suffix)) }</ul>`;
const block4 = (item, index, context, tags, suffix) => html`<li style="${styleMap(context.styles.label)}">${ifDefined(item)}</li>`;
const block5 = (context, tags, suffix) => html`<div class="ui5-slider-tooltip ui5-slider-tooltip--start" style="${styleMap(context.styles.tooltip)}"><span class="ui5-slider-tooltip-value">${ifDefined(context.tooltipStartValue)}</span></div>`;
const block6 = (context, tags, suffix) => html`<div class="ui5-slider-tooltip ui5-slider-tooltip--end" style="${styleMap(context.styles.tooltip)}"><span class="ui5-slider-tooltip-value">${ifDefined(context.tooltipEndValue)}</span></div>`;


export default block0;