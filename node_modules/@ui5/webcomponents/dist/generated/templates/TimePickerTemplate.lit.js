
/* eslint no-unused-vars: 0 */
import { ifDefined } from "lit-html/directives/if-defined.js";
import { html, svg, repeat, classMap, styleMap, unsafeHTML, scopeTag } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';

const main = (context, tags, suffix) => {
	const block0 = (context) => { return html`<div id="${ifDefined(context._id)}" class="ui5-time-picker-root" @keydown="${context._onkeydown}"><${scopeTag("ui5-input", tags, suffix)} id="${ifDefined(context._id)}-inner" value="${ifDefined(context.value)}" placeholder="${ifDefined(context._placeholder)}" ?disabled="${context.disabled}" ?readonly="${context.readonly}" value-state="${ifDefined(context.valueState)}" ._inputAccInfo="${ifDefined(context.accInfo)}" @click="${context._handleInputClick}" @ui5-change="${ifDefined(context._handleInputChange)}" @ui5-input="${ifDefined(context._handleInputLiveChange)}" class="ui5-time-picker-input">${ context.valueStateMessage.length ? block1(context) : undefined }${ !context.readonly ? block2(context) : undefined }</${scopeTag("ui5-input", tags, suffix)}></div>`; };
const block1 = (context) => { return html`<slot name="valueStateMessage" slot="valueStateMessage"></slot>`; };
const block2 = (context) => { return html`<${scopeTag("ui5-icon", tags, suffix)} slot="icon" name="${ifDefined(context.openIconName)}" tabindex="-1" show-tooltip @click="${context.togglePicker}" input-icon ?pressed="${context._isPickerOpen}" class="ui5-time-picker-input-icon-button"></${scopeTag("ui5-icon", tags, suffix)}>`; };


	return block0(context);
};

export default main;