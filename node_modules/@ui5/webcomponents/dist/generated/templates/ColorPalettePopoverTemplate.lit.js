/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";

const block0 = (context, tags, suffix) => html`<${scopeTag("ui5-responsive-popover", tags, suffix)} hide-arrow content-only-on-desktop placement-type="Bottom"><div slot="header" class="ui5-cp-header"><${scopeTag("ui5-title", tags, suffix)} class="ui5-cp-title">${ifDefined(context._colorPaletteTitle)}</${scopeTag("ui5-title", tags, suffix)}></div><div><${scopeTag("ui5-color-palette", tags, suffix)} ?show-more-colors="${context.showMoreColors}" ?show-recent-colors="${context.showRecentColors}" ?show-default-color="${context.defaultColor}" default-color="${ifDefined(context.defaultColor)}" popup-mode @item-click="${context.onSelectedColor}">${ repeat(context.colorPaletteColors, (item, index) => item._id || index, (item, index) => block1(item, index, context, tags, suffix)) }</${scopeTag("ui5-color-palette", tags, suffix)}></div><div slot="footer" class="ui5-cp-footer"><${scopeTag("ui5-button", tags, suffix)} design="Transparent" @click="${context.closePopover}">${ifDefined(context._cancelButtonLabel)}</${scopeTag("ui5-button", tags, suffix)}></div></${scopeTag("ui5-responsive-popover", tags, suffix)}>`;
const block1 = (item, index, context, tags, suffix) => html`<slot name="${ifDefined(item._individualSlot)}"></slot>`;


export default block0;