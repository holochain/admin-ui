
/* eslint no-unused-vars: 0 */
import { ifDefined } from "lit-html/directives/if-defined.js";
import { html, svg, repeat, classMap, styleMap, unsafeHTML, scopeTag } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';

const main = (context, tags, suffix) => {
	const block0 = (context) => { return html`<${scopeTag("ui5-responsive-popover", tags, suffix)} hide-arrow content-only-on-desktop _disable-initial-focus placement-type="Bottom" horizontal-align="Left" @ui5-after-open=${ifDefined(context._afterOpenPopover)} @ui5-after-close=${ifDefined(context._afterClosePopover)}><${scopeTag("ui5-busy-indicator", tags, suffix)} ?active=${context.loading} size="Medium" class="ui5-combobox-busy"></${scopeTag("ui5-busy-indicator", tags, suffix)}><div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><${scopeTag("ui5-button", tags, suffix)} class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${context._closeRespPopover}"></${scopeTag("ui5-button", tags, suffix)}></div><div class="row"><div class="input-root-phone" value-state="${ifDefined(context.valueState)}"><input class="ui5-input-inner-phone" .value="${ifDefined(context.value)}" inner-input placeholder="${ifDefined(context.placeholder)}" value-state="${ifDefined(context.valueState)}" @input="${context._input}" @change="${context._inputChange}" @keydown="${context._keydown}" aria-autocomplete="both" /></div></div>${ context.hasValueStateText ? block1(context) : undefined }</div>${ !context._isPhone ? block5(context) : undefined }<${scopeTag("ui5-list", tags, suffix)} separators="None" @ui5-item-click=${ifDefined(context._selectItem)} @ui5-item-focused=${ifDefined(context._onItemFocus)} @mousedown=${context._itemMousedown} mode="SingleSelect">${ repeat(context._filteredItems, (item, index) => item._id || index, (item, index) => block10(item, index, context)) }</${scopeTag("ui5-list", tags, suffix)}><div slot="footer" class="ui5-responsive-popover-footer"><${scopeTag("ui5-button", tags, suffix)} design="Transparent" @click="${context._closeRespPopover}">OK</${scopeTag("ui5-button", tags, suffix)}></div></${scopeTag("ui5-responsive-popover", tags, suffix)}>${ context.shouldOpenValueStateMessagePopover ? block13(context) : undefined }`; };
const block1 = (context) => { return html`<div class="row ${classMap(context.classes.popoverValueState)}">${ context.shouldDisplayDefaultValueStateMessage ? block2(context) : block3(context) }</div>`; };
const block2 = (context) => { return html`${ifDefined(context.valueStateText)}`; };
const block3 = (context) => { return html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block4(item, index, context)) }`; };
const block4 = (item, index, context) => { return html`${ifDefined(item)}`; };
const block5 = (context) => { return html`${ context.hasValueStateText ? block6(context) : undefined }`; };
const block6 = (context) => { return html`<div class="ui5-responsive-popover-header ${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.suggestionPopoverHeader)}">${ context.shouldDisplayDefaultValueStateMessage ? block7(context) : block8(context) }</div>`; };
const block7 = (context) => { return html`${ifDefined(context.valueStateText)}`; };
const block8 = (context) => { return html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block9(item, index, context)) }`; };
const block9 = (item, index, context) => { return html`${ifDefined(item)}`; };
const block10 = (item, index, context) => { return html`${ item.isGroupItem ? block11(item, index, context) : block12(item, index, context) }`; };
const block11 = (item, index, context) => { return html`<${scopeTag("ui5-li-groupheader", tags, suffix)} ?focused=${item.focused}>${ifDefined(item.text)}</${scopeTag("ui5-li-groupheader", tags, suffix)}>`; };
const block12 = (item, index, context) => { return html`<${scopeTag("ui5-li", tags, suffix)} type="Active" additional-text=${ifDefined(item.additionalText)} group-name=${ifDefined(item.groupName)} ._tabIndex=${ifDefined(item.itemTabIndex)} .mappedItem=${ifDefined(item)} ?selected=${item.selected} ?focused=${item.focused}>${ifDefined(item.text)}</${scopeTag("ui5-li", tags, suffix)}>`; };
const block13 = (context) => { return html`<${scopeTag("ui5-popover", tags, suffix)} skip-registry-update _disable-initial-focus prevent-focus-restore no-padding hide-arrow class="ui5-valuestatemessage-popover" placement-type="Bottom"><div slot="header" class="${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverHeader)}">${ context.shouldDisplayDefaultValueStateMessage ? block14(context) : block15(context) }</div></${scopeTag("ui5-popover", tags, suffix)}>`; };
const block14 = (context) => { return html`${ifDefined(context.valueStateText)}`; };
const block15 = (context) => { return html`${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block16(item, index, context)) }`; };
const block16 = (item, index, context) => { return html`${ifDefined(item)}`; };


	return block0(context);
};

export default main;