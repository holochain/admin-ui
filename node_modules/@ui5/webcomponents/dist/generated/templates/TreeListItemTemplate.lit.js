/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";

const block0 = (context, tags, suffix) => html`<li part="native-li" tabindex="${ifDefined(context.tabIndex)}" class="${classMap(context.classes.main)}" dir="${ifDefined(context.effectiveDir)}" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}" @keyup="${context._onkeyup}" @keydown="${context._onkeydown}" @mouseup="${context._onmouseup}" @mousedown="${context._onmousedown}" @touchstart="${context._ontouchstart}" @touchend="${context._ontouchend}" @click="${context._onclick}" role="${ifDefined(context._accInfo.role)}" aria-expanded="${ifDefined(context._accInfo.ariaExpanded)}" title="${ifDefined(context.title)}" aria-level="${ifDefined(context._accInfo.ariaLevel)}" aria-posinset="${ifDefined(context._accInfo.posinset)}" aria-setsize="${ifDefined(context._accInfo.setsize)}" aria-describedby="${ifDefined(context._id)}-invisibleText-describedby" aria-labelledby="${ifDefined(context._id)}-invisibleText ${ifDefined(context._id)}-content" aria-disabled="${ifDefined(context.ariaDisabled)}"><div class="ui5-li-tree-toggle-box" style="${styleMap(context.styles.preContent)}">${ context._showToggleButtonBeginning ? block1(context, tags, suffix) : undefined }</div>${ context.placeSelectionElementBefore ? block2(context, tags, suffix) : undefined }<div id="${ifDefined(context._id)}-content" class="ui5-li-content">${ context.icon ? block6(context, tags, suffix) : undefined }<div class="ui5-li-tree-text-wrapper">${ context._showTitle ? block7(context, tags, suffix) : undefined }${ context.additionalText ? block8(context, tags, suffix) : undefined }</div></div>${ context._showToggleButtonEnd ? block9(context, tags, suffix) : undefined }${ context.typeDetail ? block10(context, tags, suffix) : undefined }${ context.placeSelectionElementAfter ? block11(context, tags, suffix) : undefined }<span id="${ifDefined(context._id)}-invisibleText" class="ui5-hidden-text">${ifDefined(context._accInfo.listItemAriaLabel)}${ifDefined(context.accessibleName)}</span><span id="${ifDefined(context._id)}-invisibleText-describedby" class="ui5-hidden-text">${ifDefined(context._accInfo.ariaSelectedText)}</span></li> `;
const block1 = (context, tags, suffix) => html`<${scopeTag("ui5-icon", tags, suffix)} class="ui5-li-tree-toggle-icon" name="${ifDefined(context._toggleIconName)}" show-tooltip accessible-name="${ifDefined(context.iconAccessibleName)}" @click="${context._toggleClick}"></${scopeTag("ui5-icon", tags, suffix)}>`;
const block2 = (context, tags, suffix) => html`${ context.modeSingleSelect ? block3(context, tags, suffix) : undefined }${ context.modeMultiSelect ? block4(context, tags, suffix) : undefined }${ context.renderDeleteButton ? block5(context, tags, suffix) : undefined }`;
const block3 = (context, tags, suffix) => html`<${scopeTag("ui5-radio-button", tags, suffix)} ?disabled="${context.isInactive}" accessible-name="${ifDefined(context._accInfo.ariaLabelRadioButton)}" tabindex="-1" id="${ifDefined(context._id)}-singleSelectionElement" class="ui5-li-singlesel-radiobtn" ?checked="${context.selected}" @click="${context.onSingleSelectionComponentPress}"></${scopeTag("ui5-radio-button", tags, suffix)}>`;
const block4 = (context, tags, suffix) => html`<${scopeTag("ui5-checkbox", tags, suffix)} ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-multiSelectionElement" class="ui5-li-multisel-cb" ?checked="${context.selected}" aria-label="${ifDefined(context._accInfo.ariaLabel)}" @click="${context.onMultiSelectionComponentPress}"></${scopeTag("ui5-checkbox", tags, suffix)}>`;
const block5 = (context, tags, suffix) => html`<div class="ui5-li-deletebtn"><${scopeTag("ui5-button", tags, suffix)} tabindex="-1" data-sap-no-tab-ref id="${ifDefined(context._id)}-deleteSelectionElement" design="Transparent" icon="decline" ?disabled="${context.disableDeleteButton}" @click="${context.onDelete}" title="${ifDefined(context.deleteText)}"></${scopeTag("ui5-button", tags, suffix)}></div>`;
const block6 = (context, tags, suffix) => html`<${scopeTag("ui5-icon", tags, suffix)} part="icon" name="${ifDefined(context.icon)}" class="ui5-li-icon"></${scopeTag("ui5-icon", tags, suffix)}>`;
const block7 = (context, tags, suffix) => html`<div part="title" class="ui5-li-title"><slot></slot></div>`;
const block8 = (context, tags, suffix) => html`<span part="additional-text" class="ui5-li-additional-text">${ifDefined(context.additionalText)}</span>`;
const block9 = (context, tags, suffix) => html`<${scopeTag("ui5-icon", tags, suffix)} class="ui5-li-tree-toggle-icon" name="${ifDefined(context._toggleIconName)}" @click="${context._toggleClick}"></${scopeTag("ui5-icon", tags, suffix)}>`;
const block10 = (context, tags, suffix) => html`<div class="ui5-li-detailbtn"><${scopeTag("ui5-button", tags, suffix)} design="Transparent" icon="edit" @click="${context.onDetailClick}"></${scopeTag("ui5-button", tags, suffix)}></div>`;
const block11 = (context, tags, suffix) => html`${ context.modeSingleSelect ? block12(context, tags, suffix) : undefined }${ context.modeMultiSelect ? block13(context, tags, suffix) : undefined }${ context.renderDeleteButton ? block14(context, tags, suffix) : undefined }`;
const block12 = (context, tags, suffix) => html`<${scopeTag("ui5-radio-button", tags, suffix)} ?disabled="${context.isInactive}" accessible-name="${ifDefined(context._accInfo.ariaLabelRadioButton)}" tabindex="-1" id="${ifDefined(context._id)}-singleSelectionElement" class="ui5-li-singlesel-radiobtn" ?checked="${context.selected}" @click="${context.onSingleSelectionComponentPress}"></${scopeTag("ui5-radio-button", tags, suffix)}>`;
const block13 = (context, tags, suffix) => html`<${scopeTag("ui5-checkbox", tags, suffix)} ?disabled="${context.isInactive}" tabindex="-1" id="${ifDefined(context._id)}-multiSelectionElement" class="ui5-li-multisel-cb" ?checked="${context.selected}" aria-label="${ifDefined(context._accInfo.ariaLabel)}" @click="${context.onMultiSelectionComponentPress}"></${scopeTag("ui5-checkbox", tags, suffix)}>`;
const block14 = (context, tags, suffix) => html`<div class="ui5-li-deletebtn"><${scopeTag("ui5-button", tags, suffix)} tabindex="-1" data-sap-no-tab-ref id="${ifDefined(context._id)}-deleteSelectionElement" design="Transparent" icon="decline" ?disabled="${context.disableDeleteButton}" @click="${context.onDelete}" title="${ifDefined(context.deleteText)}"></${scopeTag("ui5-button", tags, suffix)}></div>`;


export default block0;