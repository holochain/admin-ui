/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";

const block0 = (context, tags, suffix) => html`<div class="ui5-date-picker-root" style="${styleMap(context.styles.main)}"><!-- INPUT --><${scopeTag("ui5-input", tags, suffix)} id="${ifDefined(context._id)}-inner" class="ui5-date-picker-input" placeholder="${ifDefined(context._placeholder)}" type="${ifDefined(context.type)}" value="${ifDefined(context.value)}" ?disabled="${context.disabled}" ?required="${context.required}" ?readonly="${context.readonly}" value-state="${ifDefined(context.valueState)}" data-sap-focus-ref ._inputAccInfo ="${ifDefined(context.accInfo)}" @ui5-change="${ifDefined(context._onInputChange)}" @ui5-input="${ifDefined(context._onInputInput)}" @ui5-submit="${ifDefined(context._onInputSubmit)}" @keydown="${context._onkeydown}">${ context.valueStateMessage.length ? block1(context, tags, suffix) : undefined }${ !context.readonly ? block2(context, tags, suffix) : undefined }</${scopeTag("ui5-input", tags, suffix)}><slot name="formSupport"></slot></div>`;
const block1 = (context, tags, suffix) => html`<slot name="valueStateMessage" slot="valueStateMessage"></slot>`;
const block2 = (context, tags, suffix) => html`<${scopeTag("ui5-icon", tags, suffix)} slot="icon" name="${ifDefined(context.openIconName)}" tabindex="-1" accessible-name="${ifDefined(context.openIconTitle)}" show-tooltip @click="${context.togglePicker}" input-icon ?pressed="${context._isPickerOpen}" dir="${ifDefined(context.effectiveDir)}"></${scopeTag("ui5-icon", tags, suffix)}>`;


export default block0;