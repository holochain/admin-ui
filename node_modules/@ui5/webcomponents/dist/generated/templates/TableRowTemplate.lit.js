/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";

const block0 = (context, tags, suffix) => html`<tr class="ui5-table-row-root" tabindex="${ifDefined(context._tabIndex)}" @focusin="${context._onfocusin}" @click="${context._onrowclick}" @keydown="${context._onkeydown}" @keyup="${context._onkeyup}" @mouseup="${context._onmouseup}" @touchstart="${context._ontouchstart}" @touchend="${context._ontouchend}" aria-label="${ifDefined(context.ariaLabelText)}" aria-selected="${ifDefined(context.selected)}" data-sap-focus-ref part="row" role="row">${ context.isMultiSelect ? block1(context, tags, suffix) : undefined }${ context.shouldPopin ? block2(context, tags, suffix) : block4(context, tags, suffix) }</tr>${ context.shouldPopin ? block6(context, tags, suffix) : undefined } `;
const block1 = (context, tags, suffix) => html`<td class="ui5-table-multi-select-cell" aria-hidden="true" role="presentation"><${scopeTag("ui5-checkbox", tags, suffix)} class="ui5-multi-select-checkbox" ?checked="${context.selected}" aria-label="${ifDefined(context.ariaLabelRowSelection)}" @ui5-change="${ifDefined(context._handleSelection)}"></${scopeTag("ui5-checkbox", tags, suffix)}></td>`;
const block2 = (context, tags, suffix) => html`${ repeat(context.visibleCells, (item, index) => item._id || index, (item, index) => block3(item, index, context, tags, suffix)) }`;
const block3 = (item, index, context, tags, suffix) => html`<slot name="${ifDefined(item._individualSlot)}"></slot>`;
const block4 = (context, tags, suffix) => html`${ repeat(context.cells, (item, index) => item._id || index, (item, index) => block5(item, index, context, tags, suffix)) }`;
const block5 = (item, index, context, tags, suffix) => html`<slot name="${ifDefined(item._individualSlot)}"></slot>`;
const block6 = (context, tags, suffix) => html`${ repeat(context.popinCells, (item, index) => item._id || index, (item, index) => block7(item, index, context, tags, suffix)) }`;
const block7 = (item, index, context, tags, suffix) => html`<tr part="popin-row" role="row" class="${ifDefined(item.classes)}" @click="${context._onrowclick}" @keydown="${context._onkeydown}" @keyup="${context._onkeyup}"><td colspan="${ifDefined(context.visibleCellsCount)}" role="cell">${ item.popinText ? block8(item, index, context, tags, suffix) : undefined }<div><slot name="${ifDefined(item.cell._individualSlot)}"></slot></div></td></tr>`;
const block8 = (item, index, context, tags, suffix) => html`<span class="ui5-table-row-popin-title">${ifDefined(item.popinText)}:</span>`;


export default block0;