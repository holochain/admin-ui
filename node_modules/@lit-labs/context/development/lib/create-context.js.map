{"version":3,"file":"create-context.js","sourceRoot":"","sources":["../../src/lib/create-context.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAiBH;;GAEG;AACH,MAAM,UAAU,aAAa,CAC3B,IAAY,EACZ,YAAgB;IAEhB,OAAO;QACL,IAAI;QACJ,YAAY;KACb,CAAC;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * A Context object defines an optional initial value for a Context, as well as a name identifier for debugging purposes.\n */\nexport type Context<T> = {\n  name: string;\n  initialValue?: T;\n};\n\n/**\n * A helper type which can extract a Context value type from a Context type\n */\nexport type ContextType<T extends Context<unknown>> = T extends Context<infer Y>\n  ? Y\n  : never;\n\n/**\n * A function which creates a Context value object\n */\nexport function createContext<T>(\n  name: string,\n  initialValue?: T\n): Readonly<Context<T>> {\n  return {\n    name,\n    initialValue,\n  };\n}\n"]}