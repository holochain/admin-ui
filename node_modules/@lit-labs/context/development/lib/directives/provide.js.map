{"version":3,"file":"provide.js","sourceRoot":"","sources":["../../../src/lib/directives/provide.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,SAAS,EAKT,QAAQ,GACT,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAC,QAAQ,EAAC,MAAM,KAAK,CAAC;AAE7B,OAAO,EAAC,gBAAgB,EAAC,MAAM,kCAAkC,CAAC;AAGlE,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAK7C,YAAY,QAAkB;QAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC;QAYlB,qBAAgB,GAAG,CAAC,EAAkC,EAAQ,EAAE;;YAC9D,IAAI,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,QAAQ,EAAE;gBAChC,OAAO;aACR;YACD,EAAE,CAAC,eAAe,EAAE,CAAC;YACrB,MAAA,IAAI,CAAC,UAAU,0CAAE,WAAW,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;QACzD,CAAC,CAAC;QAjBA,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,EAAE;YACtC,MAAM,IAAI,KAAK,CACb,6DAA6D,CAC9D,CAAC;SACH;IACH,CAAC;IAED,MAAM,CAAI,QAAoB,EAAE,MAAS;QACvC,OAAO,QAAQ,CAAC;IAClB,CAAC;IAUD,MAAM,CAAC,IAAiB,EAAE,CAAC,OAAO,EAAE,KAAK,CAA4B;QACnE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAsB,CAAC;QAE5C,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC/C;QACD,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE;YACjC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,mBAAmB,CACnC,iBAAiB,EACjB,IAAI,CAAC,gBAAgB,CACtB,CAAC;aACH;YACD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;SAC7B;QACD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;QAC9B,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACpE,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAED,iFAAiF;AACjF,MAAM,OAAO,GAAG,SAAS,CAAC,gBAAgB,CAIG,CAAC;AAE9C,OAAO,EAAC,OAAO,EAAC,CAAC","sourcesContent":["import {\n  Directive,\n  directive,\n  DirectiveParameters,\n  DirectiveResult,\n  ElementPart,\n  PartInfo,\n  PartType,\n} from 'lit/directive.js';\nimport {noChange} from 'lit';\nimport {Context} from '../create-context';\nimport {ContextContainer} from '../controllers/context-container';\nimport {ContextEvent} from '../context-event';\n\nexport class ProvideDirective extends Directive {\n  private _container?: ContextContainer<unknown>;\n  private _context?: Context<unknown>;\n  private _lastElement?: HTMLElement;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.ELEMENT) {\n      throw new Error(\n        'The `provide` directive is only allowed on element bindings'\n      );\n    }\n  }\n\n  render<V>(_context: Context<V>, _value: V) {\n    return noChange;\n  }\n\n  onContextRequest = (ev: ContextEvent<Context<unknown>>): void => {\n    if (ev.context !== this._context) {\n      return;\n    }\n    ev.stopPropagation();\n    this._container?.addCallback(ev.callback, ev.multiple);\n  };\n\n  update(part: ElementPart, [context, value]: DirectiveParameters<this>) {\n    const result = this.render(context, value);\n    const element = part.element as HTMLElement;\n\n    if (this._container === undefined) {\n      this._container = new ContextContainer(value);\n    }\n    if (this._lastElement !== element) {\n      if (this._lastElement) {\n        this._lastElement.removeEventListener(\n          'context-request',\n          this.onContextRequest\n        );\n      }\n      this._lastElement = element;\n    }\n    this._context = context;\n    this._container.value = value;\n    element?.addEventListener('context-request', this.onContextRequest);\n    return result;\n  }\n}\n\n// construct the provide directive, and cast it to the correct generic form since\nconst provide = directive(ProvideDirective) as <V>(\n  context: Context<V>,\n  value: V,\n  f?: () => unknown\n) => DirectiveResult<typeof ProvideDirective>;\n\nexport {provide};\n"]}