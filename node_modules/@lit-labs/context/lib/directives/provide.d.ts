import { Directive, DirectiveParameters, DirectiveResult, ElementPart, PartInfo } from 'lit/directive.js';
import { Context } from '../create-context';
import { ContextEvent } from '../context-event';
export declare class ProvideDirective extends Directive {
    private _container?;
    private _context?;
    private _lastElement?;
    constructor(partInfo: PartInfo);
    render<V>(_context: Context<V>, _value: V): symbol;
    onContextRequest: (ev: ContextEvent<Context<unknown>>) => void;
    update(part: ElementPart, [context, value]: DirectiveParameters<this>): symbol;
}
declare const provide: <V>(context: Context<V>, value: V, f?: (() => unknown) | undefined) => DirectiveResult<typeof ProvideDirective>;
export { provide };
//# sourceMappingURL=provide.d.ts.map