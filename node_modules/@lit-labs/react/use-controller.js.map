{"version":3,"file":"use-controller.js","sources":["src/use-controller.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport type * as ReactModule from 'react';\nimport {\n  ReactiveController,\n  ReactiveControllerHost,\n} from '@lit/reactive-element/reactive-controller.js';\n\ntype React = typeof ReactModule;\n\nexport type ControllerConstructor<C extends ReactiveController> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: Array<any>): C;\n};\n\nconst microtask = Promise.resolve();\n\n/**\n * An implementation of ReactiveControllerHost that is driven by React hooks\n * and `useController()`.\n */\nclass ReactControllerHost<C extends ReactiveController>\n  implements ReactiveControllerHost\n{\n  /* @internal */\n  _primaryController!: C;\n  private _controllers: Array<ReactiveController> = [];\n  private _updateCompletePromise: Promise<boolean>;\n  /* @internal */\n  _updatePending = true;\n  private _resolveUpdate!: (value: boolean | PromiseLike<boolean>) => void;\n\n  private _kickCount: number;\n  // A function to trigger an update of the React component\n  private _kick: (k: number) => void;\n\n  constructor(kickCount: number, kick: (k: number) => void) {\n    this._kickCount = kickCount;\n    this._kick = kick;\n    this._updateCompletePromise = new Promise((res, _rej) => {\n      this._resolveUpdate = res;\n    });\n  }\n\n  addController(controller: ReactiveController): void {\n    this._controllers.push(controller);\n  }\n\n  removeController(controller: ReactiveController): void {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this._controllers?.splice(this._controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  requestUpdate(): void {\n    if (!this._updatePending) {\n      this._updatePending = true;\n      // Trigger a React update by updating some state\n      microtask.then(() => this._kick(++this._kickCount));\n    }\n  }\n\n  get updateComplete(): Promise<boolean> {\n    return this._updateCompletePromise;\n  }\n\n  /* @internal */\n  _connected() {\n    this._controllers.forEach((c) => c.hostConnected?.());\n  }\n\n  /* @internal */\n  _disconnected() {\n    this._controllers.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /* @internal */\n  _update() {\n    this._controllers.forEach((c) => c.hostUpdate?.());\n  }\n\n  /* @internal */\n  _updated() {\n    this._updatePending = false;\n    const resolve = this._resolveUpdate;\n    // Create a new updateComplete Promise for the next update,\n    // before resolving the current one.\n    this._updateCompletePromise = new Promise((res, _rej) => {\n      this._resolveUpdate = res;\n    });\n    this._controllers.forEach((c) => c.hostUpdated?.());\n    resolve(this._updatePending);\n  }\n}\n\n/**\n * Creates and stores a stateful ReactiveController instance and provides it\n * with a ReactiveControllerHost that drives the controller lifecycle.\n *\n * Use this hook to convert a ReactiveController into a React hook.\n *\n * @param React the React module that provides the base hooks. Must provide\n * `useState` and `useLayoutEffect`.\n * @param createController A function that creates a controller instance. This\n * function is given a ReactControllerHost to pass to the controller. The\n * create function is only called once per component.\n */\nexport const useController = <C extends ReactiveController>(\n  React: React,\n  createController: (host: ReactiveControllerHost) => C\n): C => {\n  const {useState, useLayoutEffect} = React;\n\n  // State to force updates of the React component\n  const [kickCount, kick] = useState(0);\n\n  // Create and store the controller instance. We use useState() instead of\n  // useMemo() because React does not guarantee that it will preserve values\n  // created with useMemo().\n  // TODO (justinfagnani): since this controller are mutable, this may cause\n  // issues such as \"shearing\" with React concurrent mode. The solution there\n  // will likely be to shapshot the controller state with something like\n  // `useMutableSource`:\n  // https://github.com/reactjs/rfcs/blob/master/text/0147-use-mutable-source.md\n  // We can address this when React's concurrent mode is closer to shipping.\n  const [host] = useState(() => {\n    const host = new ReactControllerHost<C>(kickCount, kick);\n    const controller = createController(host);\n    host._primaryController = controller;\n    host._connected();\n    return host;\n  });\n\n  host._updatePending = true;\n\n  // We use useLayoutEffect because we need updated() called synchronously\n  // after rendering.\n  useLayoutEffect(() => host._updated());\n\n  // Returning a cleanup function simulates hostDisconnected timing. An empty\n  // deps array tells React to only call this once: on mount with the cleanup\n  // called on unmount.\n  useLayoutEffect(() => () => host._disconnected(), []);\n\n  // TODO (justinfagnani): don't call in SSR\n  host._update();\n\n  return host._primaryController;\n};\n"],"names":["microtask","Promise","resolve","ReactControllerHost","constructor","kickCount","kick","this","_kickCount","_kick","_updateCompletePromise","res","_rej","_resolveUpdate","addController","controller","_controllers","push","removeController","splice","indexOf","requestUpdate","_updatePending","then","updateComplete","_connected","forEach","c","hostConnected","_disconnected","hostDisconnected","_update","hostUpdate","_updated","hostUpdated","useController","React","createController","useState","useLayoutEffect","host","_primaryController"],"mappings":";;;;;AAmBA,MAAMA,EAAYC,QAAQC,UAM1B,MAAMC,EAeJC,YAAYC,EAAmBC,GAVvBC,OAA0C,GAGlDA,QAAiB,EAQfA,KAAKC,EAAaH,EAClBE,KAAKE,EAAQH,EACbC,KAAKG,EAAyB,IAAIT,SAAQ,CAACU,EAAKC,KAC9CL,KAAKM,EAAiBF,KAI1BG,cAAcC,GACZR,KAAKS,EAAaC,KAAKF,GAGzBG,iBAAiBH,mBAGfR,KAAKS,kBAAcG,OAAOZ,KAAKS,EAAaI,QAAQL,KAAgB,EAAG,GAGzEM,gBACOd,KAAKe,IACRf,KAAKe,GAAiB,EAEtBtB,EAAUuB,MAAK,IAAMhB,KAAKE,IAAQF,KAAKC,MAIvCgB,qBACF,OAAOjB,KAAKG,EAIde,IACElB,KAAKS,EAAaU,SAASC,UAAM,iBAAAA,EAAEC,yCAAFD,MAInCE,IACEtB,KAAKS,EAAaU,SAASC,UAAM,iBAAAA,EAAEG,4CAAFH,MAInCI,IACExB,KAAKS,EAAaU,SAASC,UAAM,iBAAAA,EAAEK,sCAAFL,MAInCM,IACE1B,KAAKe,GAAiB,EACtB,MAAMpB,EAAUK,KAAKM,EAGrBN,KAAKG,EAAyB,IAAIT,SAAQ,CAACU,EAAKC,KAC9CL,KAAKM,EAAiBF,KAExBJ,KAAKS,EAAaU,SAASC,UAAM,iBAAAA,EAAEO,uCAAFP,MACjCzB,EAAQK,KAAKe,UAgBJa,EAAgB,CAC3BC,EACAC,KAEA,MAAMC,SAACA,EAAQC,gBAAEA,GAAmBH,GAG7B/B,EAAWC,GAAQgC,EAAS,IAW5BE,GAAQF,GAAS,KACtB,MAAME,EAAO,IAAIrC,EAAuBE,EAAWC,GAC7CS,EAAasB,EAAiBG,GAGpC,OAFAA,EAAKC,EAAqB1B,EAC1ByB,EAAKf,IACEe,KAiBT,OAdAA,EAAKlB,GAAiB,EAItBiB,GAAgB,IAAMC,EAAKP,MAK3BM,GAAgB,IAAM,IAAMC,EAAKX,KAAiB,IAGlDW,EAAKT,IAEES,EAAKC"}