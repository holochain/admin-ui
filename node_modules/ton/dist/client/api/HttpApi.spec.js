"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bn_js_1 = require("bn.js");
const __1 = require("../..");
const CommonMessageInfo_1 = require("../../messages/CommonMessageInfo");
const ExternalMessage_1 = require("../../messages/ExternalMessage");
const HttpApi_1 = require("./HttpApi");
describe('HttpApi', () => {
    it('should get balance', async () => {
        const api = new HttpApi_1.HttpApi('https://testnet.toncenter.com/api/v2/jsonRPC');
        let res = await api.getAddressInformation(__1.Address.parseFriendly('EQDR4neQzqkfEz0oR3hXBcJph64d5NddP8H8wfN0thQIAqDH').address);
        expect(new bn_js_1.BN(res.balance).gte(new bn_js_1.BN(0))).toBe(true);
    });
    it('should get latest transactions', async () => {
        const api = new HttpApi_1.HttpApi('https://testnet.toncenter.com/api/v2/jsonRPC');
        const message = new ExternalMessage_1.ExternalMessage({
            to: __1.Address.parseFriendly('EQDR4neQzqkfEz0oR3hXBcJph64d5NddP8H8wfN0thQIAqDH').address,
            body: new CommonMessageInfo_1.CommonMessageInfo()
        });
        const cell = new __1.Cell();
        message.writeTo(cell);
        await api.sendBoc((await cell.toBoc({ idx: false })));
    });
    it('should get seqno', async () => {
        const api = new HttpApi_1.HttpApi('https://testnet.toncenter.com/api/v2/jsonRPC');
        let res = await api.callGetMethod(__1.Address.parseFriendly('EQDR4neQzqkfEz0oR3hXBcJph64d5NddP8H8wfN0thQIAqDH').address, 'seqno', []);
        expect(res.exit_code).toBe(0);
    });
});
