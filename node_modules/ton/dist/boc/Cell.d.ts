/// <reference types="node" />
import { Maybe } from '../types';
import { BitString } from './BitString';
export declare class Cell {
    static fromBoc(src: Buffer | string): Cell[];
    readonly bits: BitString;
    readonly refs: Cell[];
    readonly isExotic: boolean;
    constructor(isExotic?: boolean);
    writeCell(anotherCell: Cell): void;
    hash(): Promise<Buffer>;
    toBoc(opts?: {
        idx?: Maybe<boolean>;
        crc32?: Maybe<boolean>;
        cacheBits?: Maybe<boolean>;
        flags?: Maybe<number>;
    }): Promise<Buffer>;
    toString(indent?: string): string;
}
