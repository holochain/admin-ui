{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/blakejs/util.js","../node_modules/blakejs/blake2b.js","../node_modules/blakejs/blake2s.js","../node_modules/blakejs/index.js","../src/processors/hash.ts","../src/types.ts","../src/core/cell/dht/get.ts","../src/core/network/dht_arc.ts","../src/core/cell/state.ts","../src/core/cell/cascade/authority.ts","../src/core/cell/cascade/cascade.ts","../src/core/cell/dht/put.ts","../src/core/cell/source-chain/get.ts","../src/core/cell/utils.ts","../src/core/cell/source-chain/put.ts","../src/core/cell/source-chain/utils.ts","../src/core/cell/source-chain/builder-headers.ts","../src/core/cell/workflows/workflows.ts","../src/core/network/utils.ts","../src/core/cell/workflows/validation_receipt.ts","../src/core/cell/workflows/integrate_dht_ops.ts","../src/core/hdk/host-fn/actions/common/create.ts","../src/core/hdk/host-fn/actions/create_cap_grant.ts","../src/core/hdk/host-fn/actions/create_entry.ts","../src/core/hdk/host-fn/actions/create_link.ts","../src/core/hdk/host-fn/actions/common/delete.ts","../src/core/hdk/host-fn/actions/delete_cap_grant.ts","../src/core/hdk/host-fn/actions/delete_entry.ts","../src/core/hdk/host-fn/actions/delete_link.ts","../src/core/hdk/host-fn/actions/common/update.ts","../src/core/hdk/host-fn/actions/update_entry.ts","../src/core/hdk/host-fn/agent_info.ts","../src/core/hdk/host-fn/call_remote.ts","../src/core/hdk/host-fn/get.ts","../src/core/hdk/host-fn/get_detailts.ts","../src/core/hdk/host-fn/get_links.ts","../src/core/hdk/host-fn/hash_entry.ts","../src/core/hdk/host-fn/query.ts","../src/core/hdk/path.ts","../src/core/hdk/context.ts","../src/core/cell/workflows/app_validation.ts","../src/core/cell/workflows/publish_dht_ops.ts","../src/core/cell/workflows/produce_dht_ops.ts","../src/core/cell/sys_validate/index.ts","../src/core/cell/workflows/sys_validation.ts","../src/core/cell/workflows/call_zome_fn.ts","../src/core/cell/workflows/genesis.ts","../src/core/cell/workflows/incoming_dht_ops.ts","../src/core/cell/workflows/trigger.ts","../src/executor/middleware-executor.ts","../src/core/cell/cell.ts","../src/core/network/connection.ts","../src/executor/delay-middleware.ts","../src/core/network/gossip/bloom/index.ts","../src/core/network/network-request.ts","../src/core/network/p2p-cell.ts","../src/core/network/kitsune_p2p.ts","../src/core/network/network.ts","../src/core/conductor.ts","../src/dnas/demo-dna.ts","../src/bootstrap/bootstrap-service.ts","../src/processors/create-conductors.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","import {\n  serializeHash,\n  Dictionary,\n  AnyDhtHashB64,\n} from '@holochain-open-dev/core-types';\n// @ts-ignore\nimport blake from 'blakejs';\n\nexport enum HashType {\n  AGENT,\n  ENTRY,\n  DHTOP,\n  HEADER,\n  DNA,\n}\n\nexport const AGENT_PREFIX = 'hCAk';\nexport const ENTRY_PREFIX = 'hCEk';\nexport const DHTOP_PREFIX = 'hCQk';\nexport const DNA_PREFIX = 'hC0k';\nexport const HEADER_PREFIX = 'hCkk';\n\nfunction getPrefix(type: HashType) {\n  switch (type) {\n    case HashType.AGENT:\n      return AGENT_PREFIX;\n    case HashType.ENTRY:\n      return ENTRY_PREFIX;\n    case HashType.DHTOP:\n      return DHTOP_PREFIX;\n    case HashType.HEADER:\n      return HEADER_PREFIX;\n    case HashType.DNA:\n      return DNA_PREFIX;\n  }\n}\n\nfunction str2ab(str: string) {\n  var buf = new ArrayBuffer(str.length);\n  var bufView = new Uint8Array(buf);\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\nconst hashCache: Dictionary<AnyDhtHashB64> = {};\n\n// From https://github.com/holochain/holochain/blob/dc0cb61d0603fa410ac5f024ed6ccfdfc29715b3/crates/holo_hash/src/encode.rs\nexport function hash(content: any, type: HashType): AnyDhtHashB64 {\n  const contentString =\n    typeof content === 'string' ? content : JSON.stringify(content);\n\n  if (hashCache[contentString]) return hashCache[contentString];\n\n  const hashable = new Uint8Array(str2ab(contentString));\n\n  const bytesHash = blake.blake2b(hashable, null, 32);\n\n  const strHash = serializeHash(bytesHash);\n  const hash = `u${getPrefix(type)}${strHash.slice(1)}`;\n\n  hashCache[contentString] = hash;\n\n  return hash;\n}\n\nconst hashLocationCache: Dictionary<number> = {};\n\nexport function location(hash: string): number {\n  if (hashLocationCache[hash]) return hashLocationCache[hash];\n\n  const hashable = new Uint8Array(str2ab(hash.slice(5)));\n  const hash128: Uint8Array = blake.blake2b(hashable, null, 16);\n\n  const out = [hash128[0], hash128[1], hash128[2], hash128[3]];\n\n  for (let i = 4; i < 16; i += 4) {\n    out[0] ^= hash128[i];\n    out[1] ^= hash128[i + 1];\n    out[2] ^= hash128[i + 2];\n    out[3] ^= hash128[i + 3];\n  }\n\n  const view = new DataView(new Uint8Array(out).buffer, 0);\n  const location = wrap(view.getUint32(0, false));\n\n  hashLocationCache[hash] = location;\n\n  return location;\n}\n\n// We return the distance as the shortest distance between two hashes in the circle\nexport function distance(hash1: AnyDhtHashB64, hash2: AnyDhtHashB64): number {\n  const location1 = location(hash1);\n  const location2 = location(hash2);\n\n  return shortest_arc_distance(location1, location2) + 1;\n}\n\nexport function shortest_arc_distance(\n  location1: number,\n  location2: number\n): number {\n  const distance1 = wrap(location1 - location2);\n  const distance2 = wrap(location2 - location1);\n  return Math.min(distance1, distance2);\n}\n\nconst MAX_UINT = 4294967295;\n\nexport function wrap(uint: number): number {\n  if (uint < 0) return 1 + MAX_UINT + uint;\n  if (uint > MAX_UINT) return uint - MAX_UINT;\n  return uint;\n}\n\nexport function getHashType(hash: AnyDhtHashB64): HashType {\n  const hashExt = hash.slice(1, 5);\n\n  if (hashExt === AGENT_PREFIX) return HashType.AGENT;\n  if (hashExt === DNA_PREFIX) return HashType.DNA;\n  if (hashExt === DHTOP_PREFIX) return HashType.DHTOP;\n  if (hashExt === HEADER_PREFIX) return HashType.HEADER;\n  if (hashExt === ENTRY_PREFIX) return HashType.ENTRY;\n  throw new Error('Could not get hash type');\n}\n","export type GetOptions = {\n  strategy: GetStrategy;\n};\nexport type GetLinksOptions = {};\n\nexport enum GetStrategy {\n  Latest,\n  Contents,\n}\n\nexport interface QueryFilter {}\n","import {\n  Dictionary,\n  DhtOpHashB64,\n  Header,\n  getSysMetaValHeaderHash,\n  LinkMetaVal,\n  EntryDhtStatus,\n  EntryDetails,\n  NewEntryHeader,\n  SignedHeaderHashed,\n  DHTOpType,\n  Update,\n  Delete,\n  CreateLink,\n  DeleteLink,\n  HeaderType,\n  Create,\n  Metadata,\n  DHTOp,\n  ValidationReceipt,\n  EntryHashB64,\n  HeaderHashB64,\n} from '@holochain-open-dev/core-types';\nimport { isEqual, uniq } from 'lodash-es';\nimport { hash, HashType } from '../../../processors/hash';\nimport { GetLinksResponse, Link } from '../cascade/types';\nimport {\n  CellState,\n  ValidationLimboStatus,\n  ValidationLimboValue,\n  IntegrationLimboValue,\n  IntegratedDhtOpsValue,\n} from '../state';\n\nexport function getValidationLimboDhtOps(\n  state: CellState,\n  statuses: ValidationLimboStatus[]\n): Dictionary<ValidationLimboValue> {\n  const pendingDhtOps: Dictionary<ValidationLimboValue> = {};\n\n  for (const dhtOpHash of Object.keys(state.validationLimbo)) {\n    const limboValue = state.validationLimbo[dhtOpHash];\n\n    if (statuses.includes(limboValue.status)) {\n      pendingDhtOps[dhtOpHash] = limboValue;\n    }\n  }\n\n  return pendingDhtOps;\n}\n\nexport const getValidationReceipts = (dhtOpHash: DhtOpHashB64) => (\n  state: CellState\n): ValidationReceipt[] => {\n  return state.validationReceipts[dhtOpHash]\n    ? Object.values(state.validationReceipts[dhtOpHash])\n    : [];\n};\n\nexport function pullAllIntegrationLimboDhtOps(\n  state: CellState\n): Dictionary<IntegrationLimboValue> {\n  const dhtOps = state.integrationLimbo;\n\n  state.integrationLimbo = {};\n\n  return dhtOps;\n}\n\nexport function getHeadersForEntry(\n  state: CellState,\n  entryHash: EntryHashB64\n): SignedHeaderHashed[] {\n  const entryMetadata = state.metadata.system_meta[entryHash];\n  if (!entryMetadata) return [];\n\n  return entryMetadata\n    .map(h => {\n      const hash = getSysMetaValHeaderHash(h);\n      if (hash) {\n        return state.CAS[hash];\n      }\n      return undefined;\n    })\n    .filter(header => !!header);\n}\n\nexport function getEntryDhtStatus(\n  state: CellState,\n  entryHash: EntryHashB64\n): EntryDhtStatus | undefined {\n  const meta = state.metadata.misc_meta[entryHash];\n\n  return meta\n    ? (meta as {\n        EntryStatus: EntryDhtStatus;\n      }).EntryStatus\n    : undefined;\n}\n\nexport function getEntryDetails(\n  state: CellState,\n  entry_hash: EntryHashB64\n): EntryDetails {\n  const entry = state.CAS[entry_hash];\n  const allHeaders = getHeadersForEntry(state, entry_hash);\n  const dhtStatus = getEntryDhtStatus(state, entry_hash);\n\n  const live_headers: Dictionary<SignedHeaderHashed<Create>> = {};\n  const updates: Dictionary<SignedHeaderHashed<Update>> = {};\n  const deletes: Dictionary<SignedHeaderHashed<Delete>> = {};\n\n  for (const header of allHeaders) {\n    const headerContent = (header as SignedHeaderHashed).header.content;\n\n    if (\n      (headerContent as Update).original_entry_address &&\n      (headerContent as Update).original_entry_address === entry_hash\n    ) {\n      updates[header.header.hash] = header as SignedHeaderHashed<Update>;\n    } else if (\n      (headerContent as Create).entry_hash &&\n      (headerContent as Create).entry_hash === entry_hash\n    ) {\n      live_headers[header.header.hash] = header as SignedHeaderHashed<Create>;\n    } else if ((headerContent as Delete).deletes_entry_address === entry_hash) {\n      deletes[header.header.hash] = header as SignedHeaderHashed<Delete>;\n    }\n  }\n\n  return {\n    entry,\n    headers: allHeaders,\n    entry_dht_status: dhtStatus as EntryDhtStatus,\n    updates: Object.values(updates),\n    deletes: Object.values(deletes),\n    rejected_headers: [], // TODO: after validation is implemented\n  };\n}\n\nexport function getHeaderModifiers(\n  state: CellState,\n  headerHash: HeaderHashB64\n): {\n  updates: SignedHeaderHashed<Update>[];\n  deletes: SignedHeaderHashed<Delete>[];\n} {\n  const allModifiers = state.metadata.system_meta[headerHash];\n  if (!allModifiers)\n    return {\n      updates: [],\n      deletes: [],\n    };\n\n  const updates = allModifiers\n    .filter(m => (m as { Update: HeaderHashB64 }).Update)\n    .map(m => state.CAS[(m as { Update: HeaderHashB64 }).Update]);\n  const deletes = allModifiers\n    .filter(m => (m as { Delete: HeaderHashB64 }).Delete)\n    .map(m => state.CAS[(m as { Delete: HeaderHashB64 }).Delete]);\n\n  return {\n    updates,\n    deletes,\n  };\n}\n\nexport function getAllHeldEntries(state: CellState): EntryHashB64[] {\n  const newEntryHeaders = Object.values(state.integratedDHTOps)\n    .filter(dhtOpValue => dhtOpValue.op.type === DHTOpType.StoreEntry)\n    .map(dhtOpValue => dhtOpValue.op.header);\n\n  const allEntryHashes = newEntryHeaders.map(\n    h => (h.header.content as NewEntryHeader).entry_hash\n  );\n\n  return uniq(allEntryHashes);\n}\n\nexport function getAllHeldHeaders(state: CellState): HeaderHashB64[] {\n  const headers = Object.values(state.integratedDHTOps)\n    .filter(dhtOpValue => dhtOpValue.op.type === DHTOpType.StoreElement)\n    .map(dhtOpValue => dhtOpValue.op.header);\n\n  const allHeaderHashes = headers.map(h => h.header.hash);\n\n  return uniq(allHeaderHashes);\n}\n\nexport function getAllAuthoredEntries(state: CellState): EntryHashB64[] {\n  const allHeaders = Object.values(state.authoredDHTOps).map(\n    dhtOpValue => dhtOpValue.op.header\n  );\n\n  const newEntryHeaders: SignedHeaderHashed<NewEntryHeader>[] = allHeaders.filter(\n    h => (h.header.content as NewEntryHeader).entry_hash\n  ) as SignedHeaderHashed<NewEntryHeader>[];\n\n  return newEntryHeaders.map(h => h.header.content.entry_hash);\n}\n\nexport function isHoldingEntry(state: CellState, entryHash: EntryHashB64): boolean {\n  return state.metadata.system_meta[entryHash] !== undefined;\n}\n\nexport function isHoldingElement(state: CellState, headerHash: HeaderHashB64): boolean {\n  return state.metadata.misc_meta[headerHash] === 'StoreElement';\n}\n\nexport function isHoldingDhtOp(state: CellState, dhtOpHash: DhtOpHashB64): boolean {\n  return !!state.integratedDHTOps[dhtOpHash];\n}\n\nexport interface EntryDHTInfo {\n  details: EntryDetails;\n  links: LinkMetaVal[];\n}\n\nexport function getDhtShard(state: CellState): Dictionary<EntryDHTInfo> {\n  const heldEntries = getAllHeldEntries(state);\n\n  const dhtShard: Dictionary<EntryDHTInfo> = {};\n\n  for (const entryHash of heldEntries) {\n    dhtShard[entryHash] = {\n      details: getEntryDetails(state, entryHash),\n      links: getCreateLinksForEntry(state, entryHash),\n    };\n  }\n\n  return dhtShard;\n}\n\nexport function getLinksForEntry(\n  state: CellState,\n  entryHash: EntryHashB64\n): GetLinksResponse {\n  const linkMetaVals = getCreateLinksForEntry(state, entryHash);\n\n  const link_adds: SignedHeaderHashed<CreateLink>[] = [];\n  const link_removes: SignedHeaderHashed<DeleteLink>[] = [];\n\n  for (const value of linkMetaVals) {\n    const header = state.CAS[value.link_add_hash];\n\n    if (header) {\n      link_adds.push(header);\n    }\n\n    const removes = getRemovesOnLinkAdd(state, value.link_add_hash);\n\n    for (const remove of removes) {\n      const removeHeader = state.CAS[remove];\n      link_removes.push(removeHeader);\n    }\n  }\n\n  return {\n    link_adds,\n    link_removes,\n  };\n}\n\nexport function getCreateLinksForEntry(\n  state: CellState,\n  entryHash: EntryHashB64\n): LinkMetaVal[] {\n  return state.metadata.link_meta\n    .filter(({ key, value }) => isEqual(key.base, entryHash))\n    .map(({ key, value }) => value);\n}\n\nexport function getRemovesOnLinkAdd(\n  state: CellState,\n  link_add_hash: HeaderHashB64\n): HeaderHashB64[] {\n  const metadata = state.metadata.system_meta[link_add_hash];\n\n  if (!metadata) return [];\n\n  const removes: HeaderHashB64[] = [];\n  for (const val of metadata) {\n    if ((val as { DeleteLink: HeaderHashB64 }).DeleteLink) {\n      removes.push((val as { DeleteLink: HeaderHashB64 }).DeleteLink);\n    }\n  }\n  return removes;\n}\n\nexport function getLiveLinks(\n  getLinksResponses: Array<GetLinksResponse>\n): Array<Link> {\n  // Map and flatten adds\n  const linkAdds: Dictionary<CreateLink | undefined> = {};\n  for (const responses of getLinksResponses) {\n    for (const linkAdd of responses.link_adds) {\n      linkAdds[linkAdd.header.hash] = linkAdd.header.content;\n    }\n  }\n\n  for (const responses of getLinksResponses) {\n    for (const linkRemove of responses.link_removes) {\n      const removedAddress = linkRemove.header.content.link_add_address;\n      if (linkAdds[removedAddress]) linkAdds[removedAddress] = undefined;\n    }\n  }\n\n  const resultingLinks: Link[] = [];\n\n  for (const liveLink of Object.values(linkAdds)) {\n    if (liveLink)\n      resultingLinks.push({\n        base: liveLink.base_address,\n        target: liveLink.target_address,\n        tag: liveLink.tag,\n      });\n  }\n\n  return resultingLinks;\n}\n\nexport function computeDhtStatus(\n  allHeadersForEntry: SignedHeaderHashed[]\n): {\n  entry_dht_status: EntryDhtStatus;\n  rejected_headers: SignedHeaderHashed[];\n} {\n  const aliveHeaders: Dictionary<SignedHeaderHashed | undefined> = {};\n  const rejected_headers: SignedHeaderHashed[] = [];\n\n  for (const header of allHeadersForEntry) {\n    if (header.header.content.type === HeaderType.Create) {\n      aliveHeaders[header.header.hash] = header;\n    }\n  }\n\n  for (const header of allHeadersForEntry) {\n    if (\n      header.header.content.type === HeaderType.Update ||\n      header.header.content.type === HeaderType.Delete\n    ) {\n      if (aliveHeaders[header.header.hash])\n        rejected_headers.push(\n          aliveHeaders[header.header.hash] as SignedHeaderHashed\n        );\n      aliveHeaders[header.header.hash] = undefined;\n    }\n  }\n\n  const isSomeHeaderAlive = Object.values(aliveHeaders).some(\n    header => header !== undefined\n  );\n\n  // TODO: add more cases\n  const entry_dht_status = isSomeHeaderAlive\n    ? EntryDhtStatus.Live\n    : EntryDhtStatus.Dead;\n\n  return {\n    entry_dht_status,\n    rejected_headers,\n  };\n}\n\nexport function hasDhtOpBeenProcessed(\n  state: CellState,\n  dhtOpHash: DhtOpHashB64\n): boolean {\n  return (\n    !!state.integrationLimbo[dhtOpHash] ||\n    !!state.integratedDHTOps[dhtOpHash] ||\n    !!state.validationLimbo[dhtOpHash]\n  );\n}\n\nexport function getIntegratedDhtOpsWithoutReceipt(\n  state: CellState\n): Dictionary<IntegratedDhtOpsValue> {\n  const needReceipt: Dictionary<IntegratedDhtOpsValue> = {};\n\n  for (const [dhtOpHash, integratedValue] of Object.entries(\n    state.integratedDHTOps\n  )) {\n    if (integratedValue.send_receipt) {\n      needReceipt[dhtOpHash] = integratedValue;\n    }\n  }\n  return needReceipt;\n}\n","import { shortest_arc_distance } from '../../processors/hash';\n\nexport interface DhtArc {\n  center_loc: number;\n  half_length: number;\n}\n\nexport function contains(dht_arc: DhtArc, location: number): boolean {\n  const do_hold_something = dht_arc.half_length !== 0;\n  const only_hold_self =\n    dht_arc.half_length === 1 && dht_arc.half_length === location;\n  const dist_as_array_length =\n    shortest_arc_distance(dht_arc.center_loc, location) + 1;\n\n  const within_range =\n    dht_arc.half_length > 1 && dist_as_array_length <= dht_arc.half_length;\n\n  return do_hold_something && (only_hold_self || within_range);\n}\n","import {\n  AgentPubKeyB64,\n  DHTOp,\n  Dictionary,\n  DnaHashB64,\n  HeaderHashB64,\n  DhtOpHashB64,\n  Metadata,\n  ValidationReceipt,\n  AnyDhtHashB64,\n} from '@holochain-open-dev/core-types';\nimport { location } from '../../processors/hash';\nimport { contains, DhtArc } from '../network/dht_arc';\n\nexport interface CellState {\n  dnaHash: DnaHashB64;\n  agentPubKey: AgentPubKeyB64;\n  sourceChain: Array<HeaderHashB64>;\n  CAS: Dictionary<any>;\n  metadata: Metadata; // For the moment only DHT shard\n  integratedDHTOps: Dictionary<IntegratedDhtOpsValue>; // Key is the hash of the DHT op\n  authoredDHTOps: Dictionary<AuthoredDhtOpsValue>; // Key is the hash of the DHT op\n  integrationLimbo: Dictionary<IntegrationLimboValue>; // Key is the hash of the DHT op\n  validationLimbo: Dictionary<ValidationLimboValue>; // Key is the hash of the DHT op\n  validationReceipts: Dictionary<Dictionary<ValidationReceipt>>; // Segmented by dhtOpHash/authorOfReceipt\n  badAgents: AgentPubKeyB64[];\n}\n\nexport interface IntegratedDhtOpsValue {\n  op: DHTOp;\n  validation_status: ValidationStatus;\n  when_integrated: number;\n  /// Send a receipt to this author.\n  send_receipt: Boolean;\n}\n\nexport interface IntegrationLimboValue {\n  op: DHTOp;\n  validation_status: ValidationStatus;\n  /// Send a receipt to this author.\n  send_receipt: Boolean;\n}\n\nexport enum ValidationStatus {\n  Valid,\n  Rejected,\n  Abandoned,\n}\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/state/dht_op_integration.rs\nexport interface AuthoredDhtOpsValue {\n  op: DHTOp;\n  receipt_count: number;\n  last_publish_time: number | undefined;\n}\n\nexport enum ValidationLimboStatus {\n  Pending,\n  AwaitingSysDeps,\n  SysValidated,\n  AwaitingAppDeps,\n}\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/state/validation_db.rs#L24\nexport interface ValidationLimboValue {\n  status: ValidationLimboStatus;\n  op: DHTOp;\n  basis: AnyDhtHashB64;\n  time_added: number;\n  last_try: number | undefined;\n  num_tries: number;\n  from_agent: AgentPubKeyB64 | undefined;\n  /// Send a receipt to this author.\n  send_receipt: Boolean;\n}\n\nexport function query_dht_ops(\n  integratedDHTOps: Dictionary<IntegratedDhtOpsValue>,\n  from: number | undefined,\n  to: number | undefined,\n  dht_arc: DhtArc\n): Array<DhtOpHashB64> {\n  const isDhtOpsInFilter = ([dhtOpHash, dhtOpValue]: [\n    DhtOpHashB64,\n    IntegratedDhtOpsValue\n  ]) => {\n    if (from && dhtOpValue.when_integrated < from) return false;\n    if (to && dhtOpValue.when_integrated > to) return false;\n    if (dht_arc && !contains(dht_arc, location(dhtOpHash))) return false;\n  };\n\n  const ops = Object.entries(integratedDHTOps).filter(isDhtOpsInFilter);\n  return ops.map(op => op[0]);\n}\n","import {\n  Create,\n  Delete,\n  Entry,\n  EntryHashB64,\n  EntryType,\n  HeaderHashB64,\n  NewEntryHeader,\n  SignedHeaderHashed,\n  Update,\n} from '@holochain-open-dev/core-types';\nimport { P2pCell } from '../../..';\nimport { GetLinksOptions, GetOptions } from '../../../types';\nimport {\n  getLinksForEntry,\n  getHeaderModifiers,\n  getHeadersForEntry,\n  getEntryDetails,\n} from '../dht/get';\nimport { CellState, ValidationStatus } from '../state';\nimport {\n  GetEntryResponse,\n  GetElementResponse,\n  GetLinksResponse,\n} from './types';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain_cascade/src/authority.rs\nexport class Authority {\n  constructor(protected state: CellState, protected p2p: P2pCell) {}\n\n  public async handle_get_entry(\n    entry_hash: EntryHashB64,\n    options: GetOptions\n  ): Promise<GetEntryResponse | undefined> {\n    const entry = this.state.CAS[entry_hash];\n    if (!entry) return undefined;\n\n    const allHeaders = getHeadersForEntry(this.state, entry_hash);\n\n    const entryDetails = getEntryDetails(this.state, entry_hash);\n\n    const createHeader = allHeaders.find(\n      header => (header.header.content as Create).entry_type\n    );\n    let entry_type: EntryType | undefined = undefined;\n    if (createHeader)\n      entry_type = (createHeader.header.content as Create).entry_type;\n\n    return {\n      entry,\n      entry_type: entry_type as EntryType,\n      deletes: entryDetails.deletes as SignedHeaderHashed<Delete>[],\n      updates: entryDetails.updates as SignedHeaderHashed<Update>[],\n      live_headers: entryDetails.headers as SignedHeaderHashed<Create>[],\n    };\n  }\n\n  public async handle_get_element(\n    header_hash: HeaderHashB64,\n    options: GetOptions\n  ): Promise<GetElementResponse | undefined> {\n    if (this.state.metadata.misc_meta[header_hash] !== 'StoreElement') {\n      return undefined;\n    }\n\n    const header = this.state.CAS[header_hash] as SignedHeaderHashed;\n    let maybe_entry: Entry | undefined = undefined;\n    let validation_status: ValidationStatus = ValidationStatus.Valid;\n\n    if (header) {\n      if (\n        (header as SignedHeaderHashed<NewEntryHeader>).header.content.entry_hash\n      ) {\n        const entryHash = (header as SignedHeaderHashed<NewEntryHeader>).header\n          .content.entry_hash;\n        maybe_entry = this.state.CAS[entryHash];\n      }\n    } else {\n      validation_status = ValidationStatus.Rejected;\n    }\n\n    const modifiers = getHeaderModifiers(this.state, header_hash);\n\n    return {\n      deletes: modifiers.deletes,\n      updates: modifiers.updates,\n      signed_header: header,\n      validation_status,\n      maybe_entry,\n    };\n  }\n\n  public async handle_get_links(\n    base_address: EntryHashB64,\n    options: GetLinksOptions\n  ): Promise<GetLinksResponse> {\n    return getLinksForEntry(this.state, base_address);\n  }\n}\n","import {\n  AnyDhtHashB64,\n  CreateLink,\n  Details,\n  DetailsType,\n  Dictionary,\n  Element,\n  ElementDetails,\n  Entry,\n  EntryDetails,\n  EntryHashB64,\n  HeaderHashB64,\n  NewEntryHeader,\n  SignedHeaderHashed,\n} from '@holochain-open-dev/core-types';\nimport { getHashType, HashType } from '../../../processors/hash';\nimport { GetLinksOptions, GetOptions, GetStrategy } from '../../../types';\nimport { P2pCell } from '../../network/p2p-cell';\nimport { Cell } from '../cell';\nimport { computeDhtStatus, getEntryDhtStatus, getLiveLinks } from '../dht/get';\nimport { CellState } from '../state';\nimport { Authority } from './authority';\nimport {\n  GetElementResponse,\n  GetEntryResponse,\n  GetLinksResponse,\n  Link,\n} from './types';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain_cascade/src/lib.rs#L1523\n\n// TODO: refactor Cascade when sqlite gets merged\n\nexport class Cascade {\n  constructor(protected state: CellState, protected p2p: P2pCell) {}\n\n  // TODO refactor when sqlite gets merged\n  public async retrieve_header(\n    hash: HeaderHashB64,\n    options: GetOptions\n  ): Promise<SignedHeaderHashed | undefined> {\n    if (getHashType(hash) !== HashType.HEADER)\n      throw new Error(\n        `Trying to retrieve a header with a hash of another type`\n      );\n\n    const isPresent = this.state.CAS[hash];\n\n    // TODO only return local if GetOptions::content() is given\n    if (isPresent && options.strategy === GetStrategy.Contents) {\n      const signed_header = this.state.CAS[hash];\n      return signed_header;\n    }\n\n    const result = await this.p2p.get(hash, options);\n\n    if (result && (result as GetElementResponse).signed_header) {\n      return (result as GetElementResponse).signed_header;\n    } else return undefined;\n  }\n\n  public async retrieve_entry(\n    hash: EntryHashB64,\n    options: GetOptions\n  ): Promise<Entry | undefined> {\n    const hashType = getHashType(hash);\n    if (hashType !== HashType.ENTRY && hashType !== HashType.AGENT)\n      throw new Error(`Trying to retrieve a entry with a hash of another type`);\n\n    const isPresent = this.state.CAS[hash];\n\n    if (isPresent && options.strategy === GetStrategy.Contents) {\n      const entry = this.state.CAS[hash];\n      return entry;\n    }\n\n    const result = await this.p2p.get(hash, options);\n\n    if (result && (result as GetEntryResponse).entry) {\n      return (result as GetEntryResponse).entry;\n    } else return undefined;\n  }\n\n  public async dht_get(\n    hash: AnyDhtHashB64,\n    options: GetOptions\n  ): Promise<Element | undefined> {\n    // TODO rrDHT arcs\n    const authority = new Authority(this.state, this.p2p);\n\n    const isPresent = this.state.CAS[hash];\n\n    // TODO only return local if GetOptions::content() is given\n    if (isPresent && options.strategy === GetStrategy.Contents) {\n      const hashType = getHashType(hash);\n\n      if (hashType === HashType.ENTRY) {\n        const entry = this.state.CAS[hash];\n        const signed_header = Object.values(this.state.CAS).find(\n          header =>\n            (header as SignedHeaderHashed).header &&\n            (header as SignedHeaderHashed<NewEntryHeader>).header.content\n              .entry_hash === hash\n        );\n\n        return {\n          entry,\n          signed_header,\n        };\n      }\n\n      if (hashType === HashType.HEADER) {\n        const signed_header = this.state.CAS[hash];\n        const entry = this.state.CAS[\n          (signed_header as SignedHeaderHashed<NewEntryHeader>).header.content\n            .entry_hash\n        ];\n        return {\n          entry,\n          signed_header,\n        };\n      }\n    }\n\n    const result = await this.p2p.get(hash, options);\n\n    if (!result) return undefined;\n\n    if ((result as GetElementResponse).signed_header) {\n      return {\n        entry: (result as GetElementResponse).maybe_entry,\n        signed_header: (result as GetElementResponse).signed_header,\n      };\n    } else {\n      return {\n        signed_header: (result as GetEntryResponse).live_headers[0],\n        entry: (result as GetEntryResponse).entry,\n      };\n    }\n  }\n\n  public async dht_get_details(\n    hash: AnyDhtHashB64,\n    options: GetOptions\n  ): Promise<Details | undefined> {\n    if (getHashType(hash) === HashType.ENTRY) {\n      const entryDetails = await this.getEntryDetails(hash, options);\n\n      if (!entryDetails) return undefined;\n\n      return {\n        type: DetailsType.Entry,\n        content: entryDetails,\n      };\n    } else if (getHashType(hash) === HashType.HEADER) {\n      const elementDetails = await this.getHeaderDetails(hash, options);\n\n      if (!elementDetails) return undefined;\n\n      return {\n        type: DetailsType.Element,\n        content: elementDetails,\n      };\n    }\n\n    return undefined;\n  }\n\n  public async dht_get_links(\n    base_address: EntryHashB64,\n    options: GetLinksOptions\n  ): Promise<Link[]> {\n    // TODO: check if we are an authority\n\n    const linksResponses = await this.p2p.get_links(base_address, options);\n    return getLiveLinks(linksResponses);\n  }\n\n  async getEntryDetails(\n    entryHash: EntryHashB64,\n    options: GetOptions\n  ): Promise<EntryDetails | undefined> {\n    // TODO: check if we are an authority\n    const result = await this.p2p.get(entryHash, options);\n\n    if (!result) return undefined;\n    if ((result as GetEntryResponse).live_headers === undefined)\n      throw new Error('Unreachable');\n\n    const getEntryFull = result as GetEntryResponse;\n\n    const allHeaders = [\n      ...getEntryFull.deletes,\n      ...getEntryFull.updates,\n      ...getEntryFull.live_headers,\n    ];\n\n    const { rejected_headers, entry_dht_status } = computeDhtStatus(allHeaders);\n\n    return {\n      entry: getEntryFull.entry,\n      headers: getEntryFull.live_headers,\n      deletes: getEntryFull.deletes,\n      updates: getEntryFull.updates,\n      rejected_headers,\n      entry_dht_status,\n    };\n  }\n\n  async getHeaderDetails(\n    headerHash: HeaderHashB64,\n    options: GetOptions\n  ): Promise<ElementDetails | undefined> {\n    const result = await this.p2p.get(headerHash, options);\n\n    if (!result) return undefined;\n    if ((result as GetElementResponse).validation_status === undefined)\n      throw new Error('Unreachable');\n\n    const response = result as GetElementResponse;\n\n    const element: Element = {\n      entry: response.maybe_entry,\n      signed_header: response.signed_header,\n    };\n\n    return {\n      element,\n      deletes: response.deletes,\n      updates: response.updates,\n      validation_status: response.validation_status,\n    };\n  }\n}\n","import {\n  DHTOp,\n  getEntry,\n  DHTOpType,\n  HeaderType,\n  ChainStatus,\n  LinkMetaKey,\n  LinkMetaVal,\n  SysMetaVal,\n  EntryDhtStatus,\n  Header,\n  SignedHeaderHashed,\n  NewEntryHeader,\n  ValidationReceipt,\n  DhtOpHashB64,\n  HeaderHashB64,\n  EntryHashB64,\n  AnyDhtHashB64,\n} from '@holochain-open-dev/core-types';\nimport { isEqual } from 'lodash-es';\nimport {\n  ValidationLimboValue,\n  CellState,\n  IntegrationLimboValue,\n  IntegratedDhtOpsValue,\n} from '../state';\n\nimport { getHeadersForEntry } from './get';\n\nexport const putValidationLimboValue = (\n  dhtOpHash: DhtOpHashB64,\n  validationLimboValue: ValidationLimboValue\n) => (state: CellState) => {\n  state.validationLimbo[dhtOpHash] = validationLimboValue;\n};\n\nexport const putValidationReceipt = (\n  dhtOpHash: DhtOpHashB64,\n  validationReceipt: ValidationReceipt\n) => (state: CellState) => {\n  if (!state.validationReceipts[dhtOpHash])\n    state.validationReceipts[dhtOpHash] = {};\n\n  state.validationReceipts[dhtOpHash][\n    validationReceipt.validator\n  ] = validationReceipt;\n};\n\nexport const deleteValidationLimboValue = (dhtOpHash: DhtOpHashB64) => (\n  state: CellState\n) => {\n  delete state.validationLimbo[dhtOpHash];\n};\n\nexport const putIntegrationLimboValue = (\n  dhtOpHash: DhtOpHashB64,\n  integrationLimboValue: IntegrationLimboValue\n) => (state: CellState) => {\n  state.integrationLimbo[dhtOpHash] = integrationLimboValue;\n};\n\nexport const putDhtOpData = (dhtOp: DHTOp) => (state: CellState) => {\n  const headerHash = dhtOp.header.header.hash;\n  state.CAS[headerHash] = dhtOp.header;\n\n  const entry = getEntry(dhtOp);\n\n  if (entry) {\n    state.CAS[\n      (dhtOp.header.header.content as NewEntryHeader).entry_hash\n    ] = entry;\n  }\n};\n\nexport const putDhtOpMetadata = (dhtOp: DHTOp) => (state: CellState) => {\n  const headerHash = dhtOp.header.header.hash;\n\n  if (dhtOp.type === DHTOpType.StoreElement) {\n    state.metadata.misc_meta[headerHash] = 'StoreElement';\n  } else if (dhtOp.type === DHTOpType.StoreEntry) {\n    const entryHash = dhtOp.header.header.content.entry_hash;\n\n    if (dhtOp.header.header.content.type === HeaderType.Update) {\n      register_header_on_basis(headerHash, dhtOp.header)(state);\n      register_header_on_basis(entryHash, dhtOp.header)(state);\n    }\n\n    register_header_on_basis(entryHash, dhtOp.header)(state);\n    update_entry_dht_status(entryHash)(state);\n  } else if (dhtOp.type === DHTOpType.RegisterAgentActivity) {\n    state.metadata.misc_meta[headerHash] = {\n      ChainItem: dhtOp.header.header.content.timestamp,\n    };\n\n    state.metadata.misc_meta[dhtOp.header.header.content.author] = {\n      ChainStatus: ChainStatus.Valid,\n    };\n  } else if (\n    dhtOp.type === DHTOpType.RegisterUpdatedContent ||\n    dhtOp.type === DHTOpType.RegisterUpdatedElement\n  ) {\n    register_header_on_basis(\n      dhtOp.header.header.content.original_header_address,\n      dhtOp.header\n    )(state);\n    register_header_on_basis(\n      dhtOp.header.header.content.original_entry_address,\n      dhtOp.header\n    )(state);\n    update_entry_dht_status(dhtOp.header.header.content.original_entry_address)(\n      state\n    );\n  } else if (\n    dhtOp.type === DHTOpType.RegisterDeletedBy ||\n    dhtOp.type === DHTOpType.RegisterDeletedEntryHeader\n  ) {\n    register_header_on_basis(\n      dhtOp.header.header.content.deletes_address,\n      dhtOp.header\n    )(state);\n    register_header_on_basis(\n      dhtOp.header.header.content.deletes_entry_address,\n      dhtOp.header\n    )(state);\n\n    update_entry_dht_status(dhtOp.header.header.content.deletes_entry_address)(\n      state\n    );\n  } else if (dhtOp.type === DHTOpType.RegisterAddLink) {\n    const key: LinkMetaKey = {\n      base: dhtOp.header.header.content.base_address,\n      header_hash: headerHash,\n      tag: dhtOp.header.header.content.tag,\n      zome_id: dhtOp.header.header.content.zome_id,\n    };\n    const value: LinkMetaVal = {\n      link_add_hash: headerHash,\n      tag: dhtOp.header.header.content.tag,\n      target: dhtOp.header.header.content.target_address,\n      timestamp: dhtOp.header.header.content.timestamp,\n      zome_id: dhtOp.header.header.content.zome_id,\n    };\n    state.metadata.link_meta.push({ key, value });\n  } else if (dhtOp.type === DHTOpType.RegisterRemoveLink) {\n    const val: SysMetaVal = {\n      DeleteLink: headerHash,\n    };\n\n    putSystemMetadata(dhtOp.header.header.content.link_add_address, val)(state);\n  }\n};\n\nfunction is_header_alive(state: CellState, headerHash: HeaderHashB64): boolean {\n  const dhtHeaders = state.metadata.system_meta[headerHash];\n  if (dhtHeaders) {\n    const isHeaderDeleted = !!dhtHeaders.find(\n      metaVal =>\n        (metaVal as {\n          Delete: HeaderHashB64;\n        }).Delete\n    );\n    return !isHeaderDeleted;\n  }\n  return true;\n}\n\nconst update_entry_dht_status = (entryHash: EntryHashB64) => (\n  state: CellState\n) => {\n  const headers = getHeadersForEntry(state, entryHash);\n\n  const entryIsAlive = headers.some(header =>\n    is_header_alive(state, header.header.hash)\n  );\n\n  state.metadata.misc_meta[entryHash] = {\n    EntryStatus: entryIsAlive ? EntryDhtStatus.Live : EntryDhtStatus.Dead,\n  };\n};\n\nexport const register_header_on_basis = (\n  basis: AnyDhtHashB64,\n  header: SignedHeaderHashed\n) => (state: CellState) => {\n  let value: SysMetaVal | undefined;\n  const headerType = header.header.content.type;\n  if (headerType === HeaderType.Create) {\n    value = { NewEntry: header.header.hash };\n  } else if (headerType === HeaderType.Update) {\n    value = { Update: header.header.hash };\n  } else if (headerType === HeaderType.Delete) {\n    value = { Delete: header.header.hash };\n  }\n\n  if (value) {\n    putSystemMetadata(basis, value)(state);\n  }\n};\n\nexport const putSystemMetadata = (basis: AnyDhtHashB64, value: SysMetaVal) => (\n  state: CellState\n) => {\n  if (!state.metadata.system_meta[basis]) {\n    state.metadata.system_meta[basis] = [];\n  }\n\n  if (!state.metadata.system_meta[basis].find(v => isEqual(v, value))) {\n    state.metadata.system_meta[basis].push(value);\n  }\n};\n\nexport const putDhtOpToIntegrated = (\n  dhtOpHash: DhtOpHashB64,\n  integratedValue: IntegratedDhtOpsValue\n) => (state: CellState) => {\n  state.integratedDHTOps[dhtOpHash] = integratedValue;\n};\n","import {\n  Element,\n  HeaderHashB64,\n  NewEntryHeader,\n  SignedHeaderHashed,\n} from '@holochain-open-dev/core-types';\nimport { CellState } from '../state';\n\n/**\n * Returns the header hashes which don't have their DHTOps in the authoredDHTOps DB\n */\nexport function getNewHeaders(state: CellState): Array<HeaderHashB64> {\n  const dhtOps = Object.values(state.authoredDHTOps);\n  const headerHashesAlreadyPublished = dhtOps.map(\n    dhtOp => dhtOp.op.header.header.hash\n  );\n  return state.sourceChain.filter(\n    headerHash => !headerHashesAlreadyPublished.includes(headerHash)\n  );\n}\n\nexport function getAllAuthoredHeaders(\n  state: CellState\n): Array<SignedHeaderHashed> {\n  return state.sourceChain.map(headerHash => state.CAS[headerHash]);\n}\n\nexport function getSourceChainElements(\n  state: CellState,\n  fromIndex: number,\n  toIndex: number\n): Element[] {\n  const elements: Element[] = [];\n\n  for (let i = fromIndex; i < toIndex; i++) {\n    const element = getSourceChainElement(state, i);\n    if (element) elements.push(element);\n  }\n\n  return elements;\n}\n\nexport function getSourceChainElement(\n  state: CellState,\n  index: number\n): Element | undefined {\n  const headerHash = state.sourceChain[index];\n  const signed_header: SignedHeaderHashed = state.CAS[headerHash];\n\n  let entry = undefined;\n  const entryHash = (signed_header.header.content as NewEntryHeader).entry_hash;\n  if (entryHash) {\n    entry = state.CAS[entryHash];\n  }\n\n  return {\n    entry,\n    signed_header,\n  };\n}\n","import {\n  AgentPubKeyB64,\n  AnyDhtHashB64,\n  AppEntryType,\n  CellId,\n  DHTOp,\n  DHTOpType,\n  Entry,\n  EntryHashB64,\n  EntryType,\n  NewEntryHeader,\n} from '@holochain-open-dev/core-types';\nimport { hash, HashType } from '../../processors/hash';\nimport { Cell } from './cell';\n\nexport function hashEntry(entry: Entry): EntryHashB64 {\n  if (entry.entry_type === 'Agent') return entry.content;\n  return hash(entry.content, HashType.ENTRY);\n}\n\nexport function getAppEntryType(\n  entryType: EntryType\n): AppEntryType | undefined {\n  if ((entryType as { App: AppEntryType }).App)\n    return (entryType as { App: AppEntryType }).App;\n  return undefined;\n}\n\nexport function getEntryTypeString(cell: Cell, entryType: EntryType): string {\n  const appEntryType = getAppEntryType(entryType);\n\n  if (appEntryType) {\n    const dna = cell.getSimulatedDna();\n    return dna.zomes[appEntryType.zome_id].entry_defs[appEntryType.id].id;\n  }\n\n  return entryType as string;\n}\n\nexport function getDHTOpBasis(dhtOp: DHTOp): AnyDhtHashB64 {\n  switch (dhtOp.type) {\n    case DHTOpType.StoreElement:\n      return dhtOp.header.header.hash;\n    case DHTOpType.StoreEntry:\n      return dhtOp.header.header.content.entry_hash;\n    case DHTOpType.RegisterUpdatedContent:\n      return dhtOp.header.header.content.original_entry_address;\n    case DHTOpType.RegisterUpdatedElement:\n      return dhtOp.header.header.content.original_header_address;\n    case DHTOpType.RegisterAgentActivity:\n      return dhtOp.header.header.content.author;\n    case DHTOpType.RegisterAddLink:\n      return dhtOp.header.header.content.base_address;\n    case DHTOpType.RegisterRemoveLink:\n      return dhtOp.header.header.content.base_address;\n    case DHTOpType.RegisterDeletedBy:\n      return dhtOp.header.header.content.deletes_address;\n    case DHTOpType.RegisterDeletedEntryHeader:\n      return dhtOp.header.header.content.deletes_entry_address;\n    default:\n      return (undefined as unknown) as AnyDhtHashB64;\n  }\n}\n","import { CellState } from '../state';\nimport { Element } from '@holochain-open-dev/core-types';\nimport { hashEntry } from '../utils';\n\nexport const putElement = (element: Element) => (state: CellState): void => {\n  // Put header in CAS\n  const headerHash = element.signed_header.header.hash;\n  state.CAS[headerHash] = element.signed_header;\n\n  // Put entry in CAS if it exist\n  if (element.entry) {\n    const entryHash = hashEntry(element.entry);\n    state.CAS[entryHash] = element.entry;\n  }\n\n  state.sourceChain.push(headerHash);\n};\n","import {\n  AgentPubKeyB64,\n  Dna,\n  HeaderType,\n  CellId,\n  Element,\n  Dictionary,\n  DHTOp,\n  SignedHeaderHashed,\n  NewEntryHeader,\n  Delete,\n  ZomeCallCapGrant,\n  Update,\n  Entry,\n  CapSecret,\n  HeaderHashB64,\n  DnaHashB64,\n} from '@holochain-open-dev/core-types';\nimport { CellState } from '../state';\nimport { getAllAuthoredHeaders } from './get';\n\nexport function getTipOfChain(cellState: CellState): HeaderHashB64 {\n  return cellState.sourceChain[cellState.sourceChain.length - 1];\n}\n\nexport function getAuthor(cellState: CellState): AgentPubKeyB64 {\n  return getHeaderAt(cellState, 0).header.content.author;\n}\n\nexport function getDnaHash(state: CellState): DnaHashB64 {\n  const firstHeaderHash = state.sourceChain[state.sourceChain.length - 1];\n\n  const dna: SignedHeaderHashed<Dna> = state.CAS[firstHeaderHash];\n  return dna.header.content.hash;\n}\n\nexport function getHeaderAt(\n  cellState: CellState,\n  index: number\n): SignedHeaderHashed {\n  const headerHash = cellState.sourceChain[index];\n  return cellState.CAS[headerHash];\n}\n\nexport function getNextHeaderSeq(cellState: CellState): number {\n  return cellState.sourceChain.length;\n}\n\nexport function getElement(\n  state: CellState,\n  headerHash: HeaderHashB64\n): Element {\n  const signed_header: SignedHeaderHashed = state.CAS[headerHash];\n\n  let entry;\n  if (\n    signed_header.header.content.type == HeaderType.Create ||\n    signed_header.header.content.type == HeaderType.Update\n  ) {\n    entry = state.CAS[signed_header.header.content.entry_hash];\n  }\n  return { signed_header, entry };\n}\n\nexport function getCellId(state: CellState): CellId {\n  const author = getAuthor(state);\n  const dna = getDnaHash(state);\n  return [dna, author];\n}\n\nexport function getNonPublishedDhtOps(state: CellState): Dictionary<DHTOp> {\n  const nonPublishedDhtOps: Dictionary<DHTOp> = {};\n  for (const dhtOpHash of Object.keys(state.authoredDHTOps)) {\n    const authoredValue = state.authoredDHTOps[dhtOpHash];\n    if (authoredValue.last_publish_time === undefined) {\n      nonPublishedDhtOps[dhtOpHash] = authoredValue.op;\n    }\n  }\n\n  return nonPublishedDhtOps;\n}\n\nexport function valid_cap_grant(\n  state: CellState,\n  zome: string,\n  fnName: string,\n  provenance: AgentPubKeyB64,\n  secret: CapSecret | undefined\n): boolean {\n  if (provenance === getCellId(state)[1]) return true;\n\n  const aliveCapGrantsHeaders: Dictionary<\n    SignedHeaderHashed<NewEntryHeader>\n  > = {};\n\n  const allHeaders = getAllAuthoredHeaders(state);\n\n  for (const header of allHeaders) {\n    if (isCapGrant(header)) {\n      aliveCapGrantsHeaders[\n        header.header.hash\n      ] = header as SignedHeaderHashed<NewEntryHeader>;\n    }\n  }\n\n  for (const header of allHeaders) {\n    const headerContent = header.header.content;\n    if (\n      (headerContent as Update).original_header_address &&\n      aliveCapGrantsHeaders[(headerContent as Update).original_header_address]\n    ) {\n      delete aliveCapGrantsHeaders[\n        (headerContent as Update).original_header_address\n      ];\n    }\n    if (\n      (headerContent as Delete).deletes_address &&\n      aliveCapGrantsHeaders[(headerContent as Delete).deletes_address]\n    ) {\n      delete aliveCapGrantsHeaders[(headerContent as Delete).deletes_address];\n    }\n  }\n\n  const aliveCapGrants: Array<ZomeCallCapGrant> = Object.values(\n    aliveCapGrantsHeaders\n  ).map(\n    headerHash =>\n      (state.CAS[headerHash.header.content.entry_hash] as Entry).content\n  );\n\n  return !!aliveCapGrants.find(capGrant =>\n    isCapGrantValid(capGrant, zome, fnName, provenance, secret)\n  );\n}\n\nfunction isCapGrantValid(\n  capGrant: ZomeCallCapGrant,\n  zome: string,\n  fnName: string,\n  check_agent: AgentPubKeyB64,\n  check_secret: CapSecret | undefined\n): boolean {\n  if (!capGrant.functions.find(fn => fn.fn_name === fnName && fn.zome === zome))\n    return false;\n\n  if (capGrant.access === 'Unrestricted') return true;\n  else if (\n    (capGrant.access as {\n      Assigned: { assignees: AgentPubKeyB64[]; secret: CapSecret };\n    }).Assigned\n  ) {\n    return (capGrant.access as {\n      Assigned: {\n        secret: CapSecret;\n        assignees: AgentPubKeyB64[];\n      };\n    }).Assigned.assignees.includes(check_agent);\n  } else {\n    return (\n      (capGrant.access as {\n        Transferable: { secret: CapSecret };\n      }).Transferable.secret === check_secret\n    );\n  }\n}\n\nfunction isCapGrant(header: SignedHeaderHashed): boolean {\n  const content = header.header.content;\n  return !!(\n    (content as NewEntryHeader).entry_hash &&\n    (content as NewEntryHeader).entry_type === 'CapGrant'\n  );\n}\n","import {\n  now,\n  AgentPubKeyB64,\n  Dna,\n  HeaderType,\n  AgentValidationPkg,\n  Entry,\n  EntryType,\n  Create,\n  Update,\n  SignedHeaderHashed,\n  Header,\n  CreateLink,\n  Delete,\n  DeleteLink,\n  Timestamp,\n  DnaHashB64,\n  EntryHashB64,\n  HeaderHashB64,\n} from '@holochain-open-dev/core-types';\nimport { hash, HashType } from '../../../processors/hash';\nimport { CellState } from '../state';\nimport { hashEntry } from '../utils';\nimport { getAuthor, getNextHeaderSeq, getTipOfChain } from './utils';\n\nexport function buildShh(header: Header): SignedHeaderHashed {\n  return {\n    header: {\n      content: header,\n      hash: hash(header, HashType.HEADER),\n    },\n    signature: Uint8Array.from([]),\n  };\n}\n\nexport function buildDna(dnaHash: DnaHashB64, agentId: AgentPubKeyB64): Dna {\n  const dna: Dna = {\n    author: agentId,\n    hash: dnaHash,\n    timestamp: now(),\n    type: HeaderType.Dna,\n  };\n\n  return dna;\n}\n\nexport function buildAgentValidationPkg(\n  state: CellState,\n  membrane_proof: any\n): AgentValidationPkg {\n  const pkg: AgentValidationPkg = {\n    ...buildCommon(state),\n    membrane_proof,\n    type: HeaderType.AgentValidationPkg,\n  };\n  return pkg;\n}\n\nexport function buildCreate(\n  state: CellState,\n  entry: Entry,\n  entry_type: EntryType\n): Create {\n  const entry_hash = hashEntry(entry);\n\n  const create: Create = {\n    ...buildCommon(state),\n    entry_hash,\n    entry_type,\n    type: HeaderType.Create,\n  };\n  return create;\n}\n\nexport function buildCreateLink(\n  state: CellState,\n  zome_id: number,\n  base: EntryHashB64,\n  target: EntryHashB64,\n  tag: any\n): CreateLink {\n  const create_link: CreateLink = {\n    ...buildCommon(state),\n    base_address: base,\n    target_address: target,\n    tag,\n    zome_id,\n    type: HeaderType.CreateLink,\n  };\n  return create_link;\n}\n\nexport function buildUpdate(\n  state: CellState,\n  entry: Entry,\n  entry_type: EntryType,\n  original_entry_address: EntryHashB64,\n  original_header_address: HeaderHashB64\n): Update {\n  const entry_hash = hashEntry(entry);\n\n  const update: Update = {\n    ...buildCommon(state),\n    entry_hash,\n    entry_type,\n    original_entry_address,\n    original_header_address,\n\n    type: HeaderType.Update,\n  };\n  return update;\n}\n\nexport function buildDelete(\n  state: CellState,\n  deletes_address: HeaderHashB64,\n  deletes_entry_address: EntryHashB64\n): Delete {\n  const deleteHeader: Delete = {\n    ...buildCommon(state),\n    type: HeaderType.Delete,\n    deletes_address,\n    deletes_entry_address,\n  };\n  return deleteHeader;\n}\n\nexport function buildDeleteLink(\n  state: CellState,\n  base_address: EntryHashB64,\n  link_add_address: HeaderHashB64\n): DeleteLink {\n  const deleteHeader: DeleteLink = {\n    ...buildCommon(state),\n    type: HeaderType.DeleteLink,\n    base_address,\n    link_add_address,\n  };\n  return deleteHeader;\n}\n/** Helpers */\n\nfunction buildCommon(state: CellState) {\n  const author = getAuthor(state);\n  const header_seq = getNextHeaderSeq(state);\n  const prev_header = getTipOfChain(state);\n  const timestamp = now();\n\n  return {\n    author,\n    header_seq,\n    prev_header,\n    timestamp,\n  };\n}\n","import { SimulatedDna } from '../../../dnas/simulated-dna';\nimport { BadAgentConfig } from '../../bad-agent';\nimport { P2pCell } from '../../network/p2p-cell';\nimport { CellState } from '../state';\n\nexport interface Workspace {\n  state: CellState;\n  p2p: P2pCell;\n  dna: SimulatedDna;\n  badAgentConfig?: BadAgentConfig & { counterfeit_dna?: SimulatedDna };\n}\n\nexport interface Workflow<D, R> {\n  type: WorkflowType;\n  details: D;\n  task: (worskpace: Workspace) => Promise<WorkflowReturn<R>>;\n}\nexport type WorkflowReturn<R> = {\n  result: R;\n  triggers: Array<Workflow<any, any>>;\n};\n\nexport enum WorkflowType {\n  CALL_ZOME = 'Call Zome Function',\n  SYS_VALIDATION = 'System Validation',\n  PUBLISH_DHT_OPS = 'Publish DHT Ops',\n  PRODUCE_DHT_OPS = 'Produce DHT Ops',\n  APP_VALIDATION = 'App Validation',\n  AGENT_VALIDATION = 'Validate Agent',\n  INTEGRATE_DHT_OPS = 'Integrate DHT Ops',\n  GENESIS = 'Genesis',\n  INCOMING_DHT_OPS = 'Incoming DHT Ops',\n  VALIDATION_RECEIPT = 'Validation Receipt',\n}\n\nexport function workflowPriority(workflowType: WorkflowType): number {\n  switch (workflowType) {\n    case WorkflowType.GENESIS:\n      return 0;\n    case WorkflowType.CALL_ZOME:\n      return 1;\n    default:\n      return 10;\n  }\n}\n","import {\n  AgentPubKeyB64,\n  AnyDhtHashB64,\n  DHTOp,\n  ValidationReceipt,\n  ValidationStatus,\n} from '@holochain-open-dev/core-types';\nimport { uniq } from 'lodash-es';\nimport { distance, location, wrap } from '../../processors/hash';\nimport { CellState } from '../cell';\n\nexport function getClosestNeighbors(\n  peers: AgentPubKeyB64[],\n  targetHash: AnyDhtHashB64,\n  numNeighbors: number\n): AgentPubKeyB64[] {\n  const sortedPeers = peers.sort(\n    (agentA: AgentPubKeyB64, agentB: AgentPubKeyB64) => {\n      const distanceA = distance(agentA, targetHash);\n      const distanceB = distance(agentB, targetHash);\n      return distanceA - distanceB;\n    }\n  );\n\n  return sortedPeers.slice(0, numNeighbors);\n}\n\nexport function getFarthestNeighbors(\n  peers: AgentPubKeyB64[],\n  targetHash: AnyDhtHashB64\n): AgentPubKeyB64[] {\n  const sortedPeers = peers.sort(\n    (agentA: AgentPubKeyB64, agentB: AgentPubKeyB64) => {\n      return (\n        wrap(location(agentA) - location(targetHash)) -\n        wrap(location(agentB) - location(targetHash))\n      );\n    }\n  );\n\n  const index35 = Math.floor(sortedPeers.length * 0.35);\n  const index50 = Math.floor(sortedPeers.length / 2);\n  const index65 = Math.floor(sortedPeers.length * 0.65);\n\n  const neighbors = [\n    sortedPeers[index35],\n    sortedPeers[index50],\n    sortedPeers[index65],\n  ].filter(n => !!n);\n\n  return uniq(neighbors);\n}\n\nexport interface BadAction {\n  badAgents: AgentPubKeyB64[];\n  op: DHTOp;\n  receipts: ValidationReceipt[];\n}\nexport function getBadActions(state: CellState): Array<BadAction> {\n  const badActions: Array<BadAction> = [];\n\n  for (const [dhtOpHash, receipts] of Object.entries(\n    state.validationReceipts\n  )) {\n    const myReceipt = receipts[state.agentPubKey];\n    if (myReceipt) {\n      const dhtOp = state.integratedDHTOps[dhtOpHash].op;\n      const badAction: BadAction = {\n        badAgents: [],\n        op: dhtOp,\n        receipts: Object.values(receipts),\n      };\n\n      if (myReceipt.validation_status === ValidationStatus.Rejected) {\n        badAction.badAgents.push(dhtOp.header.header.content.author);\n      }\n      for (const [validatorAgent, receipt] of Object.entries(receipts)) {\n        if (receipt.validation_status !== myReceipt.validation_status) {\n          badAction.badAgents.push(receipt.validator);\n        }\n      }\n\n      if (badAction.badAgents.length > 0) {\n        badActions.push(badAction);\n      }\n    }\n  }\n  return badActions;\n}\n\nexport function getBadAgents(state: CellState): AgentPubKeyB64[] {\n  const actions = getBadActions(state);\n\n  const badAgents: AgentPubKeyB64[] = actions.reduce(\n    (acc, next) => [...acc, ...next.badAgents],\n    [] as string[]\n  );\n\n  return uniq(badAgents);\n}\n","import { ValidationStatus } from '../state';\nimport { getIntegratedDhtOpsWithoutReceipt } from '../dht/get';\nimport { putDhtOpToIntegrated, putValidationReceipt } from '../dht/put';\nimport { Workflow, WorkflowReturn, WorkflowType, Workspace } from './workflows';\nimport { now, ValidationReceipt } from '@holochain-open-dev/core-types';\nimport { getBadAgents } from '../../network/utils';\nimport { uniq } from 'lodash-es';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/integrate_dht_ops_workflow.rs\nexport const validation_receipt = async (\n  workspace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const integratedOpsWithoutReceipt = getIntegratedDhtOpsWithoutReceipt(\n    workspace.state\n  );\n  const pretendIsValid =\n    workspace.badAgentConfig &&\n    workspace.badAgentConfig.pretend_invalid_elements_are_valid;\n\n  for (const [dhtOpHash, integratedValue] of Object.entries(\n    integratedOpsWithoutReceipt\n  )) {\n    const receipt: ValidationReceipt = {\n      dht_op_hash: dhtOpHash,\n      validation_status: pretendIsValid\n        ? ValidationStatus.Valid\n        : integratedValue.validation_status,\n      validator: workspace.state.agentPubKey,\n      when_integrated: now(),\n    };\n\n    putValidationReceipt(dhtOpHash, receipt)(workspace.state);\n\n    const badAgents = getBadAgents(workspace.state);\n    const beforeCount = workspace.state.badAgents.length;\n\n    workspace.state.badAgents = uniq([\n      ...workspace.state.badAgents,\n      ...badAgents,\n    ]);\n\n    if (beforeCount !== badAgents.length) {\n      workspace.p2p.syncNeighbors();\n    }\n\n    integratedValue.send_receipt = false;\n\n    putDhtOpToIntegrated(dhtOpHash, integratedValue);\n  }\n\n  return {\n    result: undefined,\n    triggers: [],\n  };\n};\n\nexport type ValidationReceiptWorkflow = Workflow<void, void>;\n\nexport function validation_receipt_task(): ValidationReceiptWorkflow {\n  return {\n    type: WorkflowType.VALIDATION_RECEIPT,\n    details: undefined,\n    task: worskpace => validation_receipt(worskpace),\n  };\n}\n","import { IntegratedDhtOpsValue, ValidationStatus } from '../state';\nimport { pullAllIntegrationLimboDhtOps } from '../dht/get';\nimport {\n  putDhtOpData,\n  putDhtOpMetadata,\n  putDhtOpToIntegrated,\n} from '../dht/put';\nimport { Workflow, WorkflowReturn, WorkflowType, Workspace } from './workflows';\nimport { validation_receipt_task } from './validation_receipt';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/integrate_dht_ops_workflow.rs\nexport const integrate_dht_ops = async (\n  worskpace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const opsToIntegrate = pullAllIntegrationLimboDhtOps(worskpace.state);\n\n  for (const dhtOpHash of Object.keys(opsToIntegrate)) {\n    const integrationLimboValue = opsToIntegrate[dhtOpHash];\n\n    const dhtOp = integrationLimboValue.op;\n\n    if (integrationLimboValue.validation_status === ValidationStatus.Valid) {\n      putDhtOpData(dhtOp)(worskpace.state);\n      putDhtOpMetadata(dhtOp)(worskpace.state);\n    } else if (\n      integrationLimboValue.validation_status === ValidationStatus.Rejected\n    ) {\n      putDhtOpData(dhtOp)(worskpace.state);\n    }\n\n    const value: IntegratedDhtOpsValue = {\n      op: dhtOp,\n      validation_status: integrationLimboValue.validation_status,\n      when_integrated: Date.now(),\n      send_receipt: integrationLimboValue.send_receipt\n    };\n\n    putDhtOpToIntegrated(dhtOpHash, value)(worskpace.state);\n  }\n  return {\n    result: undefined,\n    triggers: [validation_receipt_task()],\n  };\n};\n\nexport type IntegrateDhtOpsWorkflow = Workflow<void, void>;\n\nexport function integrate_dht_ops_task(): IntegrateDhtOpsWorkflow {\n  return {\n    type: WorkflowType.INTEGRATE_DHT_OPS,\n    details: undefined,\n    task: worskpace => integrate_dht_ops(worskpace),\n  };\n}\n","import {\n  Entry,\n  EntryType,\n  HeaderHashB64,\n  Element,\n} from '@holochain-open-dev/core-types';\nimport {\n  buildCreate,\n  buildShh,\n} from '../../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../../cell/source-chain/put';\nimport { HostFnWorkspace } from '../../../host-fn';\n\nexport function common_create(\n  worskpace: HostFnWorkspace,\n  entry: Entry,\n  entry_type: EntryType\n): HeaderHashB64 {\n  const create = buildCreate(worskpace.state, entry, entry_type);\n\n  const element: Element = {\n    signed_header: buildShh(create),\n    entry,\n  };\n  putElement(element)(worskpace.state);\n  \n  return element.signed_header.header.hash;\n}\n","import {\n  Entry,\n  ZomeCallCapGrant,\n  AgentPubKeyB64,\n  CapSecret,\n  HeaderHashB64,\n} from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_create } from './common/create';\n\nexport type CreateCapGrantFn = (cap_grant: ZomeCallCapGrant) => Promise<HeaderHashB64>;\n\n// Creates a new Create header and its entry in the source chain\nexport const create_cap_grant: HostFn<CreateCapGrantFn> = (\n  worskpace: HostFnWorkspace\n): CreateCapGrantFn => async (cap_grant: ZomeCallCapGrant): Promise<HeaderHashB64> => {\n  if (\n    (cap_grant.access as {\n      Assigned: {\n        secret: CapSecret;\n        assignees: AgentPubKeyB64[];\n      };\n    }).Assigned.assignees.find(a => !!a && typeof a !== 'string')\n  ) {\n    throw new Error('Tried to assign a capability to an invalid agent');\n  }\n\n  const entry: Entry = { entry_type: 'CapGrant', content: cap_grant };\n\n  return common_create(worskpace, entry, 'CapGrant');\n};\n","import { Entry, HeaderHashB64 } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_create } from './common/create';\n\nexport type CreateEntryFn = (args: {\n  content: any;\n  entry_def_id: string;\n}) => Promise<HeaderHashB64>;\n\n// Creates a new Create header and its entry in the source chain\nexport const create_entry: HostFn<CreateEntryFn> = (\n  workspace: HostFnWorkspace,\n  zome_index: number\n): CreateEntryFn => async (args: {\n  content: any;\n  entry_def_id: string;\n}): Promise<HeaderHashB64> => {\n  const entry: Entry = { entry_type: 'App', content: args.content };\n\n  const entryDefIndex = workspace.dna.zomes[zome_index].entry_defs.findIndex(\n    entry_def => entry_def.id === args.entry_def_id\n  );\n  if (entryDefIndex < 0) {\n    throw new Error(\n      `Given entry def id ${args.entry_def_id} does not exist in this zome`\n    );\n  }\n\n  const entry_type = {\n    App: {\n      id: entryDefIndex,\n      zome_id: zome_index,\n      visibility:\n        workspace.dna.zomes[zome_index].entry_defs[entryDefIndex].visibility,\n    },\n  };\n\n  return common_create(workspace, entry, entry_type);\n};\n","import {\n  Element,\n  EntryHashB64,\n  HeaderHashB64,\n} from '@holochain-open-dev/core-types';\nimport {\n  buildCreateLink,\n  buildShh,\n} from '../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../cell/source-chain/put';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\n\nexport type CreateLinkFn = (args: {\n  base: EntryHashB64;\n  target: EntryHashB64;\n  tag: any;\n}) => Promise<HeaderHashB64>;\n\n// Creates a new CreateLink header in the source chain\nexport const create_link: HostFn<CreateLinkFn> = (\n  worskpace: HostFnWorkspace,\n  zome_id: number\n): CreateLinkFn => async (args): Promise<HeaderHashB64> => {\n  const createLink = buildCreateLink(\n    worskpace.state,\n    zome_id,\n    args.base,\n    args.target,\n    args.tag\n  );\n\n  const element: Element = {\n    signed_header: buildShh(createLink),\n    entry: undefined,\n  };\n  putElement(element)(worskpace.state);\n\n  return element.signed_header.header.hash;\n};\n","import { HeaderHashB64, Element, NewEntryHeader } from '@holochain-open-dev/core-types';\nimport { GetStrategy } from '../../../../../types';\nimport {\n  buildDelete,\n  buildShh,\n} from '../../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../../cell/source-chain/put';\nimport { HostFnWorkspace } from '../../../host-fn';\n\nexport async function common_delete(\n  worskpace: HostFnWorkspace,\n  header_hash: HeaderHashB64\n): Promise<HeaderHashB64> {\n  const headerToDelete = await worskpace.cascade.retrieve_header(header_hash, {\n    strategy: GetStrategy.Contents,\n  });\n\n  if (!headerToDelete) throw new Error('Could not find element to be deleted');\n\n  const deletesEntryAddress = (headerToDelete.header.content as NewEntryHeader)\n    .entry_hash;\n\n  if (!deletesEntryAddress)\n    throw new Error(`Trying to delete an element with no entry`);\n\n  const deleteHeader = buildDelete(\n    worskpace.state,\n    header_hash,\n    deletesEntryAddress\n  );\n\n  const element: Element = {\n    signed_header: buildShh(deleteHeader),\n    entry: undefined,\n  };\n  putElement(element)(worskpace.state);\n\n  return element.signed_header.header.hash;\n}\n","import { HeaderHashB64 } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_delete } from './common/delete';\n\nexport type DeleteCapGrantFn = (\n  deletes_address: HeaderHashB64\n) => Promise<HeaderHashB64>;\n\n// Creates a new Create header and its entry in the source chain\nexport const delete_cap_grant: HostFn<DeleteCapGrantFn> = (\n  worskpace: HostFnWorkspace\n): DeleteCapGrantFn => async (deletes_address): Promise<HeaderHashB64> => {\n  return common_delete(worskpace, deletes_address);\n};\n","import { HeaderHashB64 } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_delete } from './common/delete';\n\nexport type DeleteEntryFn = (deletes_address: HeaderHashB64) => Promise<HeaderHashB64>;\n\n// Creates a new Create header and its entry in the source chain\nexport const delete_entry: HostFn<DeleteEntryFn> = (\n  worskpace: HostFnWorkspace\n): DeleteEntryFn => async (deletes_address: HeaderHashB64): Promise<HeaderHashB64> => {\n  return common_delete(worskpace, deletes_address);\n};\n","import { HeaderHashB64, Element, CreateLink } from '@holochain-open-dev/core-types';\nimport { GetStrategy } from '../../../../types';\nimport {\n  buildDeleteLink,\n  buildShh,\n} from '../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../cell/source-chain/put';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\n\nexport type DeleteLinkFn = (deletes_address: HeaderHashB64) => Promise<HeaderHashB64>;\n\n// Creates a new Create header and its entry in the source chain\nexport const delete_link: HostFn<DeleteLinkFn> = (\n  worskpace: HostFnWorkspace\n): DeleteLinkFn => async (deletes_address): Promise<HeaderHashB64> => {\n  const elementToDelete = await worskpace.cascade.dht_get(deletes_address, {\n    strategy: GetStrategy.Contents,\n  });\n  \n  if (!elementToDelete) throw new Error('Could not find element to be deleted');\n\n  const baseAddress = (elementToDelete.signed_header.header\n    .content as CreateLink).base_address;\n\n  if (!baseAddress)\n    throw new Error('Header for the given hash is not a CreateLink header');\n\n  const deleteHeader = buildDeleteLink(\n    worskpace.state,\n    baseAddress,\n    deletes_address\n  );\n\n  const element: Element = {\n    signed_header: buildShh(deleteHeader),\n    entry: undefined,\n  };\n  putElement(element)(worskpace.state);\n\n  return element.signed_header.header.hash;\n};\n","import {\n  HeaderHashB64,\n  Element,\n  NewEntryHeader,\n  Entry,\n  EntryType,\n} from '@holochain-open-dev/core-types';\nimport { GetStrategy } from '../../../../../types';\nimport {\n  buildDelete,\n  buildShh,\n  buildUpdate,\n} from '../../../../cell/source-chain/builder-headers';\nimport { putElement } from '../../../../cell/source-chain/put';\nimport { HostFnWorkspace } from '../../../host-fn';\n\nexport async function common_update(\n  worskpace: HostFnWorkspace,\n  original_header_hash: HeaderHashB64,\n  entry: Entry,\n  entry_type: EntryType\n): Promise<HeaderHashB64> {\n  const headerToUpdate = await worskpace.cascade.retrieve_header(\n    original_header_hash,\n    {\n      strategy: GetStrategy.Contents,\n    }\n  );\n\n  if (!headerToUpdate) throw new Error('Could not find element to be updated');\n\n  const original_entry_hash = (headerToUpdate.header.content as NewEntryHeader)\n    .entry_hash;\n  if (!original_entry_hash)\n    throw new Error(`Trying to update an element with no entry`);\n\n  const updateHeader = buildUpdate(\n    worskpace.state,\n    entry,\n    entry_type,\n    original_entry_hash,\n    original_header_hash\n  );\n\n  const element: Element = {\n    signed_header: buildShh(updateHeader),\n    entry,\n  };\n  putElement(element)(worskpace.state);\n\n  return element.signed_header.header.hash;\n}\n","import { Entry, HeaderHashB64 } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../../host-fn';\nimport { common_update } from './common/update';\n\nexport type UpdateEntryFn = (\n  original_header_address: HeaderHashB64,\n  newEntry: {\n    content: any;\n    entry_def_id: string;\n  }\n) => Promise<HeaderHashB64>;\n\n// Creates a new Create header and its entry in the source chain\nexport const update_entry: HostFn<UpdateEntryFn> = (\n  workspace: HostFnWorkspace,\n  zome_index: number\n): UpdateEntryFn => async (\n  original_header_address: HeaderHashB64,\n  newEntry: {\n    content: any;\n    entry_def_id: string;\n  }\n): Promise<HeaderHashB64> => {\n  const entry: Entry = { entry_type: 'App', content: newEntry.content };\n\n  const entryDefIndex = workspace.dna.zomes[zome_index].entry_defs.findIndex(\n    entry_def => entry_def.id === newEntry.entry_def_id\n  );\n  if (entryDefIndex < 0) {\n    throw new Error(\n      `Given entry def id ${newEntry.entry_def_id} does not exist in this zome`\n    );\n  }\n\n  const entry_type = {\n    App: {\n      id: entryDefIndex,\n      zome_id: zome_index,\n      visibility:\n        workspace.dna.zomes[zome_index].entry_defs[entryDefIndex].visibility,\n    },\n  };\n\n  return common_update(workspace, original_header_address, entry, entry_type);\n};\n","import { AgentPubKeyB64 } from '@holochain-open-dev/core-types';\nimport { getCellId } from '../../cell/source-chain/utils';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport interface AgentInfo {\n  agent_initial_pubkey: AgentPubKeyB64;\n  agent_latest_pubkey: AgentPubKeyB64;\n}\n\nexport type AgentInfoFn = () => Promise<AgentInfo>;\n\n// Creates a new Create header and its entry in the source chain\nexport const agent_info: HostFn<AgentInfoFn> = (\n  worskpace: HostFnWorkspace\n): AgentInfoFn => async (): Promise<AgentInfo> => {\n  const cellId = getCellId(worskpace.state);\n  const agentPubKey = cellId[1];\n\n  return {\n    agent_initial_pubkey: agentPubKey,\n    agent_latest_pubkey: agentPubKey,\n  };\n};\n","import { AgentPubKeyB64, CapSecret } from '@holochain-open-dev/core-types';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type CallRemoteFn = (args: {\n  agent: AgentPubKeyB64;\n  zome: string;\n  fn_name: string;\n  cap_secret: CapSecret | undefined;\n  payload: any;\n}) => Promise<any>;\n\n// Creates a new Create header and its entry in the source chain\nexport const call_remote: HostFn<CallRemoteFn> = (\n  workspace: HostFnWorkspace\n): CallRemoteFn => async (args): Promise<any> => {\n  return workspace.p2p.call_remote(\n    args.agent,\n    args.zome,\n    args.fn_name,\n    args.cap_secret,\n    args.payload\n  );\n};\n","import { AnyDhtHashB64, Element } from '@holochain-open-dev/core-types';\nimport { GetOptions, GetStrategy } from '../../../types';\nimport { Cell } from '../../cell';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type GetFn = (\n  args: AnyDhtHashB64,\n  options?: GetOptions\n) => Promise<Element | undefined>;\n\n// Creates a new Create header and its entry in the source chain\nexport const get: HostFn<GetFn> = (workspace: HostFnWorkspace): GetFn => async (\n  hash,\n  options\n): Promise<Element | undefined> => {\n  if (!hash) throw new Error(`Cannot get with undefined hash`);\n\n  options = options || { strategy: GetStrategy.Contents };\n\n  return workspace.cascade.dht_get(hash, options);\n};\n","import { Details, AnyDhtHashB64 } from '@holochain-open-dev/core-types';\nimport { GetOptions, GetStrategy } from '../../../types';\nimport { Cell } from '../../cell';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type GetDetailsFn = (\n  args: AnyDhtHashB64,\n  options?: GetOptions\n) => Promise<Details | undefined>;\n\n// Creates a new Create header and its entry in the source chain\nexport const get_details: HostFn<GetDetailsFn> = (\n  workspace: HostFnWorkspace\n): GetDetailsFn => async (hash, options): Promise<Details | undefined> => {\n  if (!hash) throw new Error(`Cannot get with undefined hash`);\n\n  options = options || { strategy: GetStrategy.Contents };\n\n  return workspace.cascade.dht_get_details(hash, options);\n};\n","import { EntryHashB64 } from '@holochain-open-dev/core-types';\nimport { GetLinksOptions, GetOptions, GetStrategy } from '../../../types';\nimport { Link } from '../../cell/cascade/types';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type GetLinksFn = (\n  base_address: EntryHashB64,\n  options?: GetLinksOptions\n) => Promise<Link[] | undefined>;\n\n// Creates a new Create header and its entry in the source chain\nexport const get_links: HostFn<GetLinksFn> = (\n  workspace: HostFnWorkspace\n): GetLinksFn => async (base_address, options): Promise<Link[]> => {\n  if (!base_address) throw new Error(`Cannot get with undefined hash`);\n\n  options = options || { strategy: GetStrategy.Contents };\n\n  return workspace.cascade.dht_get_links(base_address, options);\n};\n","import { Entry, EntryHashB64 } from '@holochain-open-dev/core-types';\nimport { hashEntry } from '../../cell/utils';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type HashEntryFn = (args: { content: any }) => Promise<EntryHashB64>;\n\n// Creates a new Create header and its entry in the source chain\nexport const hash_entry: HostFn<HashEntryFn> = (\n  worskpace: HostFnWorkspace\n): HashEntryFn => async (args): Promise<EntryHashB64> => {\n  const entry: Entry = { entry_type: 'App', content: args.content };\n  return hashEntry(entry);\n};\n","import { Element, NewEntryHeader } from '@holochain-open-dev/core-types';\nimport { QueryFilter } from '../../../types';\nimport { getAllAuthoredHeaders } from '../../cell/source-chain/get';\nimport { HostFn, HostFnWorkspace } from '../host-fn';\n\nexport type QueryFn = (filter: QueryFilter) => Promise<Array<Element>>;\n\n// Creates a new Create header and its entry in the source chain\nexport const query: HostFn<QueryFn> = (\n  workspace: HostFnWorkspace\n): QueryFn => async (filter): Promise<Array<Element>> => {\n  const authoredHeaders = getAllAuthoredHeaders(workspace.state);\n\n  return authoredHeaders.map(header => {\n    let entry = undefined;\n\n    if ((header.header.content as NewEntryHeader).entry_hash) {\n      entry =\n        workspace.state.CAS[\n          (header.header.content as NewEntryHeader).entry_hash\n        ];\n    }\n\n    return {\n      signed_header: header,\n      entry,\n    };\n  });\n};\n","import { Hdk } from './context';\n\nexport const ensure = (hdk: Hdk) => async (path: string): Promise<void> => {\n  const headerHash = await hdk.create_entry({\n    content: path,\n    entry_def_id: 'path',\n  });\n\n  const components = path.split('.');\n\n  if (components.length > 1) {\n    components.splice(components.length - 1, 1);\n    const parent = components.join('.');\n\n    await ensure(hdk)(parent);\n\n    const pathHash = await hdk.hash_entry({ content: path });\n    const parentHash = await hdk.hash_entry({ content: parent });\n\n    await hdk.create_link({ base: parentHash, target: pathHash, tag: path });\n  }\n};\n\nexport interface Path {\n  ensure: (path: string) => Promise<void>;\n}\n","import { HostFnWorkspace } from './host-fn';\nimport {\n  CreateCapGrantFn,\n  create_cap_grant,\n} from './host-fn/actions/create_cap_grant';\nimport { CreateEntryFn, create_entry } from './host-fn/actions/create_entry';\nimport { CreateLinkFn, create_link } from './host-fn/actions/create_link';\nimport {\n  DeleteCapGrantFn,\n  delete_cap_grant,\n} from './host-fn/actions/delete_cap_grant';\nimport { DeleteEntryFn, delete_entry } from './host-fn/actions/delete_entry';\nimport { DeleteLinkFn, delete_link } from './host-fn/actions/delete_link';\nimport { UpdateEntryFn, update_entry } from './host-fn/actions/update_entry';\nimport { AgentInfoFn, agent_info } from './host-fn/agent_info';\nimport { CallRemoteFn, call_remote } from './host-fn/call_remote';\nimport { get, GetFn } from './host-fn/get';\nimport { GetDetailsFn, get_details } from './host-fn/get_detailts';\nimport { GetLinksFn, get_links } from './host-fn/get_links';\nimport { HashEntryFn, hash_entry } from './host-fn/hash_entry';\nimport { query, QueryFn } from './host-fn/query';\nimport { ensure, Path } from './path';\n\nexport interface SimulatedValidateFunctionContext {\n  get: GetFn;\n  get_details: GetDetailsFn;\n  hash_entry: HashEntryFn;\n  get_links: GetLinksFn;\n}\nexport interface Hdk extends SimulatedValidateFunctionContext {\n  create_entry: CreateEntryFn;\n  delete_entry: DeleteEntryFn;\n  update_entry: UpdateEntryFn;\n  create_link: CreateLinkFn;\n  create_cap_grant: CreateCapGrantFn;\n  delete_cap_grant: DeleteCapGrantFn;\n  delete_link: DeleteLinkFn;\n  call_remote: CallRemoteFn;\n  agent_info: AgentInfoFn;\n  query: QueryFn;\n}\n\nexport interface SimulatedZomeFunctionContext extends Hdk {\n  path: Path;\n}\n\nexport function buildValidationFunctionContext(\n  workspace: HostFnWorkspace,\n  zome_index: number\n): SimulatedValidateFunctionContext {\n  return {\n    hash_entry: hash_entry(workspace, zome_index),\n    get: get(workspace, zome_index),\n    get_details: get_details(workspace, zome_index),\n    get_links: get_links(workspace, zome_index),\n  };\n}\n\nexport function buildZomeFunctionContext(\n  workspace: HostFnWorkspace,\n  zome_index: number\n): SimulatedZomeFunctionContext {\n  const hdk: Hdk = {\n    ...buildValidationFunctionContext(workspace, zome_index),\n    create_entry: create_entry(workspace, zome_index),\n    delete_entry: delete_entry(workspace, zome_index),\n    update_entry: update_entry(workspace, zome_index),\n    create_link: create_link(workspace, zome_index),\n    delete_link: delete_link(workspace, zome_index),\n    create_cap_grant: create_cap_grant(workspace, zome_index),\n    delete_cap_grant: delete_cap_grant(workspace, zome_index),\n    call_remote: call_remote(workspace, zome_index),\n    agent_info: agent_info(workspace, zome_index),\n    query: query(workspace, zome_index),\n  };\n\n  return {\n    ...hdk,\n    path: {\n      ensure: ensure(hdk),\n    },\n  };\n}\n","import {\n  ValidationLimboStatus,\n  IntegrationLimboValue,\n  ValidationStatus,\n  CellState,\n  ValidationLimboValue,\n} from '../state';\nimport { getValidationLimboDhtOps } from '../dht/get';\nimport {\n  deleteValidationLimboValue,\n  putIntegrationLimboValue,\n  putValidationLimboValue,\n  putValidationReceipt,\n} from '../dht/put';\nimport { integrate_dht_ops_task } from './integrate_dht_ops';\nimport {\n  Workflow,\n  workflowPriority,\n  WorkflowReturn,\n  WorkflowType,\n  Workspace,\n} from './workflows';\nimport {\n  EntryDef,\n  SimulatedDna,\n  SimulatedZome,\n} from '../../../dnas/simulated-dna';\nimport {\n  AgentPubKeyB64,\n  AgentValidationPkg,\n  AppEntryType,\n  Create,\n  CreateLink,\n  DeleteLink,\n  DHTOp,\n  Element,\n  Entry,\n  getEntry,\n  HeaderType,\n  NewEntryHeader,\n  now,\n} from '@holochain-open-dev/core-types';\nimport { ValidationOutcome } from '../sys_validate/types';\nimport { GetStrategy } from '../../../types';\nimport { DepsMissing } from './sys_validation';\nimport { HostFnWorkspace } from '../../hdk/host-fn';\nimport { buildValidationFunctionContext } from '../../hdk/context';\nimport { ValidationReceipt } from '@holochain-open-dev/core-types/dist/validation';\nimport { BadAgentConfig } from '../../bad-agent';\nimport { Cascade } from '../cascade/cascade';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/app_validation_workflow.rs\nexport const app_validation = async (\n  workspace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  let integrateDhtOps = false;\n\n  const pendingDhtOps = getValidationLimboDhtOps(workspace.state, [\n    ValidationLimboStatus.SysValidated,\n    ValidationLimboStatus.AwaitingAppDeps,\n  ]);\n\n  for (const dhtOpHash of Object.keys(pendingDhtOps)) {\n    deleteValidationLimboValue(dhtOpHash)(workspace.state);\n\n    const validationLimboValue = pendingDhtOps[dhtOpHash];\n\n    // If we are a bad agent, we don't validate our stuff\n    let outcome: ValidationOutcome = { resolved: true, valid: true };\n    if (\n      shouldValidate(\n        workspace.state.agentPubKey,\n        validationLimboValue.op,\n        workspace.badAgentConfig\n      )\n    ) {\n      outcome = await validate_op(\n        validationLimboValue.op,\n        validationLimboValue.from_agent,\n        workspace\n      );\n    }\n    if (!outcome.resolved) {\n      validationLimboValue.status = ValidationLimboStatus.AwaitingAppDeps;\n      putValidationLimboValue(dhtOpHash, validationLimboValue);\n    } else {\n      const value: IntegrationLimboValue = {\n        op: validationLimboValue.op,\n        validation_status: outcome.valid\n          ? ValidationStatus.Valid\n          : ValidationStatus.Rejected,\n        send_receipt: outcome.valid ? validationLimboValue.send_receipt : true, // If value is invalid we always need to make a receipt\n      };\n      putIntegrationLimboValue(dhtOpHash, value)(workspace.state);\n\n      integrateDhtOps = true;\n    }\n  }\n\n  return {\n    result: undefined,\n    triggers: integrateDhtOps ? [integrate_dht_ops_task()] : [],\n  };\n};\n\nexport type AppValidationWorkflow = Workflow<any, any>;\n\nexport function app_validation_task(\n  agent: boolean = false\n): AppValidationWorkflow {\n  return {\n    type: agent ? WorkflowType.AGENT_VALIDATION : WorkflowType.APP_VALIDATION,\n    details: undefined,\n    task: worskpace => app_validation(worskpace),\n  };\n}\n\nfunction shouldValidate(\n  agentPubKey: AgentPubKeyB64,\n  dhtOp: DHTOp,\n  badAgentConfig?: BadAgentConfig\n): boolean {\n  if (!badAgentConfig) return true;\n  return dhtOp.header.header.content.author !== agentPubKey;\n}\n\nexport async function validate_op(\n  op: DHTOp,\n  from_agent: AgentPubKeyB64 | undefined,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const element = dht_ops_to_element(op);\n\n  const entry_type = (element.signed_header.header.content as NewEntryHeader)\n    .entry_type;\n  if (entry_type === 'CapClaim' || entry_type === 'CapGrant')\n    return {\n      valid: true,\n      resolved: true,\n    };\n\n  // TODO: implement validation package\n\n  const maybeEntryDef = await get_associated_entry_def(\n    element,\n    workspace.dna,\n    workspace\n  );\n  if (maybeEntryDef && (maybeEntryDef as DepsMissing).depsHashes)\n    return {\n      resolved: false,\n      depsHashes: (maybeEntryDef as DepsMissing).depsHashes,\n    };\n\n  const zomes_to_invoke = await get_zomes_to_invoke(element, workspace);\n\n  if (zomes_to_invoke && (zomes_to_invoke as DepsMissing).depsHashes)\n    return {\n      resolved: false,\n      depsHashes: (zomes_to_invoke as DepsMissing).depsHashes,\n    };\n\n  const zomes = zomes_to_invoke as Array<SimulatedZome>;\n\n  const header = element.signed_header.header.content;\n  if (header.type === HeaderType.DeleteLink) {\n    return run_delete_link_validation_callback(zomes[0], header, workspace);\n  } else if (header.type === HeaderType.CreateLink) {\n    const cascade = new Cascade(workspace.state, workspace.p2p);\n\n    const maybeBaseEntry = await cascade.retrieve_entry(header.base_address, {\n      strategy: GetStrategy.Contents,\n    });\n    if (!maybeBaseEntry)\n      return {\n        resolved: false,\n        depsHashes: [header.base_address],\n      };\n\n    const maybeTargetEntry = await cascade.retrieve_entry(\n      header.target_address,\n      { strategy: GetStrategy.Contents }\n    );\n    if (!maybeTargetEntry)\n      return {\n        resolved: false,\n        depsHashes: [header.target_address],\n      };\n\n    return run_create_link_validation_callback(\n      zomes[0],\n      header,\n      maybeBaseEntry,\n      maybeTargetEntry,\n      workspace\n    );\n  } else {\n    return run_validation_callback_inner(\n      zomes,\n      element,\n      maybeEntryDef as EntryDef,\n      workspace\n    );\n  }\n}\n\nfunction dht_ops_to_element(op: DHTOp): Element {\n  const header = op.header;\n  let entry = undefined;\n  if ((header.header.content as NewEntryHeader).entry_hash) {\n    entry = getEntry(op);\n  }\n\n  return {\n    entry,\n    signed_header: header,\n  };\n}\n\nexport async function run_validation_callback_direct(\n  zome: SimulatedZome,\n  dna: SimulatedDna,\n  element: Element,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const maybeEntryDef = await get_associated_entry_def(element, dna, workspace);\n\n  if (maybeEntryDef && (maybeEntryDef as DepsMissing).depsHashes)\n    return {\n      resolved: false,\n      depsHashes: (maybeEntryDef as DepsMissing).depsHashes,\n    };\n\n  // TODO: implement validation package\n\n  return run_validation_callback_inner(\n    [zome],\n    element,\n    maybeEntryDef as EntryDef | undefined,\n    workspace\n  );\n}\n\nasync function get_associated_entry_def(\n  element: Element,\n  dna: SimulatedDna,\n  workspace: Workspace\n): Promise<DepsMissing | EntryDef | undefined> {\n  const cascade = new Cascade(workspace.state, workspace.p2p);\n  const maybeAppEntryType = await get_app_entry_type(element, cascade);\n\n  if (!maybeAppEntryType) return undefined;\n  if ((maybeAppEntryType as DepsMissing).depsHashes)\n    return maybeAppEntryType as DepsMissing;\n\n  const appEntryType = maybeAppEntryType as AppEntryType;\n  return dna.zomes[appEntryType.zome_id].entry_defs[appEntryType.id];\n}\n\nasync function get_app_entry_type(\n  element: Element,\n  cascade: Cascade\n): Promise<DepsMissing | AppEntryType | undefined> {\n  if (element.signed_header.header.content.type === HeaderType.Delete)\n    return get_app_entry_type_from_dep(element, cascade);\n\n  const entryType = (element.signed_header.header.content as NewEntryHeader)\n    .entry_type;\n  if (!entryType) return undefined;\n  if (\n    entryType === 'CapGrant' ||\n    entryType === 'CapClaim' ||\n    entryType === 'Agent'\n  )\n    return undefined;\n  return entryType.App;\n}\n\nasync function get_app_entry_type_from_dep(\n  element: Element,\n  cascade: Cascade\n): Promise<DepsMissing | AppEntryType | undefined> {\n  if (element.signed_header.header.content.type !== HeaderType.Delete)\n    return undefined;\n\n  const deletedHeaderHash =\n    element.signed_header.header.content.deletes_address;\n  const header = await cascade.retrieve_header(deletedHeaderHash, {\n    strategy: GetStrategy.Contents,\n  });\n\n  if (!header) return { depsHashes: [deletedHeaderHash] };\n\n  const entryType = (header.header.content as NewEntryHeader).entry_type;\n  if (\n    !entryType ||\n    entryType === 'Agent' ||\n    entryType === 'CapClaim' ||\n    entryType === 'CapGrant'\n  )\n    return undefined;\n  return entryType.App;\n}\n\nasync function get_zomes_to_invoke(\n  element: Element,\n  workspace: Workspace\n): Promise<DepsMissing | Array<SimulatedZome>> {\n  const cascade = new Cascade(workspace.state, workspace.p2p);\n  const maybeAppEntryType = await get_app_entry_type(element, cascade);\n\n  if (maybeAppEntryType && (maybeAppEntryType as DepsMissing).depsHashes)\n    return maybeAppEntryType as DepsMissing;\n\n  if (maybeAppEntryType) {\n    // It's a newEntryHeader\n    return [workspace.dna.zomes[(maybeAppEntryType as AppEntryType).zome_id]];\n  } else {\n    const header = element.signed_header.header.content;\n    if (header.type === HeaderType.CreateLink) {\n      return [workspace.dna.zomes[header.zome_id]];\n    } else if (header.type === HeaderType.DeleteLink) {\n      const maybeHeader = await cascade.retrieve_header(\n        header.link_add_address,\n        { strategy: GetStrategy.Contents }\n      );\n\n      if (!maybeHeader)\n        return {\n          depsHashes: [header.link_add_address],\n        };\n\n      return [\n        workspace.dna.zomes[(maybeHeader.header.content as CreateLink).zome_id],\n      ];\n    }\n\n    return workspace.dna.zomes;\n  }\n}\n\nasync function run_validation_callback_inner(\n  zomes_to_invoke: Array<SimulatedZome>,\n  element: Element,\n  entry_def: EntryDef | undefined,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const fnsToCall = get_element_validate_functions_to_invoke(\n    element,\n    entry_def\n  );\n\n  return invoke_validation_fns(\n    zomes_to_invoke,\n    fnsToCall,\n    { element },\n    workspace\n  );\n}\n\nasync function invoke_validation_fns(\n  zomes_to_invoke: Array<SimulatedZome>,\n  fnsToCall: string[],\n  payload: any,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const cascade = new Cascade(workspace.state, workspace.p2p);\n  const hostFnWorkspace: HostFnWorkspace = {\n    cascade,\n    state: workspace.state,\n    dna: workspace.dna,\n    p2p: workspace.p2p,\n  };\n\n  for (const zome of zomes_to_invoke) {\n    for (const validateFn of fnsToCall) {\n      if (zome.validation_functions[validateFn]) {\n        const context = buildValidationFunctionContext(\n          hostFnWorkspace,\n          workspace.dna.zomes.findIndex(z => z === zome)\n        );\n\n        const outcome: ValidationOutcome = await zome.validation_functions[\n          validateFn\n        ](context)(payload);\n        if (!outcome.resolved) return outcome;\n        else if (!outcome.valid) return outcome;\n      }\n    }\n  }\n\n  return { resolved: true, valid: true };\n}\n\nexport async function run_agent_validation_callback(\n  workspace: Workspace,\n  elements: Element[]\n) {\n  const create_agent_element = elements[2];\n  const fnsToCall = ['validate_create_agent'];\n\n  const zomes_to_invoke = await get_zomes_to_invoke(\n    create_agent_element,\n    workspace\n  );\n\n  const membrane_proof = (elements[1].signed_header.header\n    .content as AgentValidationPkg).membrane_proof;\n\n  return invoke_validation_fns(\n    zomes_to_invoke as SimulatedZome[],\n    fnsToCall,\n    {\n      element: elements[2],\n      membrane_proof,\n      agent_pub_key: create_agent_element.signed_header.header.content.author,\n    },\n    workspace\n  );\n}\n\nexport async function run_create_link_validation_callback(\n  zome: SimulatedZome,\n  link_add: CreateLink,\n  base: Entry,\n  target: Entry,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const validateCreateLink = 'validate_create_link';\n\n  if (zome.validation_functions[validateCreateLink]) {\n    const hostFnWorkspace: HostFnWorkspace = {\n      cascade: new Cascade(workspace.state, workspace.p2p),\n      state: workspace.state,\n      dna: workspace.dna,\n      p2p: workspace.p2p,\n    };\n    const context = buildValidationFunctionContext(\n      hostFnWorkspace,\n      workspace.dna.zomes.findIndex(z => z === zome)\n    );\n\n    const outcome: ValidationOutcome = await zome.validation_functions[\n      validateCreateLink\n    ](context)({ link_add, base, target });\n\n    return outcome;\n  }\n\n  return {\n    resolved: true,\n    valid: true,\n  };\n}\n\nexport async function run_delete_link_validation_callback(\n  zome: SimulatedZome,\n  delete_link: DeleteLink,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const validateCreateLink = 'validate_delete_link';\n\n  if (zome.validation_functions[validateCreateLink]) {\n    const hostFnWorkspace: HostFnWorkspace = {\n      cascade: new Cascade(workspace.state, workspace.p2p),\n      state: workspace.state,\n      dna: workspace.dna,\n      p2p: workspace.p2p,\n    };\n    const context = buildValidationFunctionContext(\n      hostFnWorkspace,\n      workspace.dna.zomes.findIndex(z => z === zome)\n    );\n\n    const outcome: ValidationOutcome = await zome.validation_functions[\n      validateCreateLink\n    ](context)({ delete_link });\n\n    return outcome;\n  }\n\n  return {\n    resolved: true,\n    valid: true,\n  };\n}\n\nfunction get_element_validate_functions_to_invoke(\n  element: Element,\n  maybeEntryDef: EntryDef | undefined\n): Array<string> {\n  const fnsComponents = ['validate'];\n\n  const header = element.signed_header.header.content;\n\n  if (header.type === HeaderType.Create) fnsComponents.push('create');\n  if (header.type === HeaderType.Update) fnsComponents.push('update');\n  if (header.type === HeaderType.Delete) fnsComponents.push('delete');\n\n  const entry_type = (header as NewEntryHeader).entry_type;\n  if (entry_type) {\n    // if (entry_type === 'Agent') fnsComponents.push('agent');\n    if ((entry_type as { App: AppEntryType }).App) {\n      fnsComponents.push('entry');\n      if (maybeEntryDef) fnsComponents.push(maybeEntryDef.id);\n    }\n  }\n\n  return unpackValidateFnsComponents(fnsComponents);\n}\n\nfunction unpackValidateFnsComponents(\n  fnsComponents: Array<string>\n): Array<string> {\n  const validateFunctions = [fnsComponents[0]];\n\n  for (let i = 1; i < fnsComponents.length; i++) {\n    validateFunctions.push(`${validateFunctions[i - 1]}_${fnsComponents[i]}`);\n  }\n  return validateFunctions;\n}\n","import { DHTOp, Dictionary } from '@holochain-open-dev/core-types';\n\nimport { getNonPublishedDhtOps } from '../source-chain/utils';\nimport { getDHTOpBasis } from '../utils';\nimport { Workflow, WorkflowReturn, WorkflowType, Workspace } from './workflows';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/publish_dht_ops_workflow.rs\nexport const publish_dht_ops = async (\n  workspace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const dhtOps = getNonPublishedDhtOps(workspace.state);\n\n  const dhtOpsByBasis: Dictionary<Dictionary<DHTOp>> = {};\n\n  for (const dhtOpHash of Object.keys(dhtOps)) {\n    const dhtOp = dhtOps[dhtOpHash];\n    const basis = getDHTOpBasis(dhtOp);\n\n    if (!dhtOpsByBasis[basis]) dhtOpsByBasis[basis] = {};\n\n    dhtOpsByBasis[basis][dhtOpHash] = dhtOp;\n  }\n\n  const promises = Object.entries(dhtOpsByBasis).map(\n    async ([basis, dhtOps]) => {\n      // Publish the operations\n      await workspace.p2p.publish(basis, dhtOps);\n\n      for (const dhtOpHash of Object.keys(dhtOps)) {\n        workspace.state.authoredDHTOps[\n          dhtOpHash\n        ].last_publish_time = Date.now();\n      }\n    }\n  );\n\n  await Promise.all(promises);\n\n  return {\n    result: undefined,\n    triggers: [],\n  };\n};\n\nexport type PublishDhtOpsWorkflow = Workflow<void, void>;\n\nexport function publish_dht_ops_task(): PublishDhtOpsWorkflow {\n  return {\n    type: WorkflowType.PUBLISH_DHT_OPS,\n    details: undefined,\n    task: worskpace => publish_dht_ops(worskpace),\n  };\n}\n","import { elementToDHTOps } from '@holochain-open-dev/core-types';\n\nimport { hash, HashType } from '../../../processors/hash';\nimport { getNewHeaders } from '../source-chain/get';\nimport { getElement } from '../source-chain/utils';\nimport { publish_dht_ops_task } from './publish_dht_ops';\nimport { Workflow, WorkflowReturn, WorkflowType, Workspace } from './workflows';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/produce_dht_ops_workflow.rs\nexport const produce_dht_ops = async (\n  worskpace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const newHeaderHashes = getNewHeaders(worskpace.state);\n\n  for (const newHeaderHash of newHeaderHashes) {\n    const element = getElement(worskpace.state, newHeaderHash);\n    const dhtOps = elementToDHTOps(element);\n\n    for (const dhtOp of dhtOps) {\n      const dhtOpHash = hash(dhtOp, HashType.DHTOP);\n      const dhtOpValue = {\n        op: dhtOp,\n        last_publish_time: undefined,\n        receipt_count: 0,\n      };\n\n      worskpace.state.authoredDHTOps[dhtOpHash] = dhtOpValue;\n    }\n  }\n\n  return {\n    result: undefined,\n    triggers: [publish_dht_ops_task()],\n  };\n};\n\nexport type ProduceDhtOpsWorkflow = Workflow<void, void>;\n\nexport function produce_dht_ops_task(): ProduceDhtOpsWorkflow {\n  return {\n    type: WorkflowType.PRODUCE_DHT_OPS,\n    details: undefined,\n    task: worskpace => produce_dht_ops(worskpace),\n  };\n}\n","import {\n  AgentPubKeyB64,\n  AppEntryType,\n  Create,\n  Entry,\n  EntryHashB64,\n  EntryType,\n  Header,\n  HeaderType,\n  Metadata,\n  NewEntryHeader,\n  Signature,\n  Timestamp,\n  Update,\n} from '@holochain-open-dev/core-types';\nimport { EntryDef, SimulatedDna } from '../../../dnas/simulated-dna';\nimport { hashEntry } from '../utils';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/sys_validate.rs\n\n/// Verify the signature for this header\nexport async function verify_header_signature(\n  sig: Signature,\n  header: Header\n): Promise<boolean> {\n  return true; // TODO: actually implement signatures\n}\n\n/// Verify the author key was valid at the time\n/// of signing with dpki\n/// TODO: This is just a stub until we have dpki.\nexport async function author_key_is_valid(\n  author: AgentPubKeyB64\n): Promise<boolean> {\n  return true;\n}\n\nexport function check_prev_header(header: Header): void {\n  if (header.type === HeaderType.Dna) return;\n  if (header.header_seq <= 0)\n    throw new Error(`Non-Dna Header contains a 0 or less header_seq`);\n  if (!header.prev_header)\n    throw new Error(\n      `Non-Dna Header doesn't contain a reference to the previous header`\n    );\n}\n\nexport function check_valid_if_dna(header: Header, metadata: Metadata): void {\n  if (metadata.misc_meta[header.author])\n    throw new Error(\n      `Trying to validate a Dna header when the agent already has committed other headers`\n    );\n}\n\nexport function check_chain_rollback() {\n  //TODO\n}\n\nexport function check_spam() {\n  //TODO\n}\n\nexport function check_prev_timestamp(\n  header: Header,\n  prev_header: Header\n): void {\n  const tsToMillis = (t: Timestamp) => t[0] * 1000000 + t[1];\n\n  if (tsToMillis(header.timestamp) <= tsToMillis(prev_header.timestamp)) {\n    // TODO: find out why this isn't working and fix it\n    /* throw new Error(\n      `New header must have a greater timestamp than any previous one`\n    ); */\n  }\n}\n\nexport function check_prev_seq(header: Header, prev_header: Header): void {\n  const prev_seq = (prev_header as Create).header_seq\n    ? (prev_header as Create).header_seq\n    : 0;\n  if (\n    !(\n      (header as Create).header_seq > 0 &&\n      (header as Create).header_seq === prev_seq + 1\n    )\n  )\n    throw new Error(\n      `Immediate following header must have as header_seq the previous one +1`\n    );\n}\n\nexport function check_entry_type(entry_type: EntryType, entry: Entry): void {\n  if (entry_type === 'Agent' && entry.entry_type === 'Agent') return;\n  if (entry_type === 'CapClaim' && entry.entry_type === 'CapClaim') return;\n  if (entry_type === 'CapGrant' && entry.entry_type === 'CapGrant') return;\n  if ((entry_type as { App: AppEntryType }).App && entry.entry_type === 'App')\n    return;\n  throw new Error(`Entry types don't match`);\n}\n\nexport function check_app_entry_type(\n  entry_type: AppEntryType,\n  simulated_dna: SimulatedDna\n): EntryDef {\n  const zome_index = entry_type.zome_id;\n  const entry_index = entry_type.id;\n\n  const zome = simulated_dna.zomes[zome_index];\n  if (!zome)\n    throw new Error(`Trying to validate an entry for a non existent zome`);\n\n  const entry_def = zome.entry_defs[entry_index];\n  if (!entry_def)\n    throw new Error(\n      `Trying to validate an entry which does not have any entry definition`\n    );\n\n  if (entry_def.visibility !== entry_type.visibility)\n    throw new Error(\n      `Trying to validate an entry with visibility not matching its definition`\n    );\n  return entry_def;\n}\n\nexport function check_not_private(entry_def: EntryDef): void {\n  if (entry_def.visibility === 'Private')\n    throw new Error(`Trying to validate as public a private entry type`);\n}\n\nexport function check_entry_hash(hash: EntryHashB64, entry: Entry): void {\n  if (hashEntry(entry) !== hash) throw new Error(`Entry hash is invalid`);\n}\n\nexport function check_new_entry_header(header: Header): void {\n  if (!(header.type === HeaderType.Create || header.type === HeaderType.Update))\n    throw new Error(\n      `A header refering a new entry is not of type Create or Update`\n    );\n}\n\nexport const MAX_ENTRY_SIZE = 16 * 1000 * 1000;\n\nexport function check_entry_size(entry: Entry): void {\n  if (JSON.stringify(entry.content).length > MAX_ENTRY_SIZE)\n    throw new Error(`Entry size exceeds the MAX_ENTRY_SIZE`);\n}\n\nexport const MAX_TAG_SIZE = 400;\n\nexport function check_tag_size(tag: string): void {\n  if (tag.length > MAX_TAG_SIZE)\n    throw new Error(`The given tag size exceeds the MAX_TAG_SIZE`);\n}\n\nexport function check_update_reference(\n  update: Update,\n  original_entry_header: NewEntryHeader\n): void {\n  if (\n    JSON.stringify(update.entry_type) !==\n    JSON.stringify(original_entry_header.entry_type)\n  )\n    throw new Error(`An entry must be updated to the same entry type`);\n}\n","import { ValidationLimboStatus } from '../state';\nimport { getValidationLimboDhtOps } from '../dht/get';\nimport { putValidationLimboValue } from '../dht/put';\nimport { app_validation_task } from './app_validation';\nimport { Workflow, WorkflowReturn, WorkflowType, Workspace } from './workflows';\nimport {\n  AnyDhtHashB64,\n  AppEntryType,\n  Create,\n  Element,\n  Entry,\n  Header,\n  HeaderType,\n  NewEntryHeader,\n  Signature,\n  Update,\n} from '@holochain-open-dev/core-types';\nimport { P2pCell } from '../../network/p2p-cell';\nimport {\n  author_key_is_valid,\n  check_app_entry_type,\n  check_entry_hash,\n  check_entry_size,\n  check_entry_type,\n  check_new_entry_header,\n  check_not_private,\n  check_prev_header,\n  check_prev_seq,\n  check_prev_timestamp,\n  check_update_reference,\n  verify_header_signature,\n} from '../sys_validate';\nimport { GetStrategy } from '../../../types';\nimport { Cascade } from '../cascade/cascade';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/sys_validation_workflow.rs\nexport const sys_validation = async (\n  worskpace: Workspace\n): Promise<WorkflowReturn<void>> => {\n  const pendingDhtOps = getValidationLimboDhtOps(worskpace.state, [\n    ValidationLimboStatus.Pending,\n    ValidationLimboStatus.AwaitingSysDeps,\n  ]);\n\n  // TODO: actually validate\n  for (const dhtOpHash of Object.keys(pendingDhtOps)) {\n    const limboValue = pendingDhtOps[dhtOpHash];\n\n    limboValue.status = ValidationLimboStatus.SysValidated;\n\n    putValidationLimboValue(dhtOpHash, limboValue)(worskpace.state);\n  }\n\n  return {\n    result: undefined,\n    triggers: [app_validation_task()],\n  };\n};\n\nexport type SysValidationWorkflow = Workflow<void, void>;\n\nexport function sys_validation_task(): SysValidationWorkflow {\n  return {\n    type: WorkflowType.SYS_VALIDATION,\n    details: undefined,\n    task: worskpace => sys_validation(worskpace),\n  };\n}\n\nfunction validate_op() {}\n\nexport async function sys_validate_element(\n  element: Element,\n  workspace: Workspace,\n  network: P2pCell\n): Promise<void | DepsMissing> {\n  try {\n    const isNotCounterfeit = await counterfeit_check(\n      element.signed_header.signature,\n      element.signed_header.header.content\n    );\n    if (!isNotCounterfeit)\n      throw new Error(`Trying to validate counterfeited element`);\n  } catch (e) {\n    throw new Error(`Trying to validate counterfeited element`);\n  }\n\n  let maybeDepsMissing = await store_element(\n    element.signed_header.header.content,\n    workspace,\n    network\n  );\n  if (maybeDepsMissing) return maybeDepsMissing;\n\n  const entry_type = (element.signed_header.header.content as NewEntryHeader)\n    .entry_type;\n\n  if (\n    element.entry &&\n    (entry_type as {\n      App: AppEntryType;\n    }).App &&\n    (entry_type as {\n      App: AppEntryType;\n    }).App.visibility === 'Public'\n  ) {\n    maybeDepsMissing = await store_entry(\n      element.signed_header.header.content as NewEntryHeader,\n      element.entry,\n      workspace,\n      network\n    );\n    if (maybeDepsMissing) return maybeDepsMissing;\n  }\n\n  // TODO: implement register_* when cache is in place\n}\n\n/// Check if the op has valid signature and author.\n/// Ops that fail this check should be dropped.\nexport async function counterfeit_check(\n  signature: Signature,\n  header: Header\n): Promise<Boolean> {\n  return (\n    (await verify_header_signature(signature, header)) &&\n    (await author_key_is_valid(header.author))\n  );\n}\n\nexport interface DepsMissing {\n  depsHashes: Array<AnyDhtHashB64>;\n}\n\nexport async function store_element(\n  header: Header,\n  workspace: Workspace,\n  network: P2pCell\n): Promise<void | DepsMissing> {\n  check_prev_header(header);\n\n  const prev_header_hash = (header as Create).prev_header;\n  if (prev_header_hash) {\n    const prev_header = await new Cascade(\n      workspace.state,\n      workspace.p2p\n    ).retrieve_header(prev_header_hash, {\n      strategy: GetStrategy.Contents,\n    });\n\n    if (!prev_header)\n      return {\n        depsHashes: [prev_header_hash],\n      };\n\n    check_prev_timestamp(header, prev_header.header.content);\n    check_prev_seq(header, prev_header.header.content);\n  }\n}\n\nexport async function store_entry(\n  header: NewEntryHeader,\n  entry: Entry,\n  workspace: Workspace,\n  network: P2pCell\n): Promise<void | DepsMissing> {\n  check_entry_type(header.entry_type, entry);\n  const appEntryType = (header.entry_type as { App: AppEntryType }).App;\n  if (appEntryType) {\n    const entry_def = check_app_entry_type(appEntryType, workspace.dna);\n    check_not_private(entry_def);\n  }\n\n  check_entry_hash(header.entry_hash, entry);\n  check_entry_size(entry);\n\n  if (header.type === HeaderType.Update) {\n    const signed_header = await new Cascade(\n      workspace.state,\n      workspace.p2p\n    ).retrieve_header(header.original_header_address, {\n      strategy: GetStrategy.Contents,\n    });\n    if (!signed_header) {\n      return {\n        depsHashes: [header.original_header_address],\n      };\n    }\n\n    update_check(header, signed_header.header.content);\n  }\n}\n\nfunction update_check(entry_update: Update, original_header: Header): void {\n  check_new_entry_header(original_header);\n\n  if (!(original_header as NewEntryHeader).entry_type)\n    throw new Error(`Trying to update a header that didn't create any entry`);\n\n  check_update_reference(entry_update, original_header as NewEntryHeader);\n}\n","import {\n  AgentPubKeyB64,\n  Element,\n  HeaderType,\n  NewEntryHeader,\n  SignedHeaderHashed,\n} from '@holochain-open-dev/core-types';\nimport { cloneDeep } from 'lodash-es';\n\nimport { SimulatedZome } from '../../../dnas/simulated-dna';\nimport { GetStrategy } from '../../../types';\nimport { BadAgentConfig } from '../../bad-agent';\nimport { buildZomeFunctionContext } from '../../hdk/context';\nimport { HostFnWorkspace } from '../../hdk/host-fn';\nimport { Cascade } from '../cascade/cascade';\nimport { getTipOfChain, valid_cap_grant } from '../source-chain/utils';\nimport { CellState } from '../state';\nimport { ValidationOutcome } from '../sys_validate/types';\nimport {\n  run_create_link_validation_callback,\n  run_delete_link_validation_callback,\n  run_validation_callback_direct,\n} from './app_validation';\nimport { produce_dht_ops_task } from './produce_dht_ops';\nimport { sys_validate_element } from './sys_validation';\nimport { Workflow, WorkflowType, Workspace } from './workflows';\n\n/**\n * Calls the zome function of the cell DNA\n * This can only be called in the simulated mode: we can assume that cell.simulatedDna exists\n */\nexport const callZomeFn = (\n  zomeName: string,\n  fnName: string,\n  payload: any,\n  provenance: AgentPubKeyB64,\n  cap: string\n) => async (\n  workspace: Workspace\n): Promise<{ result: any; triggers: Array<Workflow<any, any>> }> => {\n  if (!valid_cap_grant(workspace.state, zomeName, fnName, provenance, cap))\n    throw new Error('Unauthorized Zome Call');\n\n  const currentHeader = getTipOfChain(workspace.state);\n  const chain_head_start_len = workspace.state.sourceChain.length;\n\n  const zomeIndex = workspace.dna.zomes.findIndex(\n    zome => zome.name === zomeName\n  );\n  if (zomeIndex < 0)\n    throw new Error(`There is no zome with the name ${zomeName} in this DNA`);\n\n  const zome = workspace.dna.zomes[zomeIndex];\n  if (!zome.zome_functions[fnName])\n    throw new Error(\n      `There isn't a function with the name ${fnName} in this zome with the name ${zomeName}`\n    );\n\n  const contextState = cloneDeep(workspace.state);\n\n  const hostFnWorkspace: HostFnWorkspace = {\n    cascade: new Cascade(workspace.state, workspace.p2p),\n    state: contextState,\n    dna: workspace.dna,\n    p2p: workspace.p2p,\n  };\n  const zomeFnContext = buildZomeFunctionContext(hostFnWorkspace, zomeIndex);\n\n  const result = await zome.zome_functions[fnName].call(zomeFnContext)(payload);\n\n  let triggers: Array<Workflow<any, any>> = [];\n  if (getTipOfChain(contextState) !== currentHeader) {\n    // Do validation\n    let i = chain_head_start_len;\n\n    const elementsToAppValidate = [];\n\n    while (i < contextState.sourceChain.length) {\n      const headerHash = contextState.sourceChain[i];\n      const signed_header: SignedHeaderHashed = contextState.CAS[headerHash];\n      const entry_hash = (signed_header.header.content as NewEntryHeader)\n        .entry_hash;\n\n      const element: Element = {\n        entry: entry_hash ? contextState.CAS[entry_hash] : undefined,\n        signed_header,\n      };\n\n      const depsMissing = await sys_validate_element(\n        element,\n        { ...workspace, state: contextState },\n        workspace.p2p\n      );\n      if (depsMissing)\n        throw new Error(\n          `Could not validate a new element due to missing dependencies`\n        );\n\n      elementsToAppValidate.push(element);\n      i++;\n    }\n\n    if (shouldValidateBeforePublishing(workspace.badAgentConfig)) {\n      for (const element of elementsToAppValidate) {\n        const outcome = await run_app_validation(\n          zome,\n          element,\n          contextState,\n          workspace\n        );\n        if (!outcome.resolved)\n          throw new Error('Error creating a new element: missing dependencies');\n        if (!outcome.valid)\n          throw new Error('Error creating a new element: invalid');\n      }\n    }\n\n    triggers.push(produce_dht_ops_task());\n  }\n\n  workspace.state.CAS = contextState.CAS;\n  workspace.state.sourceChain = contextState.sourceChain;\n\n  return {\n    result: cloneDeep(result),\n    triggers,\n  };\n};\n\nexport type CallZomeFnWorkflow = Workflow<\n  { zome: string; fnName: string; payload: any },\n  any\n>;\n\nexport function call_zome_fn_workflow(\n  zome: string,\n  fnName: string,\n  payload: any,\n  provenance: AgentPubKeyB64\n): CallZomeFnWorkflow {\n  return {\n    type: WorkflowType.CALL_ZOME,\n    details: {\n      fnName,\n      payload,\n      zome,\n    },\n    task: worskpace =>\n      callZomeFn(zome, fnName, payload, provenance, '')(worskpace),\n  };\n}\n\nfunction shouldValidateBeforePublishing(\n  badAgentConfig?: BadAgentConfig\n): boolean {\n  if (!badAgentConfig) return true;\n  return !badAgentConfig.disable_validation_before_publish;\n}\n\nasync function run_app_validation(\n  zome: SimulatedZome,\n  element: Element,\n  contextState: CellState,\n  workspace: Workspace\n): Promise<ValidationOutcome> {\n  const header = element.signed_header.header.content;\n  if (header.type === HeaderType.CreateLink) {\n    const cascade = new Cascade(contextState, workspace.p2p);\n    const baseEntry = await cascade.retrieve_entry(header.base_address, {\n      strategy: GetStrategy.Contents,\n    });\n    if (!baseEntry) {\n      return {\n        resolved: false,\n        depsHashes: [header.base_address],\n      };\n    }\n    const targetEntry = await cascade.retrieve_entry(header.target_address, {\n      strategy: GetStrategy.Contents,\n    });\n    if (!targetEntry) {\n      return {\n        resolved: false,\n        depsHashes: [header.target_address],\n      };\n    }\n    return run_create_link_validation_callback(\n      zome,\n      header,\n      baseEntry,\n      targetEntry,\n      workspace\n    );\n  } else if (header.type === HeaderType.DeleteLink) {\n    return run_delete_link_validation_callback(zome, header, workspace);\n  } else if (\n    header.type === HeaderType.Create ||\n    header.type === HeaderType.Update ||\n    header.type === HeaderType.Delete\n  ) {\n    return run_validation_callback_direct(\n      zome,\n      workspace.dna,\n      element,\n      workspace\n    );\n  }\n  return {\n    valid: true,\n    resolved: true,\n  };\n}\n","import {\n  AgentPubKeyB64,\n  Entry,\n  CellId,\n  DnaHashB64,\n} from '@holochain-open-dev/core-types';\nimport {\n  buildAgentValidationPkg,\n  buildCreate,\n  buildDna,\n  buildShh,\n} from '../source-chain/builder-headers';\nimport {\n  getSourceChainElement,\n  getSourceChainElements,\n} from '../source-chain/get';\nimport { putElement } from '../source-chain/put';\nimport { CellState } from '../state';\nimport { run_agent_validation_callback } from './app_validation';\nimport { produce_dht_ops_task } from './produce_dht_ops';\nimport { Workflow, WorkflowReturn, WorkflowType, Workspace } from './workflows';\n\nexport const genesis = (\n  agentId: AgentPubKeyB64,\n  dnaHash: DnaHashB64,\n  membrane_proof: any\n) => async (worskpace: Workspace): Promise<WorkflowReturn<void>> => {\n  const dna = buildDna(dnaHash, agentId);\n  putElement({ signed_header: buildShh(dna), entry: undefined })(\n    worskpace.state\n  );\n\n  const pkg = buildAgentValidationPkg(worskpace.state, membrane_proof);\n  putElement({ signed_header: buildShh(pkg), entry: undefined })(\n    worskpace.state\n  );\n\n  const entry: Entry = {\n    content: agentId,\n    entry_type: 'Agent',\n  };\n  const create_agent_pub_key_entry = buildCreate(\n    worskpace.state,\n    entry,\n    'Agent'\n  );\n  putElement({\n    signed_header: buildShh(create_agent_pub_key_entry),\n    entry: entry,\n  })(worskpace.state);\n\n  if (\n    !(\n      worskpace.badAgentConfig &&\n      worskpace.badAgentConfig.disable_validation_before_publish\n    )\n  ) {\n    const firstElements = getSourceChainElements(worskpace.state, 0, 3);\n    const result = await run_agent_validation_callback(\n      worskpace,\n      firstElements\n    );\n    if (!result.resolved) throw new Error('Unresolved in agent validate?');\n    else if (!result.valid) throw new Error('Agent is invalid in this Dna');\n  }\n\n  return {\n    result: undefined,\n    triggers: [produce_dht_ops_task()],\n  };\n};\n\nexport type GenesisWorkflow = Workflow<\n  { cellId: CellId; membrane_proof: any },\n  void\n>;\n\nexport function genesis_task(\n  cellId: CellId,\n  membrane_proof: any\n): GenesisWorkflow {\n  return {\n    type: WorkflowType.GENESIS,\n    details: {\n      cellId,\n      membrane_proof,\n    },\n    task: worskpace => genesis(cellId[1], cellId[0], membrane_proof)(worskpace),\n  };\n}\n","import { Dictionary, DHTOp, AgentPubKeyB64 } from '@holochain-open-dev/core-types';\nimport { ValidationLimboValue, ValidationLimboStatus } from '../state';\nimport { putValidationLimboValue } from '../dht/put';\nimport { sys_validation_task } from './sys_validation';\nimport { Workflow, WorkflowReturn, WorkflowType, Workspace } from './workflows';\nimport { getDHTOpBasis } from '../utils';\nimport { hasDhtOpBeenProcessed } from '../dht/get';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/incoming_dht_ops_workflow.rs\nexport const incoming_dht_ops = (\n  dhtOps: Dictionary<DHTOp>,\n  request_validation_receipt: boolean,\n  from_agent: AgentPubKeyB64 | undefined\n) => async (workspace: Workspace): Promise<WorkflowReturn<void>> => {\n  let sysValidate = false;\n\n  for (const dhtOpHash of Object.keys(dhtOps)) {\n    if (!hasDhtOpBeenProcessed(workspace.state, dhtOpHash)) {\n      const dhtOp = dhtOps[dhtOpHash];\n\n      const basis = getDHTOpBasis(dhtOp);\n\n      const validationLimboValue: ValidationLimboValue = {\n        basis,\n        from_agent,\n        last_try: undefined,\n        num_tries: 0,\n        op: dhtOp,\n        status: ValidationLimboStatus.Pending,\n        time_added: Date.now(),\n        send_receipt: request_validation_receipt,\n      };\n\n      putValidationLimboValue(dhtOpHash, validationLimboValue)(workspace.state);\n\n      sysValidate = true;\n    }\n  }\n\n  return {\n    result: undefined,\n    triggers: sysValidate ? [sys_validation_task()] : [],\n  };\n};\n\nexport type IncomingDhtOpsWorkflow = Workflow<\n  { from_agent: AgentPubKeyB64; ops: Dictionary<DHTOp> },\n  void\n>;\n\nexport function incoming_dht_ops_task(\n  from_agent: AgentPubKeyB64,\n  request_validation_receipt: boolean,\n  ops: Dictionary<DHTOp>\n): IncomingDhtOpsWorkflow {\n  return {\n    type: WorkflowType.INCOMING_DHT_OPS,\n    details: {\n      from_agent,\n      ops,\n    },\n    task: worskpace =>\n      incoming_dht_ops(ops, request_validation_receipt, from_agent)(worskpace),\n  };\n}\n","import { app_validation_task } from './app_validation';\nimport { integrate_dht_ops_task } from './integrate_dht_ops';\nimport { produce_dht_ops_task } from './produce_dht_ops';\nimport { publish_dht_ops_task } from './publish_dht_ops';\nimport { sys_validation_task } from './sys_validation';\nimport { validation_receipt_task } from './validation_receipt';\nimport { Workflow, WorkflowType } from './workflows';\n\nexport function triggeredWorkflowFromType(\n  type: WorkflowType\n): Workflow<any, any> {\n  switch (type) {\n    case WorkflowType.APP_VALIDATION:\n      return app_validation_task();\n    case WorkflowType.INTEGRATE_DHT_OPS:\n      return integrate_dht_ops_task();\n    case WorkflowType.PRODUCE_DHT_OPS:\n      return produce_dht_ops_task();\n    case WorkflowType.PUBLISH_DHT_OPS:\n      return publish_dht_ops_task();\n    case WorkflowType.SYS_VALIDATION:\n      return sys_validation_task();\n    case WorkflowType.VALIDATION_RECEIPT:\n      return validation_receipt_task();\n    default:\n      throw new Error('Trying to trigger a workflow that cannot be triggered');\n  }\n}\n","import { Task } from './task';\n\nexport type Middleware<P> = (payload: P) => Promise<void>;\nexport type SuccessMiddleware<P> = (payload: P, result: any) => Promise<void>;\nexport type ErrorMiddleware<P> = (payload: P, error: any) => Promise<void>;\nexport type MiddlewareSubscription = { unsubscribe: () => void };\n\nexport class MiddlewareExecutor<P> {\n  _beforeMiddlewares: Array<Middleware<P>> = [];\n  _successMiddlewares: Array<SuccessMiddleware<P>> = [];\n  _errorMiddlewares: Array<ErrorMiddleware<P>> = [];\n\n  async execute<T>(task: Task<T>, payload: P): Promise<T> {\n    for (const middleware of this._beforeMiddlewares) {\n      await middleware(payload);\n    }\n\n    try {\n      const result = await task();\n\n      for (const middleware of this._successMiddlewares) {\n        await middleware(payload, result);\n      }\n\n      return result;\n    } catch (e) {\n      for (const middleware of this._errorMiddlewares) {\n        await middleware(payload, e);\n      }\n\n      throw e;\n    }\n  }\n\n  before(callback: Middleware<P>): MiddlewareSubscription {\n    return this._addListener(callback, this._beforeMiddlewares);\n  }\n  success(callback: SuccessMiddleware<P>): MiddlewareSubscription {\n    return this._addListener(callback, this._successMiddlewares);\n  }\n\n  error(callback: ErrorMiddleware<P>): MiddlewareSubscription {\n    return this._addListener(callback, this._errorMiddlewares);\n  }\n\n  private _addListener(callback: Function, middlewareList: Array<Function>) {\n    middlewareList.unshift(callback);\n\n    return {\n      unsubscribe: () => {\n        const index = middlewareList.findIndex(c => c === callback);\n        middlewareList.splice(index, 1);\n      },\n    };\n  }\n}\n","import {\n  CellId,\n  AgentPubKeyB64,\n\n  Dictionary,\n  DHTOp,\n  CapSecret,\n  Timestamp,\n  ValidationReceipt,\n  Element,\n  DnaHashB64,\n  AnyDhtHashB64,\n  EntryHashB64,\n  DhtOpHashB64,\n} from '@holochain-open-dev/core-types';\nimport { Conductor } from '../conductor';\nimport { genesis, genesis_task } from './workflows/genesis';\nimport { call_zome_fn_workflow } from './workflows/call_zome_fn';\nimport { P2pCell } from '../network/p2p-cell';\nimport { incoming_dht_ops_task } from './workflows/incoming_dht_ops';\nimport { CellState, query_dht_ops } from './state';\nimport { Workflow, WorkflowType, Workspace } from './workflows/workflows';\nimport { triggeredWorkflowFromType } from './workflows/trigger';\nimport { MiddlewareExecutor } from '../../executor/middleware-executor';\nimport { GetLinksResponse, GetResult } from './cascade/types';\nimport { Authority } from './cascade/authority';\nimport { getHashType, hash, HashType } from '../../processors/hash';\nimport { GetLinksOptions, GetOptions } from '../../types';\nimport { cloneDeep, uniq } from 'lodash-es';\nimport { DhtArc } from '../network/dht_arc';\nimport { getDHTOpBasis } from './utils';\nimport { GossipData } from '../network/gossip/types';\nimport { hasDhtOpBeenProcessed } from './dht/get';\nimport { putValidationReceipt } from './dht/put';\nimport { BadAction, getBadActions, getBadAgents } from '../network/utils';\nimport {\n  app_validation_task,\n  run_agent_validation_callback,\n} from './workflows/app_validation';\nimport { getSourceChainElements } from './source-chain/get';\n\nexport type CellSignal = 'after-workflow-executed' | 'before-workflow-executed';\nexport type CellSignalListener = (payload: any) => void;\n\nexport class Cell {\n  _triggers: Dictionary<{ running: boolean; triggered: boolean }> = {\n    [WorkflowType.INTEGRATE_DHT_OPS]: { running: false, triggered: true },\n    [WorkflowType.PRODUCE_DHT_OPS]: { running: false, triggered: true },\n    [WorkflowType.PUBLISH_DHT_OPS]: { running: false, triggered: true },\n    [WorkflowType.SYS_VALIDATION]: { running: false, triggered: true },\n    [WorkflowType.APP_VALIDATION]: { running: false, triggered: true },\n    [WorkflowType.VALIDATION_RECEIPT]: { running: false, triggered: true },\n  };\n\n  workflowExecutor = new MiddlewareExecutor<Workflow<any, any>>();\n\n  constructor(public _state: CellState, public conductor: Conductor) {\n    // Let genesis be run before actually joining\n  }\n\n  get cellId(): CellId {\n    return [this._state.dnaHash, this._state.agentPubKey];\n  }\n\n  get agentPubKey(): AgentPubKeyB64 {\n    return this.cellId[1];\n  }\n\n  get dnaHash(): DnaHashB64 {\n    return this.cellId[0];\n  }\n\n  get p2p(): P2pCell {\n    return this.conductor.network.p2pCells[this.cellId[0]][this.cellId[1]];\n  }\n\n  getState(): CellState {\n    return cloneDeep(this._state);\n  }\n\n  getSimulatedDna() {\n    return this.conductor.registeredDnas[this.dnaHash];\n  }\n\n  static async create(\n    conductor: Conductor,\n    cellId: CellId,\n    membrane_proof: any\n  ): Promise<Cell> {\n    const newCellState: CellState = {\n      dnaHash: cellId[0],\n      agentPubKey: cellId[1],\n      CAS: {},\n      integrationLimbo: {},\n      metadata: {\n        link_meta: [],\n        misc_meta: {},\n        system_meta: {},\n      },\n      validationLimbo: {},\n      integratedDHTOps: {},\n      authoredDHTOps: {},\n      validationReceipts: {},\n      sourceChain: [],\n      badAgents: [],\n    };\n\n    const cell = new Cell(newCellState, conductor);\n\n    conductor.network.createP2pCell(cell);\n\n    await cell._runWorkflow(genesis_task(cellId, membrane_proof));\n\n    await cell.p2p.join(cell);\n\n    return cell;\n  }\n\n  /** Workflows */\n\n  callZomeFn(args: {\n    zome: string;\n    fnName: string;\n    payload: any;\n    cap: string;\n    provenance: AgentPubKeyB64;\n  }): Promise<any> {\n    return this._runWorkflow(\n      call_zome_fn_workflow(\n        args.zome,\n        args.fnName,\n        args.payload,\n        args.provenance\n      )\n    );\n  }\n\n  /** Network handlers */\n  // https://github.com/holochain/holochain/blob/develop/crates/holochain/src/conductor/cell.rs#L429\n\n  public handle_publish(\n    from_agent: AgentPubKeyB64,\n    request_validation_receipt: boolean,\n    ops: Dictionary<DHTOp>\n  ): Promise<void> {\n    return this._runWorkflow(\n      incoming_dht_ops_task(from_agent, request_validation_receipt, ops)\n    );\n  }\n\n  public async handle_get(\n    dht_hash: AnyDhtHashB64,\n    options: GetOptions\n  ): Promise<GetResult | undefined> {\n    const authority = new Authority(this._state, this.p2p);\n\n    const hashType = getHashType(dht_hash);\n    if (hashType === HashType.ENTRY || hashType === HashType.AGENT) {\n      return authority.handle_get_entry(dht_hash, options);\n    } else if (hashType === HashType.HEADER) {\n      return authority.handle_get_element(dht_hash, options);\n    }\n    return undefined;\n  }\n\n  public async handle_get_links(\n    base_address: EntryHashB64,\n    options: GetLinksOptions\n  ): Promise<GetLinksResponse> {\n    const authority = new Authority(this._state, this.p2p);\n    return authority.handle_get_links(base_address, options);\n  }\n\n  public async handle_call_remote(\n    from_agent: AgentPubKeyB64,\n    zome_name: string,\n    fn_name: string,\n    cap: CapSecret | undefined,\n    payload: any\n  ): Promise<any> {\n    return this.callZomeFn({\n      zome: zome_name,\n      cap: cap as CapSecret,\n      fnName: fn_name,\n      payload,\n      provenance: from_agent,\n    });\n  }\n\n  /** Gossips */\n\n  public handle_fetch_op_hashes_for_constraints(\n    dht_arc: DhtArc,\n    since: number | undefined,\n    until: number | undefined\n  ): Array<DhtOpHashB64> {\n    return query_dht_ops(this._state.integratedDHTOps, since, until, dht_arc);\n  }\n\n  public handle_fetch_op_hash_data(op_hashes: Array<DhtOpHashB64>): Dictionary<DHTOp> {\n    const result: Dictionary<DHTOp> = {};\n    for (const opHash of op_hashes) {\n      const value = this._state.integratedDHTOps[opHash];\n      if (value) {\n        result[opHash] = value.op;\n      }\n    }\n    return result;\n  }\n\n  public handle_gossip_ops(op_hashes: Array<DhtOpHashB64>): Dictionary<DHTOp> {\n    const result: Dictionary<DHTOp> = {};\n    for (const opHash of op_hashes) {\n      const value = this._state.integratedDHTOps[opHash];\n      if (value) {\n        result[opHash] = value.op;\n      }\n    }\n    return result;\n  }\n\n  async handle_gossip(from_agent: AgentPubKeyB64, gossip: GossipData) {\n    const dhtOpsToProcess: Dictionary<DHTOp> = {};\n\n    for (const badAction of gossip.badActions) {\n      const dhtOpHash = hash(badAction.op, HashType.DHTOP);\n      if (!hasDhtOpBeenProcessed(this._state, dhtOpHash)) {\n        dhtOpsToProcess[dhtOpHash] = badAction.op;\n      }\n\n      for (const receipt of badAction.receipts) {\n        putValidationReceipt(dhtOpHash, receipt)(this._state);\n      }\n    }\n\n    for (const [dhtOpHash, validatedOp] of Object.entries(\n      gossip.validated_dht_ops\n    )) {\n      for (const receipt of validatedOp.validation_receipts) {\n        putValidationReceipt(dhtOpHash, receipt)(this._state);\n      }\n\n      // TODO: fix for when sharding is implemented\n      if (this.p2p.shouldWeHold(getDHTOpBasis(validatedOp.op))) {\n        dhtOpsToProcess[dhtOpHash] = validatedOp.op;\n      }\n    }\n\n    if (Object.keys(dhtOpsToProcess).length > 0) {\n      await this.handle_publish(from_agent, false, dhtOpsToProcess);\n    }\n\n    const previousCount = this._state.badAgents.length;\n\n    const badAgents = getBadAgents(this._state);\n    this._state.badAgents = uniq([...this._state.badAgents, ...badAgents]);\n\n    if (this._state.badAgents.length > previousCount) {\n      // We have added bad agents: resync the neighbors\n      await this.p2p.syncNeighbors();\n    }\n  }\n\n  // Check if the agent we are trying to connect with passes the membrane rules for this Dna\n  async handle_check_agent(firstElements: Element[]): Promise<void> {\n    const result = await this.workflowExecutor.execute(\n      () => run_agent_validation_callback(this.buildWorkspace(), firstElements),\n      app_validation_task(true)\n    );\n\n    if (!result.resolved) throw new Error('Unresolved in agent validate?');\n    else if (!result.valid) throw new Error('Agent is invalid in this Dna');\n  }\n\n  /** Workflow internal execution */\n\n  triggerWorkflow(workflow: Workflow<any, any>) {\n    this._triggers[workflow.type].triggered = true;\n\n    setTimeout(() => this._runPendingWorkflows());\n  }\n\n  async _runPendingWorkflows() {\n    const pendingWorkflows: WorkflowType[] = Object.entries(this._triggers)\n      .filter(([type, t]) => t.triggered && !t.running)\n      .map(([type, t]) => type as WorkflowType);\n\n    const workflowsToRun = pendingWorkflows.map(triggeredWorkflowFromType);\n\n    const promises = Object.values(workflowsToRun).map(async w => {\n      if (!this._triggers[w.type]) console.log(w);\n      this._triggers[w.type].triggered = false;\n      this._triggers[w.type].running = true;\n      await this._runWorkflow(w);\n      this._triggers[w.type].running = false;\n\n      this._runPendingWorkflows();\n    });\n\n    await Promise.all(promises);\n  }\n\n  async _runWorkflow(workflow: Workflow<any, any>): Promise<any> {\n    const result = await this.workflowExecutor.execute(\n      () => workflow.task(this.buildWorkspace()),\n      workflow\n    );\n\n    result.triggers.forEach(triggeredWorkflow =>\n      this.triggerWorkflow(triggeredWorkflow)\n    );\n    return result.result;\n  }\n\n  /** Private helpers */\n\n  private buildWorkspace(): Workspace {\n    let badAgentConfig = undefined;\n    let dna = this.getSimulatedDna();\n    if (this.conductor.badAgent) {\n      badAgentConfig = this.conductor.badAgent.config;\n      if (\n        this.conductor.badAgent.counterfeitDnas[this.cellId[0]] &&\n        this.conductor.badAgent.counterfeitDnas[this.cellId[0]][this.cellId[1]]\n      ) {\n        dna = this.conductor.badAgent.counterfeitDnas[this.cellId[0]][\n          this.cellId[1]\n        ];\n      }\n    }\n\n    return {\n      state: this._state,\n      p2p: this.p2p,\n      dna,\n      badAgentConfig,\n    };\n  }\n}\n","import { AgentPubKeyB64 } from '@holochain-open-dev/core-types';\nimport { Cell } from '../cell';\nimport { NetworkRequest } from './network-request';\n\nexport class Connection {\n  private _closed = false;\n\n  get closed() {\n    return this._closed;\n  }\n\n  close() {\n    this._closed = false;\n  }\n\n  constructor(public opener: Cell, public receiver: Cell) {\n    if (\n      opener.p2p.badAgents.includes(receiver.agentPubKey) ||\n      receiver.p2p.badAgents.includes(opener.agentPubKey)\n    ) {\n      throw new Error('Connection closed!');\n    }\n  }\n\n  sendRequest<T>(\n    fromAgent: AgentPubKeyB64,\n    networkRequest: NetworkRequest<T>\n  ): Promise<T> {\n    if (this.closed) throw new Error('Connection closed!');\n\n    if (this.opener.agentPubKey === fromAgent) {\n      return networkRequest(this.receiver);\n    } else if (this.receiver.agentPubKey === fromAgent) {\n      return networkRequest(this.opener);\n    }\n    throw new Error('Bad request');\n  }\n\n  getPeer(myAgentPubKeyB64: AgentPubKeyB64): Cell {\n    if (this.opener.agentPubKey === myAgentPubKeyB64) return this.receiver;\n    return this.opener;\n  }\n}\n","import { Middleware } from './middleware-executor';\n\nexport const sleep = (ms: number) =>\n  new Promise<void>(resolve => setTimeout(() => resolve(), ms));\n\nexport const DelayMiddleware = (ms: number): Middleware<any> => () => sleep(ms);\n","import { Dictionary } from '@holochain-open-dev/core-types';\nimport { sleep } from '../../../../executor/delay-middleware';\nimport { getValidationReceipts } from '../../../cell';\nimport { P2pCell } from '../../p2p-cell';\nimport { getBadActions } from '../../utils';\nimport { GossipData, GossipDhtOpData } from '../types';\n\nexport const GOSSIP_INTERVAL_MS = 500;\n\nexport class SimpleBloomMod {\n  gossip_on: boolean = true;\n\n  lastBadActions = 0;\n\n  constructor(protected p2pCell: P2pCell) {\n    this.loop();\n  }\n  async loop() {\n    while (true) {\n      if (this.gossip_on) {\n        try {\n          await this.run_one_iteration();\n        } catch (e) {\n          console.warn('Connection closed');\n        }\n      }\n      await sleep(GOSSIP_INTERVAL_MS);\n    }\n  }\n\n  async run_one_iteration(): Promise<void> {\n    const localDhtOpsHashes = Object.keys(\n      this.p2pCell.cell._state.integratedDHTOps\n    );\n    const localDhtOps = this.p2pCell.cell.handle_fetch_op_hash_data(\n      localDhtOpsHashes\n    );\n\n    const state = this.p2pCell.cell._state;\n\n    const dhtOpData: Dictionary<GossipDhtOpData> = {};\n\n    for (const dhtOpHash of Object.keys(localDhtOps)) {\n      const receipts = getValidationReceipts(dhtOpHash)(state);\n      dhtOpData[dhtOpHash] = {\n        op: localDhtOps[dhtOpHash],\n        validation_receipts: receipts,\n      };\n    }\n\n    const pretendValid =\n      this.p2pCell.cell.conductor.badAgent &&\n      this.p2pCell.cell.conductor.badAgent.config\n        .pretend_invalid_elements_are_valid;\n\n    const badActions = pretendValid ? [] : getBadActions(state);\n\n    const gossips: GossipData = {\n      badActions,\n      neighbors: [],\n      validated_dht_ops: dhtOpData,\n    };\n\n    let warrant =\n      badActions.length > 0 && badActions.length !== this.lastBadActions;\n    this.lastBadActions = badActions.length;\n\n    if (warrant) {\n      const promises = [\n        ...this.p2pCell.neighbors,\n        ...this.p2pCell.farKnownPeers,\n      ].map(peer => this.p2pCell.outgoing_gossip(peer, gossips, warrant));\n\n      await Promise.all(promises);\n    } else {\n      for (const neighbor of this.p2pCell.neighbors) {\n        await this.p2pCell.outgoing_gossip(neighbor, gossips, warrant);\n      }\n    }\n  }\n}\n","import {\n  AgentPubKeyB64,\n  AnyDhtHashB64,\n  DHTOp,\n  Dictionary,\n  DnaHashB64,\n} from '@holochain-open-dev/core-types';\nimport { GetOptions } from '../../types';\nimport { Cell } from '../cell/cell';\n\nexport enum NetworkRequestType {\n  CALL_REMOTE = 'Call Remote',\n  PUBLISH_REQUEST = 'Publish Request',\n  GET_REQUEST = 'Get Request',\n  WARRANT = 'Warrant',\n  GOSSIP = 'Gossip',\n  CONNECT = 'Connect',\n}\n\nexport type NetworkRequest<T> = (cell: Cell) => Promise<T>;\n\nexport interface NetworkRequestInfo<T extends NetworkRequestType, D> {\n  dnaHash: DnaHashB64;\n  fromAgent: AgentPubKeyB64;\n  toAgent: AgentPubKeyB64;\n  type: T;\n  details: D;\n}\n\nexport type PublishRequestInfo = NetworkRequestInfo<\n  NetworkRequestType.PUBLISH_REQUEST,\n  {\n    dhtOps: Dictionary<DHTOp>;\n  }\n>;\n\nexport type GetRequestInfo = NetworkRequestInfo<\n  NetworkRequestType.GET_REQUEST,\n  {\n    hash: AnyDhtHashB64;\n    options: GetOptions;\n  }\n>;\n\nexport type CallRemoteRequestInfo = NetworkRequestInfo<\n  NetworkRequestType.CALL_REMOTE,\n  {}\n>;\n","import {\n  AgentPubKeyB64,\n  AnyDhtHashB64,\n  CapSecret,\n  CellId,\n  DHTOp,\n  Dictionary,\n  Element,\n  EntryHashB64,\n  ValidationReceipt,\n  ValidationStatus,\n} from '@holochain-open-dev/core-types';\nimport { MiddlewareExecutor } from '../../executor/middleware-executor';\nimport { hash, HashType, location } from '../../processors/hash';\nimport { GetLinksOptions, GetOptions } from '../../types';\nimport { Cell, getSourceChainElements, isHoldingDhtOp } from '../cell';\nimport {\n  GetElementResponse,\n  GetEntryResponse,\n  GetLinksResponse,\n} from '../cell/cascade/types';\nimport { Connection } from './connection';\nimport { DhtArc } from './dht_arc';\nimport { SimpleBloomMod } from './gossip/bloom';\nimport { GossipData } from './gossip/types';\nimport { Network } from './network';\nimport {\n  NetworkRequestInfo,\n  NetworkRequest,\n  NetworkRequestType,\n} from './network-request';\nimport { getBadAgents } from './utils';\n\nexport type P2pCellState = {\n  neighbors: AgentPubKeyB64[];\n  farKnownPeers: AgentPubKeyB64[];\n  badAgents: AgentPubKeyB64[];\n  redundancyFactor: number;\n  neighborNumber: number;\n};\n\n// From: https://github.com/holochain/holochain/blob/develop/crates/holochain_p2p/src/lib.rs\nexport class P2pCell {\n  farKnownPeers: AgentPubKeyB64[];\n\n  storageArc: DhtArc;\n  neighborNumber: number;\n  redundancyFactor = 3;\n\n  _gossipLoop!: SimpleBloomMod;\n\n  networkRequestsExecutor = new MiddlewareExecutor<\n    NetworkRequestInfo<any, any>\n  >();\n\n  neighborConnections: Dictionary<Connection | undefined> = {};\n\n  constructor(\n    state: P2pCellState,\n    public cell: Cell,\n    protected network: Network\n  ) {\n    this.farKnownPeers = state.farKnownPeers;\n    this.redundancyFactor = state.redundancyFactor;\n    this.neighborNumber = state.neighborNumber;\n\n    // TODO: try to connect with already known neighbors\n\n    this.storageArc = {\n      center_loc: location(this.cellId[1]),\n      half_length: Math.pow(2, 33),\n    };\n  }\n\n  getState(): P2pCellState {\n    return {\n      badAgents: this.badAgents,\n      neighbors: this.neighbors,\n      farKnownPeers: this.farKnownPeers,\n      redundancyFactor: this.redundancyFactor,\n      neighborNumber: this.neighborNumber,\n    };\n  }\n\n  get cellId(): CellId {\n    return this.cell.cellId;\n  }\n\n  get badAgents() {\n    if (\n      this.cell.conductor.badAgent &&\n      this.cell.conductor.badAgent.config.pretend_invalid_elements_are_valid\n    )\n      return [];\n\n    return this.cell._state.badAgents;\n  }\n\n  /** P2p actions */\n\n  async join(containerCell: Cell): Promise<void> {\n    this.network.bootstrapService.announceCell(this.cellId, containerCell);\n    this._gossipLoop = new SimpleBloomMod(this);\n\n    await this.syncNeighbors();\n  }\n\n  async leave(): Promise<void> {}\n\n  async publish(dht_hash: AnyDhtHashB64, ops: Dictionary<DHTOp>): Promise<void> {\n    await this.network.kitsune.rpc_multi(\n      this.cellId[0],\n      this.cellId[1],\n      dht_hash,\n      this.redundancyFactor,\n      this.badAgents,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          NetworkRequestType.PUBLISH_REQUEST,\n          { dhtOps: ops },\n          (cell: Cell) => cell.handle_publish(this.cellId[1], true, ops)\n        )\n    );\n  }\n\n  async get(\n    dht_hash: AnyDhtHashB64,\n    options: GetOptions\n  ): Promise<GetElementResponse | GetEntryResponse | undefined> {\n    const gets = await this.network.kitsune.rpc_multi(\n      this.cellId[0],\n      this.cellId[1],\n      dht_hash,\n      1, // TODO: what about this?\n      this.badAgents,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          NetworkRequestType.GET_REQUEST,\n          { hash: dht_hash, options },\n          (cell: Cell) => cell.handle_get(dht_hash, options)\n        )\n    );\n\n    return gets.find(get => !!get);\n  }\n\n  async get_links(\n    base_address: EntryHashB64,\n    options: GetLinksOptions\n  ): Promise<GetLinksResponse[]> {\n    return this.network.kitsune.rpc_multi(\n      this.cellId[0],\n      this.cellId[1],\n      base_address,\n      1, // TODO: what about this?\n      this.badAgents,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          NetworkRequestType.GET_REQUEST,\n          { hash: base_address, options },\n          (cell: Cell) => cell.handle_get_links(base_address, options)\n        )\n    );\n  }\n\n  async call_remote(\n    agent: AgentPubKeyB64,\n    zome: string,\n    fnName: string,\n    cap: CapSecret | undefined,\n    payload: any\n  ): Promise<any> {\n    return this.network.kitsune.rpc_single(\n      this.cellId[0],\n      this.cellId[1],\n      agent,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          NetworkRequestType.CALL_REMOTE,\n          {},\n          (cell: Cell) =>\n            cell.handle_call_remote(this.cellId[1], zome, fnName, cap, payload)\n        )\n    );\n  }\n\n  /** Neighbor handling */\n\n  public get neighbors(): Array<AgentPubKeyB64> {\n    return Object.keys(this.neighborConnections);\n  }\n\n  async connectWith(peer: Cell): Promise<Connection> {\n    if (this.neighborConnections[peer.agentPubKey])\n      return this.neighborConnections[peer.agentPubKey] as Connection;\n\n    return new Connection(this.cell, peer);\n  }\n\n  async check_agent_valid(peer: Cell): Promise<void> {\n    const peerFirst3Elements = getSourceChainElements(peer._state, 0, 3);\n\n    try {\n      await this.cell.handle_check_agent(peerFirst3Elements);\n    } catch (e) {\n      if (!this.cell._state.badAgents.includes(peer.agentPubKey))\n        this.cell._state.badAgents.push(peer.agentPubKey);\n\n      throw new Error('Invalid agent');\n    }\n  }\n\n  handleOpenNeighborConnection(from: Cell, connection: Connection) {\n    this.neighborConnections[from.agentPubKey] = connection;\n  }\n\n  handleCloseNeighborConnection(from: Cell) {\n    this.neighborConnections[from.agentPubKey] = undefined;\n    delete this.neighborConnections[from.agentPubKey];\n    this.syncNeighbors();\n  }\n\n  async openNeighborConnection(withPeer: Cell): Promise<Connection> {\n    if (!this.neighborConnections[withPeer.agentPubKey]) {\n      // Try to connect: can fail due to validation\n      // TODO: uncomment\n      /*       await this._executeNetworkRequest(\n        withPeer,\n        NetworkRequestType.CONNECT,\n        {},\n        peer =>\n          Promise.all([\n            this.check_agent_valid(withPeer),\n            withPeer.p2p.check_agent_valid(this.cell),\n          ])\n      );\n */\n      const connection = await this.connectWith(withPeer);\n      this.neighborConnections[withPeer.agentPubKey] = connection;\n\n      withPeer.p2p.handleOpenNeighborConnection(this.cell, connection);\n    }\n    return this.neighborConnections[withPeer.agentPubKey] as Connection;\n  }\n\n  closeNeighborConnection(withPeer: AgentPubKeyB64) {\n    if (this.neighborConnections[withPeer]) {\n      const connection = this.neighborConnections[withPeer] as Connection;\n      connection.close();\n      this.neighborConnections[withPeer] = undefined;\n      delete this.neighborConnections[withPeer];\n\n      connection\n        .getPeer(this.cellId[1])\n        .p2p.handleCloseNeighborConnection(this.cell);\n    }\n  }\n\n  async syncNeighbors() {\n    const dnaHash = this.cellId[0];\n    const agentPubKey = this.cellId[1];\n\n    const badAgents = this.badAgents;\n\n    for (const badAgent of badAgents) {\n      if (this.neighborConnections[badAgent]) {\n        this.closeNeighborConnection(badAgent);\n      }\n    }\n\n    this.farKnownPeers = this.network.bootstrapService\n      .getFarKnownPeers(dnaHash, agentPubKey, badAgents)\n      .map(p => p.agentPubKey);\n\n    const neighbors = this.network.bootstrapService\n      .getNeighborhood(dnaHash, agentPubKey, this.neighborNumber, badAgents)\n      .filter(cell => cell.agentPubKey != agentPubKey);\n\n    const newNeighbors = neighbors.filter(\n      cell => !this.neighbors.includes(cell.agentPubKey)\n    );\n\n    const neighborsToForget = this.neighbors.filter(\n      n => !neighbors.find(c => c.agentPubKey === n)\n    );\n\n    neighborsToForget.forEach(n => this.closeNeighborConnection(n));\n\n    const promises = newNeighbors.map(async neighbor => {\n      try {\n        await this.openNeighborConnection(neighbor);\n      } catch (e) {\n        // Couldn't open connection\n      }\n    });\n\n    await Promise.all(promises);\n\n    if (Object.keys(this.neighborConnections).length < this.neighborNumber) {\n      setTimeout(() => this.syncNeighbors(), 400);\n    }\n  }\n\n  // TODO: fix when sharding is implemented\n  shouldWeHold(dhtOpBasis: AnyDhtHashB64): boolean {\n    const neighbors = this.network.bootstrapService.getNeighborhood(\n      this.cellId[0],\n      dhtOpBasis,\n      this.redundancyFactor + 1,\n      this.badAgents\n    );\n\n    const index = neighbors.findIndex(\n      cell => cell.agentPubKey === this.cellId[1]\n    );\n    return index >= 0 && index < this.redundancyFactor;\n  }\n\n  /** Gossip */\n\n  public async outgoing_gossip(\n    to_agent: AgentPubKeyB64,\n    gossips: GossipData,\n    warrant: boolean = false\n  ): Promise<void> {\n    // TODO: remove peer discovery?\n    await this.network.kitsune.rpc_single(\n      this.cellId[0],\n      this.cellId[1],\n      to_agent,\n      (cell: Cell) =>\n        this._executeNetworkRequest(\n          cell,\n          warrant ? NetworkRequestType.WARRANT : NetworkRequestType.GOSSIP,\n          {},\n          (cell: Cell) => cell.handle_gossip(this.cellId[1], gossips)\n        )\n    );\n  }\n\n  /** Executors */\n\n  private async _executeNetworkRequest<R, T extends NetworkRequestType, D>(\n    toCell: Cell,\n    type: T,\n    details: D,\n    request: NetworkRequest<R>\n  ): Promise<R> {\n    const networkRequest: NetworkRequestInfo<T, D> = {\n      fromAgent: this.cellId[1],\n      toAgent: toCell.agentPubKey,\n      dnaHash: this.cellId[0],\n      type,\n      details,\n    };\n\n    const connection = await this.connectWith(toCell);\n\n    const result = await this.networkRequestsExecutor.execute(\n      () => connection.sendRequest(this.cellId[1], request),\n      networkRequest\n    );\n\n    return result;\n  }\n}\n","import { AgentPubKeyB64, AnyDhtHashB64, DnaHashB64 } from '@holochain-open-dev/core-types';\nimport { Cell } from '../cell/cell';\nimport { Network } from './network';\nimport { NetworkRequest } from './network-request';\n\nexport class KitsuneP2p {\n  discover: Discover;\n  constructor(protected network: Network) {\n    this.discover = new Discover(network);\n  }\n\n  async rpc_single<T>(\n    dna_hash: DnaHashB64,\n    from_agent: AgentPubKeyB64,\n    to_agent: AgentPubKeyB64,\n    networkRequest: NetworkRequest<T>\n  ): Promise<T> {\n    const peer = await this.discover.peer_discover(\n      dna_hash,\n      from_agent,\n      to_agent\n    );\n    return networkRequest(peer);\n  }\n\n  async rpc_multi<T>(\n    dna_hash: DnaHashB64,\n    from_agent: AgentPubKeyB64,\n    basis: AnyDhtHashB64,\n    remote_agent_count: number,\n    filtered_agents: AgentPubKeyB64[],\n    networkRequest: NetworkRequest<T>\n  ): Promise<Array<T>> {\n    // Discover neighbors\n    return this.discover.message_neighborhood(\n      dna_hash,\n      from_agent,\n      basis,\n      remote_agent_count,\n      filtered_agents,\n      networkRequest\n    );\n  }\n\n}\n\n// From https://github.com/holochain/holochain/blob/develop/crates/kitsune_p2p/kitsune_p2p/src/spawn/actor/discover.rs\nexport class Discover {\n  constructor(protected network: Network) {}\n\n  // TODO fix this\n  async peer_discover(\n    dna_hash: DnaHashB64,\n    from_agent: AgentPubKeyB64,\n    to_agent: AgentPubKeyB64\n  ): Promise<Cell> {\n    return this.network.bootstrapService.cells[dna_hash][to_agent];\n  }\n\n  async message_neighborhood<T>(\n    dna_hash: DnaHashB64,\n    from_agent: AgentPubKeyB64,\n    basis: AnyDhtHashB64,\n    remote_agent_count: number,\n    filtered_agents: AgentPubKeyB64[],\n    networkRequest: NetworkRequest<T>\n  ): Promise<Array<T>> {\n    const agents = await this.search_for_agents(\n      dna_hash,\n      basis,\n      remote_agent_count,\n      filtered_agents\n    );\n\n    const promises = agents.map(cell => networkRequest(cell));\n    return Promise.all(promises);\n  }\n\n  private async search_for_agents(\n    dna_hash: DnaHashB64,\n    basis: AnyDhtHashB64,\n    remote_agent_count: number,\n    filtered_agents: AgentPubKeyB64[]\n  ): Promise<Cell[]> {\n    return this.network.bootstrapService.getNeighborhood(\n      dna_hash,\n      basis,\n      remote_agent_count,\n      filtered_agents\n    );\n  }\n}\n","import {\n  AgentPubKeyB64,\n  Dictionary,\n  DnaHashB64,\n} from '@holochain-open-dev/core-types';\nimport { BootstrapService } from '../../bootstrap/bootstrap-service';\nimport { Cell } from '../cell/cell';\nimport { Conductor } from '../conductor';\nimport { P2pCell, P2pCellState } from '../network/p2p-cell';\nimport { KitsuneP2p } from './kitsune_p2p';\nimport { NetworkRequest } from './network-request';\n\nexport interface NetworkState {\n  // P2pCellState by dna hash / agentPubKey\n  p2pCellsState: Dictionary<Dictionary<P2pCellState>>;\n}\n\nexport class Network {\n  // P2pCells contained in this conductor\n  p2pCells: Dictionary<Dictionary<P2pCell>>;\n  kitsune: KitsuneP2p;\n\n  constructor(\n    state: NetworkState,\n    public conductor: Conductor,\n    public bootstrapService: BootstrapService\n  ) {\n    this.p2pCells = {};\n    for (const [dnaHash, p2pState] of Object.entries(state.p2pCellsState)) {\n      if (!this.p2pCells[dnaHash]) this.p2pCells[dnaHash];\n      for (const [agentPubKey, p2pCellState] of Object.entries(p2pState)) {\n        this.p2pCells[dnaHash][agentPubKey] = new P2pCell(\n          p2pCellState,\n          conductor.getCell(dnaHash, agentPubKey) as Cell,\n          this\n        );\n      }\n    }\n\n    this.kitsune = new KitsuneP2p(this);\n  }\n\n  getState(): NetworkState {\n    const p2pCellsState: Dictionary<Dictionary<P2pCellState>> = {};\n\n    for (const [dnaHash, dnaP2pCells] of Object.entries(this.p2pCells)) {\n      if (!p2pCellsState[dnaHash]) p2pCellsState[dnaHash] = {};\n\n      for (const [agentPubKey, p2pCell] of Object.entries(dnaP2pCells)) {\n        p2pCellsState[dnaHash][agentPubKey] = p2pCell.getState();\n      }\n    }\n\n    return {\n      p2pCellsState,\n    };\n  }\n\n  getAllP2pCells(): P2pCell[] {\n    const nestedCells = Object.values(this.p2pCells).map(dnaCells =>\n      Object.values(dnaCells)\n    );\n    return ([] as P2pCell[]).concat(...nestedCells);\n  }\n\n  createP2pCell(cell: Cell): P2pCell {\n    const cellId = cell.cellId;\n    const dnaHash = cellId[0];\n\n    const state: P2pCellState = {\n      neighbors: [],\n      farKnownPeers: [],\n      redundancyFactor: 3,\n      neighborNumber: 5,\n      badAgents: [],\n    };\n\n    const p2pCell = new P2pCell(state, cell, this);\n\n    if (!this.p2pCells[dnaHash]) this.p2pCells[dnaHash] = {};\n    this.p2pCells[dnaHash][cellId[1]] = p2pCell;\n\n    return p2pCell;\n  }\n\n  public sendRequest<T>(\n    dna: DnaHashB64,\n    fromAgent: AgentPubKeyB64,\n    toAgent: AgentPubKeyB64,\n    request: NetworkRequest<T>\n  ): Promise<T> {\n    const localCell =\n      this.conductor.cells[dna] && this.conductor.cells[dna][toAgent];\n\n    if (localCell) return request(localCell);\n\n    return request(this.bootstrapService.cells[dna][toAgent]);\n  }\n}\n","import {\n  AgentPubKeyB64,\n  CellId,\n  Dictionary,\n  DnaHashB64,\n} from '@holochain-open-dev/core-types';\nimport { Cell, getCellId } from '../core/cell';\nimport { hash, HashType } from '../processors/hash';\nimport { Network, NetworkState } from './network/network';\n\nimport {\n  InstalledHapps,\n  SimulatedDna,\n  SimulatedHappBundle,\n} from '../dnas/simulated-dna';\nimport { CellState } from './cell/state';\nimport { BootstrapService } from '../bootstrap/bootstrap-service';\nimport { BadAgent, BadAgentConfig } from './bad-agent';\n\nexport interface ConductorState {\n  // DnaHash / AgentPubKeyB64\n  cellsState: Dictionary<Dictionary<CellState>>;\n  networkState: NetworkState;\n  registeredDnas: Dictionary<SimulatedDna>;\n  installedHapps: Dictionary<InstalledHapps>;\n  name: string;\n  badAgent: BadAgent | undefined;\n}\n\nexport class Conductor {\n  readonly cells: Dictionary<Dictionary<Cell>>;\n  registeredDnas!: Dictionary<SimulatedDna>;\n  installedHapps!: Dictionary<InstalledHapps>;\n\n  network: Network;\n  name: string;\n\n  badAgent: BadAgent | undefined; // If undefined, this is an honest agent\n\n  constructor(state: ConductorState, bootstrapService: BootstrapService) {\n    this.network = new Network(state.networkState, this, bootstrapService);\n    this.registeredDnas = state.registeredDnas;\n    this.installedHapps = state.installedHapps;\n    this.name = state.name;\n\n    this.cells = {};\n    for (const [dnaHash, dnaCellsStates] of Object.entries(state.cellsState)) {\n      if (!this.cells[dnaHash]) this.cells[dnaHash] = {};\n\n      for (const [agentPubKey, cellState] of Object.entries(dnaCellsStates)) {\n        this.cells[dnaHash][agentPubKey] = new Cell(cellState, this);\n      }\n    }\n  }\n\n  static async create(\n    bootstrapService: BootstrapService,\n    name: string\n  ): Promise<Conductor> {\n    const state: ConductorState = {\n      cellsState: {},\n      networkState: {\n        p2pCellsState: {},\n      },\n      registeredDnas: {},\n      installedHapps: {},\n      name,\n      badAgent: undefined,\n    };\n\n    return new Conductor(state, bootstrapService);\n  }\n\n  getState(): ConductorState {\n    const cellsState: Dictionary<Dictionary<CellState>> = {};\n\n    for (const [dnaHash, dnaCells] of Object.entries(this.cells)) {\n      if (!cellsState[dnaHash]) cellsState[dnaHash];\n\n      for (const [agentPubKey, cell] of Object.entries(dnaCells)) {\n        cellsState[dnaHash][agentPubKey] = cell.getState();\n      }\n    }\n\n    return {\n      name: this.name,\n      networkState: this.network.getState(),\n      cellsState,\n      registeredDnas: this.registeredDnas,\n      installedHapps: this.installedHapps,\n      badAgent: this.badAgent,\n    };\n  }\n\n  getAllCells(): Cell[] {\n    const nestedCells = Object.values(this.cells).map(dnaCells =>\n      Object.values(dnaCells)\n    );\n\n    return ([] as Cell[]).concat(...nestedCells);\n  }\n\n  getCells(dnaHash: DnaHashB64): Cell[] {\n    const dnaCells = this.cells[dnaHash];\n    return dnaCells ? Object.values(dnaCells) : [];\n  }\n\n  getCell(dnaHash: DnaHashB64, agentPubKey: AgentPubKeyB64): Cell | undefined {\n    return this.cells[dnaHash] ? this.cells[dnaHash][agentPubKey] : undefined;\n  }\n\n  /** Bad agents */\n\n  setBadAgent(badAgentConfig: BadAgentConfig) {\n    if (!this.badAgent)\n      this.badAgent = { config: badAgentConfig, counterfeitDnas: {} };\n    this.badAgent.config = badAgentConfig;\n  }\n\n  setCounterfeitDna(cellId: CellId, dna: SimulatedDna) {\n    if (!this.badAgent) throw new Error('This is not a bad agent');\n\n    if (!this.badAgent.counterfeitDnas[cellId[0]])\n      this.badAgent.counterfeitDnas[cellId[0]] = {};\n    this.badAgent.counterfeitDnas[cellId[0]][cellId[1]] = dna;\n  }\n\n  /** Admin API */\n  /* \n  async registerDna(dna_template: SimulatedDna): Promise<Hash> {\n    const templateHash = hash(dna_template, HashType.DNA);\n\n    this.registeredDnas[templateHash] = dna_template;\n    return templateHash;\n  } */\n\n  async cloneCell(\n    installedAppId: string,\n    slotNick: string,\n    uid?: string,\n    properties?: Dictionary<any>,\n    membraneProof?: any\n  ): Promise<Cell> {\n    if (!this.installedHapps[installedAppId])\n      throw new Error(`Given app id doesn't exist`);\n\n    const installedApp = this.installedHapps[installedAppId];\n    if (!installedApp.slots[slotNick])\n      throw new Error(`The slot nick doesn't exist for the given app id`);\n\n    const slotToClone = installedApp.slots[slotNick];\n\n    const hashOfDnaToClone = slotToClone.base_cell_id[0];\n    const dnaToClone = this.registeredDnas[hashOfDnaToClone];\n\n    if (!dnaToClone) {\n      throw new Error(\n        `The dna to be cloned is not registered on this conductor`\n      );\n    }\n\n    const dna: SimulatedDna = { ...dnaToClone };\n\n    if (uid) dna.uid = uid;\n    if (properties) dna.properties = properties;\n\n    const newDnaHash = hash(dna, HashType.DNA);\n\n    if (newDnaHash === hashOfDnaToClone)\n      throw new Error(\n        `Trying to clone a dna would create exactly the same DNA`\n      );\n    this.registeredDnas[newDnaHash] = dna;\n\n    const cell = await this.createCell(\n      dna,\n      installedApp.agent_pub_key,\n      membraneProof\n    );\n    this.installedHapps[installedAppId].slots[slotNick].clones.push(\n      cell.cellId\n    );\n\n    return cell;\n  }\n\n  async installHapp(\n    happ: SimulatedHappBundle,\n    membrane_proofs: Dictionary<any> // segmented by CellNick\n  ): Promise<void> {\n    const rand = `${Math.random().toString()}/${Date.now()}`;\n    const agentId = hash(rand, HashType.AGENT);\n\n    this.installedHapps[happ.name] = {\n      agent_pub_key: agentId,\n      app_id: happ.name,\n      slots: {},\n    };\n\n    for (const [cellNick, dnaSlot] of Object.entries(happ.slots)) {\n      let dnaHash: string | undefined = undefined;\n      if (typeof dnaSlot.dna === 'string') {\n        dnaHash = dnaSlot.dna;\n        if (!this.registeredDnas[dnaHash])\n          throw new Error(\n            `Trying to reference a Dna that this conductor doesn't have registered`\n          );\n      } else if (typeof dnaSlot.dna === 'object') {\n        dnaHash = hash(dnaSlot.dna, HashType.DNA);\n        this.registeredDnas[dnaHash] = dnaSlot.dna;\n      } else {\n        throw new Error(\n          'Bad DNA Slot: you must pass in the hash of the dna or the simulated Dna object'\n        );\n      }\n\n      this.installedHapps[happ.name].slots[cellNick] = {\n        base_cell_id: [dnaHash, agentId],\n        is_provisioned: !dnaSlot.deferred,\n        clones: [],\n      };\n\n      if (!dnaSlot.deferred) {\n        const cell = await this.createCell(\n          this.registeredDnas[dnaHash],\n          agentId,\n          membrane_proofs[cellNick]\n        );\n      }\n    }\n  }\n\n  private async createCell(\n    dna: SimulatedDna,\n    agentPubKey: string,\n    membraneProof?: any\n  ): Promise<Cell> {\n    const newDnaHash = hash(dna, HashType.DNA);\n\n    const cellId: CellId = [newDnaHash, agentPubKey];\n    const cell = await Cell.create(this, cellId, membraneProof);\n\n    if (!this.cells[cell.dnaHash]) this.cells[cell.dnaHash] = {};\n\n    this.cells[cell.dnaHash][cell.agentPubKey] = cell;\n\n    return cell;\n  }\n\n  /** App API */\n\n  callZomeFn(args: {\n    cellId: CellId;\n    zome: string;\n    fnName: string;\n    payload: any;\n    cap: string;\n  }): Promise<any> {\n    const dnaHash = args.cellId[0];\n    const agentPubKey = args.cellId[1];\n    const cell = this.cells[dnaHash][agentPubKey];\n\n    if (!cell)\n      throw new Error(`No cells existst with cellId ${dnaHash}:${agentPubKey}`);\n\n    return cell.callZomeFn({\n      zome: args.zome,\n      cap: args.cap,\n      fnName: args.fnName,\n      payload: args.payload,\n      provenance: agentPubKey,\n    });\n  }\n}\n","import { Update } from '@holochain-open-dev/core-types';\nimport { GetStrategy } from '../types';\nimport {\n  SimulatedDna,\n  SimulatedHappBundle,\n  SimulatedZome,\n} from './simulated-dna';\n\nexport const demoEntriesZome: SimulatedZome = {\n  name: 'demo_entries',\n  entry_defs: [\n    {\n      id: 'demo_entry',\n      visibility: 'Public',\n    },\n  ],\n  zome_functions: {\n    create_entry: {\n      call: ({ create_entry }) => async ({ content }) => {\n        return create_entry({ content, entry_def_id: 'demo_entry' });\n      },\n      arguments: [{ name: 'content', type: 'any' }],\n    },\n    hash_entry: {\n      call: ({ hash_entry }) => async ({ entry }) => {\n        return hash_entry(entry);\n      },\n      arguments: [{ name: 'entry', type: 'any' }],\n    },\n    get: {\n      call: ({ get }) => ({ hash }) => {\n        return get(hash, { strategy: GetStrategy.Latest });\n      },\n      arguments: [{ name: 'hash', type: 'AnyDhtHash' }],\n    },\n    get_details: {\n      call: ({ get_details }) => ({ hash }) => {\n        return get_details(hash, { strategy: GetStrategy.Latest });\n      },\n      arguments: [{ name: 'hash', type: 'AnyDhtHash' }],\n    },\n    update_entry: {\n      call: ({ update_entry }) => ({\n        original_header_address,\n        new_content,\n      }) => {\n        return update_entry(original_header_address, {\n          content: new_content,\n          entry_def_id: 'demo_entry',\n        });\n      },\n      arguments: [\n        { name: 'original_header_address', type: 'HeaderHash' },\n        { name: 'new_content', type: 'String' },\n      ],\n    },\n    delete_entry: {\n      call: ({ delete_entry }) => ({ deletes_address }) => {\n        return delete_entry(deletes_address);\n      },\n      arguments: [{ name: 'deletes_address', type: 'HeaderHash' }],\n    },\n  },\n  validation_functions: {\n    validate_update_entry_demo_entry: hdk => async ({ element }) => {\n      const update = element.signed_header.header.content as Update;\n      const updateAuthor = update.author;\n\n      const originalHeader = await hdk.get(update.original_header_address);\n\n      if (!originalHeader)\n        return {\n          resolved: false,\n          depsHashes: [update.original_header_address],\n        };\n\n      if (originalHeader.signed_header.header.content.author !== updateAuthor)\n        return {\n          valid: false,\n          resolved: true,\n        };\n\n      return { valid: true, resolved: true };\n    },\n  },\n};\n\nexport const demoLinksZome: SimulatedZome = {\n  name: 'demo_links',\n  entry_defs: [],\n  zome_functions: {\n    create_link: {\n      call: ({ create_link }) => ({ base, target, tag }) => {\n        return create_link({ base, target, tag });\n      },\n      arguments: [\n        { name: 'base', type: 'EntryHash' },\n        { name: 'target', type: 'EntryHash' },\n        { name: 'tag', type: 'any' },\n      ],\n    },\n    get_links: {\n      call: ({ get_links }) => ({ base }) => {\n        return get_links(base);\n      },\n      arguments: [{ name: 'base', type: 'EntryHash' }],\n    },\n    delete_link: {\n      call: ({ delete_link }) => ({ add_link_header }) => {\n        return delete_link(add_link_header);\n      },\n      arguments: [{ name: 'add_link_header', type: 'HeaderHash' }],\n    },\n  },\n  validation_functions: {},\n};\nexport const demoPathsZome: SimulatedZome = {\n  name: 'demo_paths',\n  entry_defs: [\n    {\n      id: 'path',\n      visibility: 'Public',\n    },\n  ],\n  zome_functions: {\n    ensure_path: {\n      call: hdk => ({ path }) => {\n        return hdk.path.ensure(path);\n      },\n      arguments: [{ name: 'path', type: 'String' }],\n    },\n  },\n  validation_functions: {},\n};\n\nexport function demoDna(): SimulatedDna {\n  const zomes = [demoEntriesZome, demoLinksZome, demoPathsZome];\n  return {\n    properties: {},\n    uid: '',\n    zomes,\n  };\n}\n\nexport function demoHapp(): SimulatedHappBundle {\n  return {\n    name: 'demo-happ',\n    description: '',\n    slots: {\n      default: {\n        dna: demoDna(),\n        deferred: false,\n      },\n    },\n  };\n}\n","import {\n  AgentPubKeyB64,\n  AnyDhtHashB64,\n  CellId,\n  Dictionary,\n  DnaHashB64,\n} from '@holochain-open-dev/core-types';\nimport { Cell } from '../core/cell';\nimport {\n  getClosestNeighbors,\n  getFarthestNeighbors,\n} from '../core/network/utils';\n\nexport class BootstrapService {\n  cells: Dictionary<Dictionary<Cell>> = {};\n\n  announceCell(cellId: CellId, cell: Cell) {\n    const dnaHash = cellId[0];\n    const agentPubKey = cellId[1];\n    if (!this.cells[dnaHash]) this.cells[dnaHash] = {};\n    this.cells[dnaHash][agentPubKey] = cell;\n  }\n\n  getNeighborhood(\n    dnaHash: DnaHashB64,\n    basis_dht_hash: AnyDhtHashB64,\n    numNeighbors: number,\n    filteredAgents: AgentPubKeyB64[] = []\n  ): Cell[] {\n    const cells = Object.keys(this.cells[dnaHash]).filter(\n      cellPubKey => !filteredAgents.includes(cellPubKey)\n    );\n\n    const neighborsKeys = getClosestNeighbors(\n      cells,\n      basis_dht_hash,\n      numNeighbors\n    );\n\n    return neighborsKeys.map(pubKey => this.cells[dnaHash][pubKey]);\n  }\n\n  getFarKnownPeers(\n    dnaHash: DnaHashB64,\n    agentPubKey: AgentPubKeyB64,\n    filteredAgents: AgentPubKeyB64[] = []\n  ): Cell[] {\n    const cells = Object.keys(this.cells[dnaHash]).filter(\n      peerPubKey =>\n        peerPubKey !== agentPubKey && !filteredAgents.includes(peerPubKey)\n    );\n\n    const farthestKeys = getFarthestNeighbors(cells, agentPubKey);\n\n    return farthestKeys.map(pubKey => this.cells[dnaHash][pubKey]);\n  }\n}\n","import { BootstrapService } from '../bootstrap/bootstrap-service';\nimport { Conductor } from '../core/conductor';\nimport { SimulatedHappBundle } from '../dnas/simulated-dna';\nimport { uniqueNamesGenerator, Config, names } from 'unique-names-generator';\n\nconst config: Config = {\n  dictionaries: [names],\n};\n\nexport async function createConductors(\n  conductorsToCreate: number,\n  currentConductors: Conductor[],\n  happ: SimulatedHappBundle\n): Promise<Conductor[]> {\n  const bootstrapService =\n    currentConductors.length === 0\n      ? new BootstrapService()\n      : currentConductors[0].network.bootstrapService;\n\n  const newConductorsPromises: Promise<Conductor>[] = [];\n  for (let i = 0; i < conductorsToCreate; i++) {\n    const characterName: string = uniqueNamesGenerator(config);\n    const conductor = Conductor.create(bootstrapService, characterName);\n    newConductorsPromises.push(conductor);\n  }\n\n  const newConductors = await Promise.all(newConductorsPromises);\n\n  const allConductors = [...currentConductors, ...newConductors];\n\n  await Promise.all(allConductors.map(async c => c.installHapp(happ, {})));\n\n  return allConductors;\n}\n"],"names":["m","v","b2b","b2s","blake","ValidationStatus"],"mappings":"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"}